{{- if eq .Values.database.mode "managed" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arches.fullname" . }}-postgres
  namespace: {{ .Values.infrastructure.namespace }}
  labels:
    {{- include "arches.labels" . | nindent 4 }}
    app.kubernetes.io/component: postgres
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "arches.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: postgres
  template:
    metadata:
      labels:
        {{- include "arches.labels" . | nindent 8 }}
        app.kubernetes.io/component: postgres
    spec:
      {{- with .Values.infrastructure.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "arches.serviceAccountName" . }}
      containers:
        - name: postgres
          image: "{{ .Values.infrastructure.images.imageRegistry }}{{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}"
          imagePullPolicy: {{ .Values.database.image.pullPolicy }}
          ports:
            - name: postgres
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.database.auth.database }}
            - name: POSTGRES_USER
              value: admin
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.auth.password }}
            - name: POSTGRES_HOST
              value: localhost
            - name: POSTGRES_PORT
              value: "5432"
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          {{- if .Values.database.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          {{- end }}
          resources:
            {{- toYaml .Values.database.resources | nindent 12 }}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U admin -d {{ .Values.database.auth.database }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            exec:
              command:
                - /bin/sh  
                - -c
                - exec pg_isready -U admin -d {{ .Values.database.auth.database }} -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
      {{- if .Values.database.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "arches.fullname" . }}-postgres
      {{- end }}
{{- end }}