// Code generated by archesai/codegen. DO NOT EDIT.

package members

import (
	"context"
	"log/slog"
)

// StrictServer implements StrictServerInterface by delegating to the service
type StrictServer struct {
	service ServiceInterface
	logger  *slog.Logger
}

// NewStrictServer creates a new strict server that implements StrictServerInterface
func NewStrictServer(service ServiceInterface, logger *slog.Logger) StrictServerInterface {
	return &StrictServer{
		service: service,
		logger:  logger,
	}
}

// CreateMember handles the create member endpoint
func (s *StrictServer) CreateMember(ctx context.Context, request CreateMemberRequestObject) (CreateMemberResponseObject, error) {
	return s.service.Create(ctx, request)
}

// GetMember handles the get member endpoint
func (s *StrictServer) GetMember(ctx context.Context, request GetMemberRequestObject) (GetMemberResponseObject, error) {
	return s.service.Get(ctx, request)
}

// UpdateMember handles the update member endpoint
func (s *StrictServer) UpdateMember(ctx context.Context, request UpdateMemberRequestObject) (UpdateMemberResponseObject, error) {
	return s.service.Update(ctx, request)
}

// DeleteMember handles the delete member endpoint
func (s *StrictServer) DeleteMember(ctx context.Context, request DeleteMemberRequestObject) (DeleteMemberResponseObject, error) {
	return s.service.Delete(ctx, request)
}

// ListMembers handles the list members endpoint
func (s *StrictServer) ListMembers(ctx context.Context, request ListMembersRequestObject) (ListMembersResponseObject, error) {
	return s.service.List(ctx, request)
}
