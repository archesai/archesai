// Code generated by archesai/codegen. DO NOT EDIT.

package tools

import (
	"context"
	"log/slog"
)

// StrictServer implements StrictServerInterface by delegating to the service
type StrictServer struct {
	service ServiceInterface
	logger  *slog.Logger
}

// NewStrictServer creates a new strict server that implements StrictServerInterface
func NewStrictServer(service ServiceInterface, logger *slog.Logger) StrictServerInterface {
	return &StrictServer{
		service: service,
		logger:  logger,
	}
}

// CreateTool handles the create tool endpoint
func (s *StrictServer) CreateTool(ctx context.Context, request CreateToolRequestObject) (CreateToolResponseObject, error) {
	return s.service.Create(ctx, request)
}

// GetTool handles the get tool endpoint
func (s *StrictServer) GetTool(ctx context.Context, request GetToolRequestObject) (GetToolResponseObject, error) {
	return s.service.Get(ctx, request)
}

// UpdateTool handles the update tool endpoint
func (s *StrictServer) UpdateTool(ctx context.Context, request UpdateToolRequestObject) (UpdateToolResponseObject, error) {
	return s.service.Update(ctx, request)
}

// DeleteTool handles the delete tool endpoint
func (s *StrictServer) DeleteTool(ctx context.Context, request DeleteToolRequestObject) (DeleteToolResponseObject, error) {
	return s.service.Delete(ctx, request)
}

// ListTools handles the list tools endpoint
func (s *StrictServer) ListTools(ctx context.Context, request ListToolsRequestObject) (ListToolsResponseObject, error) {
	return s.service.List(ctx, request)
}
