// Code generated by archesai codegen. DO NOT EDIT.
package tools

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for ListToolsParamsSortField.
const (
	ToolsCreatedAt      ListToolsParamsSortField = "createdAt"
	ToolsDescription    ListToolsParamsSortField = "description"
	ToolsID             ListToolsParamsSortField = "id"
	ToolsInputMimeType  ListToolsParamsSortField = "inputMimeType"
	ToolsName           ListToolsParamsSortField = "name"
	ToolsOrganizationID ListToolsParamsSortField = "organizationID"
	ToolsOutputMimeType ListToolsParamsSortField = "outputMimeType"
	ToolsUpdatedAt      ListToolsParamsSortField = "updatedAt"
)

// Defines values for ListToolsParamsSortOrder.
const (
	ToolsAsc  ListToolsParamsSortOrder = "asc"
	ToolsDesc ListToolsParamsSortOrder = "desc"
)

// ListToolsParamsSortField represents the type for ListToolsParamsSortField enum values.
type ListToolsParamsSortField string

// ListToolsParamsSortOrder represents the type for ListToolsParamsSortOrder enum values.
type ListToolsParamsSortOrder string

// CreateToolResponse
type CreateToolResponse = Tool

// UpdateToolResponse
type UpdateToolResponse = Tool

// GetToolResponse
type GetToolResponse = Tool

// Tool Schema for Tool entity
type Tool struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// Description The tool description
	Description string `json:"description" yaml:"description"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// InputMimeType The MIME type of the input for the tool, e.g. text/plain
	InputMimeType string `json:"inputMimeType" yaml:"inputMimeType"`
	// Name The name of the tool
	Name string `json:"name" yaml:"name"`
	// OrganizationID The organization that owns this tool
	OrganizationID uuid.UUID `json:"organizationID" yaml:"organizationID"`
	// OutputMimeType The MIME type of the output for the tool, e.g. text/plain
	OutputMimeType string `json:"outputMimeType" yaml:"outputMimeType"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// CreateToolRequestBody Request body for createTool
type CreateToolRequestBody struct {
	// Description The tools description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The tools name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateToolRequestBody Request body for updateTool
type UpdateToolRequestBody struct {
	// Description The tools description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The tools name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListToolsParams Parameters for listing tools
type ListToolsParams struct {
	// Filter Filter parameters
	Filter *ListToolsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListToolsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListToolsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListToolsParamsFilter Filter tools by field values
type ListToolsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListToolsParamsPage Pagination parameters for listing tools
type ListToolsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListToolsParamsSort Sort tools by field and order
type ListToolsParamsSort struct {
	// Field Field to sort by
	Field ListToolsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListToolsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteToolResponse Response for deleting a tool
type DeleteToolResponse struct {
}

// ListToolsResponse Response for listing tools
type ListToolsResponse struct {
	// Data List of tools
	Data []*Tool `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
