// Code generated by archesai/codegen. DO NOT EDIT.

package invitations

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetInvitationQuery represents a query to get invitation.
type GetInvitationQuery struct {
	SessionID      uuid.UUID
	OrganizationID uuid.UUID
	ID             uuid.UUID
}

// NewGetInvitationQuery creates a new get invitation query.
func NewGetInvitationQuery(
	SessionID uuid.UUID,
	organizationID uuid.UUID,
	id uuid.UUID,
) *GetInvitationQuery {
	return &GetInvitationQuery{
		SessionID:      SessionID,
		OrganizationID: organizationID,
		ID:             id,
	}
}

// GetInvitationQueryHandler handles the get invitation query.
type GetInvitationQueryHandler struct {
	repo repositories.InvitationRepository
}

// NewGetInvitationQueryHandler creates a new get invitation query handler.
func NewGetInvitationQueryHandler(repo repositories.InvitationRepository) *GetInvitationQueryHandler {
	return &GetInvitationQueryHandler{
		repo: repo,
	}
}

// Handle executes the get invitation query.
func (h *GetInvitationQueryHandler) Handle(ctx context.Context, query *GetInvitationQuery) (*entities.Invitation, error) {
	// Use path parameters to get the entity
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get invitation: %w", err)
	}
	return result, nil
}
