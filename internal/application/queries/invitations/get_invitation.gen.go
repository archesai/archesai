// Code generated by archesai/codegen. DO NOT EDIT.

package invitations

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/errors"
	"github.com/archesai/archesai/internal/core/repositories"
	"github.com/archesai/archesai/internal/core/valueobjects"
)

// GetInvitationQuery represents a query to get a invitation.
type GetInvitationQuery struct {
	ID valueobjects.InvitationID
}

// NewGetInvitationQuery creates a new get invitation query.
func NewGetInvitationQuery(id valueobjects.InvitationID) *GetInvitationQuery {
	return &GetInvitationQuery{
		ID: id,
	}
}

// GetInvitationQueryHandler handles the get invitation query.
type GetInvitationQueryHandler struct {
	repo repositories.InvitationRepository
}

// NewGetInvitationQueryHandler creates a new get invitation query handler.
func NewGetInvitationQueryHandler(repo repositories.InvitationRepository) *GetInvitationQueryHandler {
	return &GetInvitationQueryHandler{
		repo: repo,
	}
}

// Handle executes the get invitation query.
func (h *GetInvitationQueryHandler) Handle(ctx context.Context, query *GetInvitationQuery) (*entities.Invitation, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, errors.Wrap(err, "failed to get invitation")
	}
	return result, nil
}
