// Code generated by archesai/codegen. DO NOT EDIT.

package sessions

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetSessionQuery represents a query to get a session.
type GetSessionQuery struct {
	ID uuid.UUID
}

// NewGetSessionQuery creates a new get session query.
func NewGetSessionQuery(id uuid.UUID) *GetSessionQuery {
	return &GetSessionQuery{
		ID: id,
	}
}

// GetSessionQueryHandler handles the get session query.
type GetSessionQueryHandler struct {
	repo repositories.SessionRepository
}

// NewGetSessionQueryHandler creates a new get session query handler.
func NewGetSessionQueryHandler(repo repositories.SessionRepository) *GetSessionQueryHandler {
	return &GetSessionQueryHandler{
		repo: repo,
	}
}

// Handle executes the get session query.
func (h *GetSessionQueryHandler) Handle(ctx context.Context, query *GetSessionQuery) (*entities.Session, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get session: %w", err)
	}
	return result, nil
}
