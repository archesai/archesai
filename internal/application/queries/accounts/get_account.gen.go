// Code generated by archesai/codegen. DO NOT EDIT.

package accounts

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/errors"
	"github.com/archesai/archesai/internal/core/repositories"
	"github.com/archesai/archesai/internal/core/valueobjects"
)

// GetAccountQuery represents a query to get a account.
type GetAccountQuery struct {
	ID valueobjects.AccountID
}

// NewGetAccountQuery creates a new get account query.
func NewGetAccountQuery(id valueobjects.AccountID) *GetAccountQuery {
	return &GetAccountQuery{
		ID: id,
	}
}

// GetAccountQueryHandler handles the get account query.
type GetAccountQueryHandler struct {
	repo repositories.AccountRepository
}

// NewGetAccountQueryHandler creates a new get account query handler.
func NewGetAccountQueryHandler(repo repositories.AccountRepository) *GetAccountQueryHandler {
	return &GetAccountQueryHandler{
		repo: repo,
	}
}

// Handle executes the get account query.
func (h *GetAccountQueryHandler) Handle(ctx context.Context, query *GetAccountQuery) (*entities.Account, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, errors.Wrap(err, "failed to get account")
	}
	return result, nil
}
