// Code generated by archesai/codegen. DO NOT EDIT.

package members

import (
	"context"
	"fmt"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// ListMembersQuery represents a query to list members.
type ListMembersQuery struct {
	Limit          int
	Offset         int
	OrderBy        string
	OrderDirection string
}

// NewListMembersQuery creates a new list members query.
func NewListMembersQuery() *ListMembersQuery {
	return &ListMembersQuery{
		Limit:  100,
		Offset: 0,
	}
}

// ListMembersQueryHandler handles the list members query.
type ListMembersQueryHandler struct {
	repo repositories.MemberRepository
}

// NewListMembersQueryHandler creates a new list members query handler.
func NewListMembersQueryHandler(repo repositories.MemberRepository) *ListMembersQueryHandler {
	return &ListMembersQueryHandler{
		repo: repo,
	}
}

// Handle executes the list members query.
func (h *ListMembersQueryHandler) Handle(ctx context.Context, query *ListMembersQuery) ([]*entities.Member, int64, error) {
	// Convert to int32 for repository
	limit := int32(query.Limit)
	offset := int32(query.Offset)

	// Execute query with pagination
	results, total, err := h.repo.List(ctx, limit, offset)
	if err != nil {
		return nil, 0, fmt.Errorf("failed to list members: %w", err)
	}

	return results, total, nil
}
