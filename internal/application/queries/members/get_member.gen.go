// Code generated by archesai/codegen. DO NOT EDIT.

package members

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetMemberQuery represents a query to get a member.
type GetMemberQuery struct {
	ID uuid.UUID
}

// NewGetMemberQuery creates a new get member query.
func NewGetMemberQuery(id uuid.UUID) *GetMemberQuery {
	return &GetMemberQuery{
		ID: id,
	}
}

// GetMemberQueryHandler handles the get member query.
type GetMemberQueryHandler struct {
	repo repositories.MemberRepository
}

// NewGetMemberQueryHandler creates a new get member query handler.
func NewGetMemberQueryHandler(repo repositories.MemberRepository) *GetMemberQueryHandler {
	return &GetMemberQueryHandler{
		repo: repo,
	}
}

// Handle executes the get member query.
func (h *GetMemberQueryHandler) Handle(ctx context.Context, query *GetMemberQuery) (*entities.Member, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get member: %w", err)
	}
	return result, nil
}
