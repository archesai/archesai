// Code generated by archesai/codegen. DO NOT EDIT.

package pipelines

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetPipelineQuery represents a query to get a pipeline.
type GetPipelineQuery struct {
	ID uuid.UUID
}

// NewGetPipelineQuery creates a new get pipeline query.
func NewGetPipelineQuery(id uuid.UUID) *GetPipelineQuery {
	return &GetPipelineQuery{
		ID: id,
	}
}

// GetPipelineQueryHandler handles the get pipeline query.
type GetPipelineQueryHandler struct {
	repo repositories.PipelineRepository
}

// NewGetPipelineQueryHandler creates a new get pipeline query handler.
func NewGetPipelineQueryHandler(repo repositories.PipelineRepository) *GetPipelineQueryHandler {
	return &GetPipelineQueryHandler{
		repo: repo,
	}
}

// Handle executes the get pipeline query.
func (h *GetPipelineQueryHandler) Handle(ctx context.Context, query *GetPipelineQuery) (*entities.Pipeline, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get pipeline: %w", err)
	}
	return result, nil
}
