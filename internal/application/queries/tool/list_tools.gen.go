// Code generated by archesai. DO NOT EDIT.

package tool

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// ListToolsQuery represents a query to get tool.
type ListToolsQuery struct {
	SessionID uuid.UUID
}

// NewListToolsQuery creates a new get tool query.
func NewListToolsQuery(
	SessionID uuid.UUID,
) *ListToolsQuery {
	return &ListToolsQuery{
		SessionID: SessionID,
	}
}

// ListToolsQueryHandler handles the get tool query.
type ListToolsQueryHandler struct {
	repo repositories.ToolRepository
}

// NewListToolsQueryHandler creates a new get tool query handler.
func NewListToolsQueryHandler(repo repositories.ToolRepository) *ListToolsQueryHandler {
	return &ListToolsQueryHandler{
		repo: repo,
	}
}

// Handle executes the list tools query.
func (h *ListToolsQueryHandler) Handle(ctx context.Context, query *ListToolsQuery) ([]*entities.Tool, int64, error) {
	// TODO: Apply filters based on query parameters
	results, total, err := h.repo.List(ctx, 100, 0)
	if err != nil {
		return nil, 0, fmt.Errorf("failed to list tools: %w", err)
	}

	return results, total, nil
}
