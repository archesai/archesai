// Code generated by archesai. DO NOT EDIT.

package tool

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetToolQuery represents a query to get tool.
type GetToolQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetToolQuery creates a new get tool query.
func NewGetToolQuery(
	SessionID uuid.UUID,
	ID uuid.UUID,
) *GetToolQuery {
	return &GetToolQuery{
		SessionID: SessionID,
		ID:        ID,
	}
}

// GetToolQueryHandler handles the get tool query.
type GetToolQueryHandler struct {
	repo repositories.ToolRepository
}

// NewGetToolQueryHandler creates a new get tool query handler.
func NewGetToolQueryHandler(repo repositories.ToolRepository) *GetToolQueryHandler {
	return &GetToolQueryHandler{
		repo: repo,
	}
}

// Handle executes the get tool query.
func (h *GetToolQueryHandler) Handle(ctx context.Context, query *GetToolQuery) (*entities.Tool, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get tool: %w", err)
	}
	return result, nil
}
