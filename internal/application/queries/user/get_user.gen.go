// Code generated by archesai. DO NOT EDIT.

package user

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetUserQuery represents a query to get user.
type GetUserQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetUserQuery creates a new get user query.
func NewGetUserQuery(
	SessionID uuid.UUID,
	ID uuid.UUID,
) *GetUserQuery {
	return &GetUserQuery{
		SessionID: SessionID,
		ID:        ID,
	}
}

// GetUserQueryHandler handles the get user query.
type GetUserQueryHandler struct {
	repo repositories.UserRepository
}

// NewGetUserQueryHandler creates a new get user query handler.
func NewGetUserQueryHandler(repo repositories.UserRepository) *GetUserQueryHandler {
	return &GetUserQueryHandler{
		repo: repo,
	}
}

// Handle executes the get user query.
func (h *GetUserQueryHandler) Handle(ctx context.Context, query *GetUserQuery) (*entities.User, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get user: %w", err)
	}
	return result, nil
}
