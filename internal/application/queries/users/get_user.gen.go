// Code generated by archesai/codegen. DO NOT EDIT.

package users

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/errors"
	"github.com/archesai/archesai/internal/core/repositories"
	"github.com/archesai/archesai/internal/core/valueobjects"
)

// GetUserQuery represents a query to get a user.
type GetUserQuery struct {
	ID valueobjects.UserID
}

// NewGetUserQuery creates a new get user query.
func NewGetUserQuery(id valueobjects.UserID) *GetUserQuery {
	return &GetUserQuery{
		ID: id,
	}
}

// GetUserQueryHandler handles the get user query.
type GetUserQueryHandler struct {
	repo repositories.UserRepository
}

// NewGetUserQueryHandler creates a new get user query handler.
func NewGetUserQueryHandler(repo repositories.UserRepository) *GetUserQueryHandler {
	return &GetUserQueryHandler{
		repo: repo,
	}
}

// Handle executes the get user query.
func (h *GetUserQueryHandler) Handle(ctx context.Context, query *GetUserQuery) (*entities.User, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, errors.Wrap(err, "failed to get user")
	}
	return result, nil
}
