// Code generated by archesai/codegen. DO NOT EDIT.

package artifacts

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/errors"
	"github.com/archesai/archesai/internal/core/repositories"
	"github.com/archesai/archesai/internal/core/valueobjects"
)

// GetArtifactQuery represents a query to get a artifact.
type GetArtifactQuery struct {
	ID valueobjects.ArtifactID
}

// NewGetArtifactQuery creates a new get artifact query.
func NewGetArtifactQuery(id valueobjects.ArtifactID) *GetArtifactQuery {
	return &GetArtifactQuery{
		ID: id,
	}
}

// GetArtifactQueryHandler handles the get artifact query.
type GetArtifactQueryHandler struct {
	repo repositories.ArtifactRepository
}

// NewGetArtifactQueryHandler creates a new get artifact query handler.
func NewGetArtifactQueryHandler(repo repositories.ArtifactRepository) *GetArtifactQueryHandler {
	return &GetArtifactQueryHandler{
		repo: repo,
	}
}

// Handle executes the get artifact query.
func (h *GetArtifactQueryHandler) Handle(ctx context.Context, query *GetArtifactQuery) (*entities.Artifact, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, errors.Wrap(err, "failed to get artifact")
	}
	return result, nil
}
