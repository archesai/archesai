// Code generated by archesai/codegen. DO NOT EDIT.

package artifacts

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetArtifactQuery represents a query to get artifact.
type GetArtifactQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetArtifactQuery creates a new get artifact query.
func NewGetArtifactQuery(
	SessionID uuid.UUID,
	id uuid.UUID,
) *GetArtifactQuery {
	return &GetArtifactQuery{
		SessionID: SessionID,
		ID:        id,
	}
}

// GetArtifactQueryHandler handles the get artifact query.
type GetArtifactQueryHandler struct {
	repo repositories.ArtifactRepository
}

// NewGetArtifactQueryHandler creates a new get artifact query handler.
func NewGetArtifactQueryHandler(repo repositories.ArtifactRepository) *GetArtifactQueryHandler {
	return &GetArtifactQueryHandler{
		repo: repo,
	}
}

// Handle executes the get artifact query.
func (h *GetArtifactQueryHandler) Handle(ctx context.Context, query *GetArtifactQuery) (*entities.Artifact, error) {
	// Use path parameters to get the entity
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get artifact: %w", err)
	}
	return result, nil
}
