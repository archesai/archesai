// Code generated by archesai. DO NOT EDIT.

package auth

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetAccountQuery represents a query to get auth.
type GetAccountQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetAccountQuery creates a new get auth query.
func NewGetAccountQuery(
	SessionID uuid.UUID,
	ID uuid.UUID,
) *GetAccountQuery {
	return &GetAccountQuery{
		SessionID: SessionID,
		ID:        ID,
	}
}

// GetAccountQueryHandler handles the get auth query.
type GetAccountQueryHandler struct {
	repo repositories.AccountRepository
}

// NewGetAccountQueryHandler creates a new get auth query handler.
func NewGetAccountQueryHandler(repo repositories.AccountRepository) *GetAccountQueryHandler {
	return &GetAccountQueryHandler{
		repo: repo,
	}
}

// Handle executes the get auth query.
func (h *GetAccountQueryHandler) Handle(ctx context.Context, query *GetAccountQuery) (*entities.Account, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get auth: %w", err)
	}
	return result, nil
}
