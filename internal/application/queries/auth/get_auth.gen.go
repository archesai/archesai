// Code generated by archesai/codegen. DO NOT EDIT.

package auth

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetAuthQuery represents a query to get a auth.
type GetAuthQuery struct {
	ID uuid.UUID
}

// NewGetAuthQuery creates a new get auth query.
func NewGetAuthQuery(id uuid.UUID) *GetAuthQuery {
	return &GetAuthQuery{
		ID: id,
	}
}

// GetAuthQueryHandler handles the get auth query.
type GetAuthQueryHandler struct {
	repo repositories.AuthRepository
}

// NewGetAuthQueryHandler creates a new get auth query handler.
func NewGetAuthQueryHandler(repo repositories.AuthRepository) *GetAuthQueryHandler {
	return &GetAuthQueryHandler{
		repo: repo,
	}
}

// Handle executes the get auth query.
func (h *GetAuthQueryHandler) Handle(ctx context.Context, query *GetAuthQuery) (*entities.Auth, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get auth: %w", err)
	}
	return result, nil
}
