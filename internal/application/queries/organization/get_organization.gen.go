// Code generated by archesai. DO NOT EDIT.

package organization

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetOrganizationQuery represents a query to get organization.
type GetOrganizationQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetOrganizationQuery creates a new get organization query.
func NewGetOrganizationQuery(
	SessionID uuid.UUID,
	ID uuid.UUID,
) *GetOrganizationQuery {
	return &GetOrganizationQuery{
		SessionID: SessionID,
		ID:        ID,
	}
}

// GetOrganizationQueryHandler handles the get organization query.
type GetOrganizationQueryHandler struct {
	repo repositories.OrganizationRepository
}

// NewGetOrganizationQueryHandler creates a new get organization query handler.
func NewGetOrganizationQueryHandler(repo repositories.OrganizationRepository) *GetOrganizationQueryHandler {
	return &GetOrganizationQueryHandler{
		repo: repo,
	}
}

// Handle executes the get organization query.
func (h *GetOrganizationQueryHandler) Handle(ctx context.Context, query *GetOrganizationQuery) (*entities.Organization, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get organization: %w", err)
	}
	return result, nil
}
