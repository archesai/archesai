// Code generated by archesai/codegen. DO NOT EDIT.

package health

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/errors"
	"github.com/archesai/archesai/internal/core/repositories"
	"github.com/archesai/archesai/internal/core/valueobjects"
)

// GetHealthQuery represents a query to get a health.
type GetHealthQuery struct {
	ID valueobjects.HealthID
}

// NewGetHealthQuery creates a new get health query.
func NewGetHealthQuery(id valueobjects.HealthID) *GetHealthQuery {
	return &GetHealthQuery{
		ID: id,
	}
}

// GetHealthQueryHandler handles the get health query.
type GetHealthQueryHandler struct {
	repo repositories.HealthRepository
}

// NewGetHealthQueryHandler creates a new get health query handler.
func NewGetHealthQueryHandler(repo repositories.HealthRepository) *GetHealthQueryHandler {
	return &GetHealthQueryHandler{
		repo: repo,
	}
}

// Handle executes the get health query.
func (h *GetHealthQueryHandler) Handle(ctx context.Context, query *GetHealthQuery) (*entities.Health, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, errors.Wrap(err, "failed to get health")
	}
	return result, nil
}
