// Code generated by archesai/codegen. DO NOT EDIT.

package runs

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetRunQuery represents a query to get run.
type GetRunQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetRunQuery creates a new get run query.
func NewGetRunQuery(
	SessionID uuid.UUID,
	id uuid.UUID,
) *GetRunQuery {
	return &GetRunQuery{
		SessionID: SessionID,
		ID:        id,
	}
}

// GetRunQueryHandler handles the get run query.
type GetRunQueryHandler struct {
	repo repositories.RunRepository
}

// NewGetRunQueryHandler creates a new get run query handler.
func NewGetRunQueryHandler(repo repositories.RunRepository) *GetRunQueryHandler {
	return &GetRunQueryHandler{
		repo: repo,
	}
}

// Handle executes the get run query.
func (h *GetRunQueryHandler) Handle(ctx context.Context, query *GetRunQuery) (*entities.Run, error) {
	// Use path parameters to get the entity
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get run: %w", err)
	}
	return result, nil
}
