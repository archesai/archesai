// Code generated by archesai/codegen. DO NOT EDIT.

package labels

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetLabelQuery represents a query to get a label.
type GetLabelQuery struct {
	ID uuid.UUID
}

// NewGetLabelQuery creates a new get label query.
func NewGetLabelQuery(id uuid.UUID) *GetLabelQuery {
	return &GetLabelQuery{
		ID: id,
	}
}

// GetLabelQueryHandler handles the get label query.
type GetLabelQueryHandler struct {
	repo repositories.LabelRepository
}

// NewGetLabelQueryHandler creates a new get label query handler.
func NewGetLabelQueryHandler(repo repositories.LabelRepository) *GetLabelQueryHandler {
	return &GetLabelQueryHandler{
		repo: repo,
	}
}

// Handle executes the get label query.
func (h *GetLabelQueryHandler) Handle(ctx context.Context, query *GetLabelQuery) (*entities.Label, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get label: %w", err)
	}
	return result, nil
}
