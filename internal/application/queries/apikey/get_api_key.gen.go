// Code generated by archesai. DO NOT EDIT.

package apikey

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/archesai/archesai/internal/core/repositories"
)

// GetAPIKeyQuery represents a query to get apikey.
type GetAPIKeyQuery struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewGetAPIKeyQuery creates a new get apikey query.
func NewGetAPIKeyQuery(
	SessionID uuid.UUID,
	ID uuid.UUID,
) *GetAPIKeyQuery {
	return &GetAPIKeyQuery{
		SessionID: SessionID,
		ID:        ID,
	}
}

// GetAPIKeyQueryHandler handles the get apikey query.
type GetAPIKeyQueryHandler struct {
	repo repositories.APIKeyRepository
}

// NewGetAPIKeyQueryHandler creates a new get apikey query handler.
func NewGetAPIKeyQueryHandler(repo repositories.APIKeyRepository) *GetAPIKeyQueryHandler {
	return &GetAPIKeyQueryHandler{
		repo: repo,
	}
}

// Handle executes the get apikey query.
func (h *GetAPIKeyQueryHandler) Handle(ctx context.Context, query *GetAPIKeyQuery) (*entities.APIKey, error) {
	result, err := h.repo.Get(ctx, query.ID)
	if err != nil {
		return nil, fmt.Errorf("failed to get apikey: %w", err)
	}
	return result, nil
}
