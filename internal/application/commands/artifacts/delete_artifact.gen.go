// Code generated by archesai/codegen. DO NOT EDIT.

package artifacts

import (
	"context"
	"fmt"

	"github.com/google/uuid"

	"github.com/archesai/archesai/internal/core/events"
	"github.com/archesai/archesai/internal/core/repositories"
)

// DeleteArtifactCommand represents the command to delete a artifact.
type DeleteArtifactCommand struct {
	SessionID uuid.UUID
	ID        uuid.UUID
}

// NewDeleteArtifactCommand creates a new delete artifact command.
func NewDeleteArtifactCommand(
	SessionID uuid.UUID,
	id uuid.UUID,
) *DeleteArtifactCommand {
	return &DeleteArtifactCommand{
		SessionID: SessionID,
		ID:        id,
	}
}

// DeleteArtifactCommandHandler handles the delete artifact command.
type DeleteArtifactCommandHandler struct {
	repo      repositories.ArtifactRepository
	publisher events.Publisher
}

// NewDeleteArtifactCommandHandler creates a new delete artifact command handler.
func NewDeleteArtifactCommandHandler(
	repo repositories.ArtifactRepository,
	publisher events.Publisher,
) *DeleteArtifactCommandHandler {
	return &DeleteArtifactCommandHandler{
		repo:      repo,
		publisher: publisher,
	}
}

// Handle executes the delete artifact command.
func (h *DeleteArtifactCommandHandler) Handle(ctx context.Context, cmd *DeleteArtifactCommand) error {
	// Delete from repository
	if err := h.repo.Delete(ctx, cmd.ID); err != nil {
		return fmt.Errorf("failed to delete artifact: %w", err)
	}

	// Publish domain event
	event := events.NewArtifactDeletedEvent(cmd.ID)
	if err := h.publisher.Publish(ctx, event); err != nil {
		// Log error but don't fail the operation
	}

	return nil
}
