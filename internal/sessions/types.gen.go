// Package sessions provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package sessions

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes    = "bearerAuth.Scopes"
	SessionCookieScopes = "sessionCookie.Scopes"
)

// Defines values for SessionsFindManyParamsSortField.
const (
	ActiveOrganizationId SessionsFindManyParamsSortField = "activeOrganizationId"
	CreatedAt            SessionsFindManyParamsSortField = "createdAt"
	ExpiresAt            SessionsFindManyParamsSortField = "expiresAt"
	Id                   SessionsFindManyParamsSortField = "id"
	IpAddress            SessionsFindManyParamsSortField = "ipAddress"
	Token                SessionsFindManyParamsSortField = "token"
	UpdatedAt            SessionsFindManyParamsSortField = "updatedAt"
	UserAgent            SessionsFindManyParamsSortField = "userAgent"
	UserId               SessionsFindManyParamsSortField = "userId"
)

// Defines values for SessionsFindManyParamsSortOrder.
const (
	Asc  SessionsFindManyParamsSortOrder = "asc"
	Desc SessionsFindManyParamsSortOrder = "desc"
)

// FilterNode A recursive filter node that can be a condition or group
type FilterNode = interface{}

// Page Pagination (page number & size)
type Page struct {
	Number int `json:"number,omitempty,omitzero" yaml:"number,omitempty"`
	Size   int `json:"size,omitempty,omitzero" yaml:"size,omitempty"`
}

// Problem RFC 7807 (Problem Details) compliant error response
type Problem struct {
	// Detail Human-readable explanation specific to this occurrence
	Detail string `json:"detail" yaml:"detail"`

	// Errors Additional validation errors for specific fields
	Errors []ValidationError `json:"errors,omitempty,omitzero" yaml:"errors,omitempty"`

	// Instance URI identifying the specific occurrence
	Instance string `json:"instance,omitempty,omitzero" yaml:"instance,omitempty"`

	// Status HTTP status code
	Status int `json:"status" yaml:"status"`

	// Title Short, human-readable summary
	Title string `json:"title" yaml:"title"`

	// Type URI identifying the problem type
	Type string `json:"type" yaml:"type"`
}

// Session Schema for Session entity
type Session struct {
	// ActiveOrganizationId The active organization ID
	ActiveOrganizationId openapi_types.UUID `json:"activeOrganizationId" yaml:"activeOrganizationId"`

	// CreatedAt The date this item was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`

	// ExpiresAt The expiration date of the session
	ExpiresAt string `json:"expiresAt" yaml:"expiresAt"`

	// Id The ID of the item
	Id openapi_types.UUID `json:"id" yaml:"id"`

	// IpAddress The IP address of the session
	IpAddress string `json:"ipAddress" yaml:"ipAddress"`

	// Token The session token
	Token string `json:"token" yaml:"token"`

	// UpdatedAt The date this item was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`

	// UserAgent The user agent of the session
	UserAgent string `json:"userAgent" yaml:"userAgent"`

	// UserId The ID of the user associated with the session
	UserId openapi_types.UUID `json:"userId" yaml:"userId"`
}

// TokenResponse defines model for TokenResponse.
type TokenResponse struct {
	// AccessToken JWT access token for API authentication
	AccessToken string `json:"access_token" yaml:"access_token"`

	// ExpiresIn Access token expiration time in seconds
	ExpiresIn int64 `json:"expires_in" yaml:"expires_in"`

	// RefreshToken Refresh token for obtaining new access tokens
	RefreshToken string `json:"refresh_token" yaml:"refresh_token"`

	// TokenType Type of token (always "Bearer")
	TokenType string `json:"token_type" yaml:"token_type"`
}

// ValidationError Individual field validation error
type ValidationError struct {
	// Field The field path that failed validation
	Field string `json:"field" yaml:"field"`

	// Message Human-readable error message
	Message string `json:"message" yaml:"message"`

	// Value The invalid value that was provided
	Value ValidationError_Value `json:"value,omitempty,omitzero" yaml:"value,omitempty"`
}

// ValidationErrorValue0 defines model for .
type ValidationErrorValue0 = string

// ValidationErrorValue1 defines model for .
type ValidationErrorValue1 = float32

// ValidationErrorValue2 defines model for .
type ValidationErrorValue2 = bool

// ValidationError_Value The invalid value that was provided
type ValidationError_Value struct {
	union json.RawMessage
}

// PageQuery Pagination (page number & size)
type PageQuery = Page

// SessionsFilter A recursive filter node that can be a condition or group
type SessionsFilter = FilterNode

// SessionsSort defines model for SessionsSort.
type SessionsSort = []struct {
	Field string `json:"field" yaml:"field"`
	Order string `json:"order" yaml:"order"`
}

// BadRequest RFC 7807 (Problem Details) compliant error response
type BadRequest = Problem

// NotFound RFC 7807 (Problem Details) compliant error response
type NotFound = Problem

// Unauthorized RFC 7807 (Problem Details) compliant error response
type Unauthorized = Problem

// SessionsFindManyParams defines parameters for SessionsFindMany.
type SessionsFindManyParams struct {
	// Filter Filter sessions by field values. Supported fields:
	// - createdAt, id, updatedAt, activeOrganizationId, expiresAt
	// - ipAddress, token, userAgent, userId
	Filter SessionsFilter `json:"filter,omitempty,omitzero" yaml:"filter,omitempty"`

	// Page The page parameter
	Page PageQuery `form:"page,omitempty" json:"page,omitempty,omitzero" yaml:"page,omitempty"`

	// Sort The sort parameter
	Sort SessionsSort `form:"sort,omitempty" json:"sort,omitempty,omitzero" yaml:"sort,omitempty"`
}

// SessionsFindManyParamsSortField defines parameters for SessionsFindMany.
type SessionsFindManyParamsSortField string

// SessionsFindManyParamsSortOrder defines parameters for SessionsFindMany.
type SessionsFindManyParamsSortOrder string

// SessionsCreateJSONBody defines parameters for SessionsCreate.
type SessionsCreateJSONBody struct {
	// Email The email address associated with the account
	Email openapi_types.Email `json:"email" yaml:"email"`

	// Password The password for the account
	Password string `json:"password" yaml:"password"`

	// RememberMe Whether to create a long-lived session
	RememberMe bool `json:"rememberMe,omitempty,omitzero" yaml:"rememberMe,omitempty"`
}

// UpdateSessionJSONBody defines parameters for UpdateSession.
type UpdateSessionJSONBody struct {
	// ActiveOrganizationId The active organization ID
	ActiveOrganizationId string `json:"activeOrganizationId" yaml:"activeOrganizationId"`
}

// SessionsCreateJSONRequestBody defines body for SessionsCreate for application/json ContentType.
type SessionsCreateJSONRequestBody SessionsCreateJSONBody

// UpdateSessionJSONRequestBody defines body for UpdateSession for application/json ContentType.
type UpdateSessionJSONRequestBody UpdateSessionJSONBody

// AsValidationErrorValue0 returns the union data inside the ValidationError_Value as a ValidationErrorValue0
func (t ValidationError_Value) AsValidationErrorValue0() (ValidationErrorValue0, error) {
	var body ValidationErrorValue0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue0 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue0
func (t *ValidationError_Value) FromValidationErrorValue0(v ValidationErrorValue0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue0 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue0
func (t *ValidationError_Value) MergeValidationErrorValue0(v ValidationErrorValue0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsValidationErrorValue1 returns the union data inside the ValidationError_Value as a ValidationErrorValue1
func (t ValidationError_Value) AsValidationErrorValue1() (ValidationErrorValue1, error) {
	var body ValidationErrorValue1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue1 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue1
func (t *ValidationError_Value) FromValidationErrorValue1(v ValidationErrorValue1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue1 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue1
func (t *ValidationError_Value) MergeValidationErrorValue1(v ValidationErrorValue1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsValidationErrorValue2 returns the union data inside the ValidationError_Value as a ValidationErrorValue2
func (t ValidationError_Value) AsValidationErrorValue2() (ValidationErrorValue2, error) {
	var body ValidationErrorValue2
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue2 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue2
func (t *ValidationError_Value) FromValidationErrorValue2(v ValidationErrorValue2) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue2 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue2
func (t *ValidationError_Value) MergeValidationErrorValue2(v ValidationErrorValue2) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ValidationError_Value) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ValidationError_Value) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
