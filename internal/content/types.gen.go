// Package content provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package content

import (
	"encoding/json"
	"time"

	"github.com/oapi-codegen/runtime"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for FindManyArtifactsParamsSortField.
const (
	FindManyArtifactsParamsSortFieldCreatedAt      FindManyArtifactsParamsSortField = "createdAt"
	FindManyArtifactsParamsSortFieldCredits        FindManyArtifactsParamsSortField = "credits"
	FindManyArtifactsParamsSortFieldDescription    FindManyArtifactsParamsSortField = "description"
	FindManyArtifactsParamsSortFieldId             FindManyArtifactsParamsSortField = "id"
	FindManyArtifactsParamsSortFieldMimeType       FindManyArtifactsParamsSortField = "mimeType"
	FindManyArtifactsParamsSortFieldName           FindManyArtifactsParamsSortField = "name"
	FindManyArtifactsParamsSortFieldOrganizationId FindManyArtifactsParamsSortField = "organizationId"
	FindManyArtifactsParamsSortFieldPreviewImage   FindManyArtifactsParamsSortField = "previewImage"
	FindManyArtifactsParamsSortFieldProducerId     FindManyArtifactsParamsSortField = "producerId"
	FindManyArtifactsParamsSortFieldText           FindManyArtifactsParamsSortField = "text"
	FindManyArtifactsParamsSortFieldUpdatedAt      FindManyArtifactsParamsSortField = "updatedAt"
	FindManyArtifactsParamsSortFieldUrl            FindManyArtifactsParamsSortField = "url"
)

// Defines values for FindManyArtifactsParamsSortOrder.
const (
	FindManyArtifactsParamsSortOrderAsc  FindManyArtifactsParamsSortOrder = "asc"
	FindManyArtifactsParamsSortOrderDesc FindManyArtifactsParamsSortOrder = "desc"
)

// Defines values for FindManyLabelsParamsSortField.
const (
	FindManyLabelsParamsSortFieldCreatedAt      FindManyLabelsParamsSortField = "createdAt"
	FindManyLabelsParamsSortFieldId             FindManyLabelsParamsSortField = "id"
	FindManyLabelsParamsSortFieldName           FindManyLabelsParamsSortField = "name"
	FindManyLabelsParamsSortFieldOrganizationId FindManyLabelsParamsSortField = "organizationId"
	FindManyLabelsParamsSortFieldUpdatedAt      FindManyLabelsParamsSortField = "updatedAt"
)

// Defines values for FindManyLabelsParamsSortOrder.
const (
	FindManyLabelsParamsSortOrderAsc  FindManyLabelsParamsSortOrder = "asc"
	FindManyLabelsParamsSortOrderDesc FindManyLabelsParamsSortOrder = "desc"
)

// Artifact Schema for Artifact entity
type Artifact struct {
	// CreatedAt The date this item was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`

	// Credits The number of credits required to access this artifact. This is used for metering and billing purposes.
	Credits float32 `json:"credits" yaml:"credits"`

	// Description The artifact's description
	Description string `json:"description,omitempty,omitzero" yaml:"description,omitempty"`

	// Id The ID of the item
	Id openapi_types.UUID `json:"id" yaml:"id"`

	// MimeType The MIME type of the artifact, e.g. image/png
	MimeType string `json:"mimeType" yaml:"mimeType"`

	// Name The name of the artifact, used for display purposes
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

	// OrganizationId The organization name
	OrganizationId string `json:"organizationId" yaml:"organizationId"`

	// PreviewImage The URL of the preview image for this artifact. This is used for displaying a thumbnail in the UI.
	PreviewImage string `json:"previewImage,omitempty,omitzero" yaml:"previewImage,omitempty"`

	// ProducerId The ID of the run that produced this artifact, if applicable
	ProducerId string `json:"producerId,omitempty,omitzero" yaml:"producerId,omitempty"`

	// Text The artifact text
	Text string `json:"text" yaml:"text"`

	// UpdatedAt The date this item was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// FilterNode A recursive filter node that can be a condition or group
type FilterNode = interface{}

// Label Schema for Label entity
type Label struct {
	// CreatedAt The date this item was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`

	// Id The ID of the item
	Id openapi_types.UUID `json:"id" yaml:"id"`

	// Name The name of the label
	Name string `json:"name" yaml:"name"`

	// OrganizationId The organization name
	OrganizationId string `json:"organizationId" yaml:"organizationId"`

	// UpdatedAt The date this item was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// Page Pagination (page number & size)
type Page struct {
	Number int `json:"number,omitempty,omitzero" yaml:"number,omitempty"`
	Size   int `json:"size,omitempty,omitzero" yaml:"size,omitempty"`
}

// Problem RFC 7807 (Problem Details) compliant error response
type Problem struct {
	// Detail Human-readable explanation specific to this occurrence
	Detail string `json:"detail" yaml:"detail"`

	// Errors Additional validation errors for specific fields
	Errors []ValidationError `json:"errors,omitempty,omitzero" yaml:"errors,omitempty"`

	// Instance URI identifying the specific occurrence
	Instance string `json:"instance,omitempty,omitzero" yaml:"instance,omitempty"`

	// Status HTTP status code
	Status int `json:"status" yaml:"status"`

	// Title Short, human-readable summary
	Title string `json:"title" yaml:"title"`

	// Type URI identifying the problem type
	Type string `json:"type" yaml:"type"`
}

// ValidationError Individual field validation error
type ValidationError struct {
	// Field The field path that failed validation
	Field string `json:"field" yaml:"field"`

	// Message Human-readable error message
	Message string `json:"message" yaml:"message"`

	// Value The invalid value that was provided
	Value ValidationError_Value `json:"value,omitempty,omitzero" yaml:"value,omitempty"`
}

// ValidationErrorValue0 defines model for .
type ValidationErrorValue0 = string

// ValidationErrorValue1 defines model for .
type ValidationErrorValue1 = float32

// ValidationErrorValue2 defines model for .
type ValidationErrorValue2 = bool

// ValidationError_Value The invalid value that was provided
type ValidationError_Value struct {
	union json.RawMessage
}

// ArtifactsFilter A recursive filter node that can be a condition or group
type ArtifactsFilter = FilterNode

// ArtifactsSort defines model for ArtifactsSort.
type ArtifactsSort = []struct {
	Field string `json:"field" yaml:"field"`
	Order string `json:"order" yaml:"order"`
}

// LabelsFilter A recursive filter node that can be a condition or group
type LabelsFilter = FilterNode

// LabelsSort defines model for LabelsSort.
type LabelsSort = []struct {
	Field string `json:"field" yaml:"field"`
	Order string `json:"order" yaml:"order"`
}

// PageQuery Pagination (page number & size)
type PageQuery = Page

// BadRequest RFC 7807 (Problem Details) compliant error response
type BadRequest = Problem

// NotFound RFC 7807 (Problem Details) compliant error response
type NotFound = Problem

// Unauthorized RFC 7807 (Problem Details) compliant error response
type Unauthorized = Problem

// FindManyArtifactsParams defines parameters for FindManyArtifacts.
type FindManyArtifactsParams struct {
	// Filter Filter artifacts by field values. Supported fields:
	// - createdAt, id, updatedAt, credits, description, mimeType
	// - name, organizationId, previewImage, producerId, text, url
	Filter ArtifactsFilter `json:"filter,omitempty,omitzero" yaml:"filter,omitempty"`

	// Page The page parameter
	Page PageQuery `form:"page,omitempty" json:"page,omitempty,omitzero" yaml:"page,omitempty"`

	// Sort The sort parameter
	Sort ArtifactsSort `form:"sort,omitempty" json:"sort,omitempty,omitzero" yaml:"sort,omitempty"`
}

// FindManyArtifactsParamsSortField defines parameters for FindManyArtifacts.
type FindManyArtifactsParamsSortField string

// FindManyArtifactsParamsSortOrder defines parameters for FindManyArtifacts.
type FindManyArtifactsParamsSortOrder string

// CreateArtifactJSONBody defines parameters for CreateArtifact.
type CreateArtifactJSONBody struct {
	// Name The name of the artifact
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

	// Text The artifact text
	Text string `json:"text" yaml:"text"`
}

// UpdateArtifactJSONBody defines parameters for UpdateArtifact.
type UpdateArtifactJSONBody struct {
	// Name The name of the artifact
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

	// Text The artifact text
	Text string `json:"text,omitempty,omitzero" yaml:"text,omitempty"`

	// Url The artifact URL
	Url string `json:"url,omitempty,omitzero" yaml:"url,omitempty"`
}

// FindManyLabelsParams defines parameters for FindManyLabels.
type FindManyLabelsParams struct {
	// Filter Filter labels by field values. Supported fields:
	// - createdAt, id, updatedAt, name, organizationId
	Filter LabelsFilter `json:"filter,omitempty,omitzero" yaml:"filter,omitempty"`

	// Page The page parameter
	Page PageQuery `form:"page,omitempty" json:"page,omitempty,omitzero" yaml:"page,omitempty"`

	// Sort The sort parameter
	Sort LabelsSort `form:"sort,omitempty" json:"sort,omitempty,omitzero" yaml:"sort,omitempty"`
}

// FindManyLabelsParamsSortField defines parameters for FindManyLabels.
type FindManyLabelsParamsSortField string

// FindManyLabelsParamsSortOrder defines parameters for FindManyLabels.
type FindManyLabelsParamsSortOrder string

// CreateLabelJSONBody defines parameters for CreateLabel.
type CreateLabelJSONBody struct {
	// Name The name of the label
	Name string `json:"name" yaml:"name"`
}

// UpdateLabelJSONBody defines parameters for UpdateLabel.
type UpdateLabelJSONBody struct {
	// Name The name of the label
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`
}

// CreateArtifactJSONRequestBody defines body for CreateArtifact for application/json ContentType.
type CreateArtifactJSONRequestBody CreateArtifactJSONBody

// UpdateArtifactJSONRequestBody defines body for UpdateArtifact for application/json ContentType.
type UpdateArtifactJSONRequestBody UpdateArtifactJSONBody

// CreateLabelJSONRequestBody defines body for CreateLabel for application/json ContentType.
type CreateLabelJSONRequestBody CreateLabelJSONBody

// UpdateLabelJSONRequestBody defines body for UpdateLabel for application/json ContentType.
type UpdateLabelJSONRequestBody UpdateLabelJSONBody

// AsValidationErrorValue0 returns the union data inside the ValidationError_Value as a ValidationErrorValue0
func (t ValidationError_Value) AsValidationErrorValue0() (ValidationErrorValue0, error) {
	var body ValidationErrorValue0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue0 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue0
func (t *ValidationError_Value) FromValidationErrorValue0(v ValidationErrorValue0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue0 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue0
func (t *ValidationError_Value) MergeValidationErrorValue0(v ValidationErrorValue0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsValidationErrorValue1 returns the union data inside the ValidationError_Value as a ValidationErrorValue1
func (t ValidationError_Value) AsValidationErrorValue1() (ValidationErrorValue1, error) {
	var body ValidationErrorValue1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue1 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue1
func (t *ValidationError_Value) FromValidationErrorValue1(v ValidationErrorValue1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue1 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue1
func (t *ValidationError_Value) MergeValidationErrorValue1(v ValidationErrorValue1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsValidationErrorValue2 returns the union data inside the ValidationError_Value as a ValidationErrorValue2
func (t ValidationError_Value) AsValidationErrorValue2() (ValidationErrorValue2, error) {
	var body ValidationErrorValue2
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromValidationErrorValue2 overwrites any union data inside the ValidationError_Value as the provided ValidationErrorValue2
func (t *ValidationError_Value) FromValidationErrorValue2(v ValidationErrorValue2) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeValidationErrorValue2 performs a merge with any union data inside the ValidationError_Value, using the provided ValidationErrorValue2
func (t *ValidationError_Value) MergeValidationErrorValue2(v ValidationErrorValue2) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ValidationError_Value) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ValidationError_Value) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
