// Code generated by generate-converters. DO NOT EDIT.
package converters

import (
	"encoding/json"
	"time"

	"github.com/archesai/archesai/internal/generated/api"
	"github.com/archesai/archesai/internal/generated/database/postgresql"
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Helper functions
func handleNullableString(s *string) string {
	if s == nil {
		return ""
	}
	return *s
}

func handleNullableTime(t *time.Time) string {
	if t == nil {
		return ""
	}
	return t.Format(time.RFC3339)
}

func handleNullableTimestamp(ts pgtype.Timestamptz) time.Time {
	if !ts.Valid {
		return time.Time{}
	}
	return ts.Time
}

func handleNullableJSON(j *string) *json.RawMessage {
	if j == nil {
		return nil
	}
	raw := json.RawMessage(*j)
	return &raw
}

// ArtifactDBToAPI converts postgresql.Artifact to api.ArtifactEntity
func ArtifactDBToAPI(from *postgresql.Artifact) api.ArtifactEntity {
	return api.ArtifactEntity{
		CreatedAt:      from.CreatedAt,
		Credits:        float32(from.Credits),
		Description:    handleNullableString(from.Description),
		Id:             openapi_types.UUID(uuid.MustParse(from.Id)),
		MimeType:       from.MimeType,
		Name:           handleNullableString(from.Name),
		OrganizationId: from.OrganizationId,
		PreviewImage:   handleNullableString(from.PreviewImage),
		ProducerId:     handleNullableString(from.ProducerId),
		Text:           handleNullableString(from.Text),
		UpdatedAt:      from.UpdatedAt,
	}
}

// LabelDBToAPI converts postgresql.Label to api.LabelEntity
func LabelDBToAPI(from *postgresql.Label) api.LabelEntity {
	return api.LabelEntity{
		CreatedAt:      from.CreatedAt,
		Id:             openapi_types.UUID(uuid.MustParse(from.Id)),
		Name:           from.Name,
		OrganizationId: from.OrganizationId,
		UpdatedAt:      from.UpdatedAt,
	}
}
