// Code generated by generate-converters. DO NOT EDIT.
package adapters

import (
	"github.com/archesai/archesai/internal/domains/auth/generated/api"
	"github.com/archesai/archesai/internal/infrastructure/database/generated/postgresql"
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
	openapi_types "github.com/oapi-codegen/runtime/types"
	"time"
)

// Helper functions

func handleNullableString(s *string) string {
	if s == nil {
		return ""
	}
	return *s
}

func handleNullableTime(t *time.Time) string {
	if t == nil {
		return ""
	}
	return t.Format(time.RFC3339)
}

func handleNullableTimestamp(ts pgtype.Timestamptz) time.Time {
	if !ts.Valid {
		return time.Time{}
	}
	return ts.Time
}

// AuthUserDBToAPI converts postgresql.User to api.UserEntity
func AuthUserDBToAPI(from *postgresql.User) api.UserEntity {
	return api.UserEntity{
		Email: openapi_types.Email(from.Email),
		Id:    uuid.MustParse(from.Id),
		Name:  from.Name,
	}
}

// AuthSessionDBToAPI converts postgresql.Session to api.SessionEntity
func AuthSessionDBToAPI(from *postgresql.Session) api.SessionEntity {
	return api.SessionEntity{
		ActiveOrganizationId: handleNullableString(from.ActiveOrganizationId),
		ExpiresAt:            from.ExpiresAt.Format(time.RFC3339),
		Id:                   uuid.MustParse(from.Id),
		UserId:               from.UserId,
	}
}

// AuthAccountDBToAPI converts postgresql.Account to api.AccountEntity
func AuthAccountDBToAPI(from *postgresql.Account) api.AccountEntity {
	return api.AccountEntity{
		AccessTokenExpiresAt:  handleNullableTimestamp(from.AccessTokenExpiresAt),
		AccountId:             from.AccountId,
		Id:                    uuid.MustParse(from.Id),
		IdToken:               handleNullableString(from.IdToken),
		Password:              handleNullableString(from.Password),
		ProviderId:            api.AccountEntityProviderId(from.ProviderId),
		RefreshTokenExpiresAt: handleNullableTimestamp(from.RefreshTokenExpiresAt),
		UserId:                uuid.MustParse(from.UserId),
	}
}
