// Code generated by codegen; DO NOT EDIT.
// This file contains default configuration values extracted from OpenAPI schemas.

package config

// GetDefaultConfig returns a complete default configuration with all values from OpenAPI schemas.
func GetDefaultConfig() *ArchesConfig {
	return &ArchesConfig{
		API: APIConfig{
			Cors: "localhost",
			Docs: true,
			Email: EmailConfig{
				Enabled: false,
			},
			Environment: Development,
			Host:        "0.0.0.0",
			Image: ImageConfig{
				PullPolicy: IfNotPresent,
				Tag:        "latest",
			},
			Port:      3001,
			Resources: ResourceConfig{},
			Validate:  true,
		},
		Auth: AuthConfig{
			Enabled: true,
			Local:   LocalAuth{},
		},
		Billing: BillingConfig{
			Enabled: false,
			Stripe:  StripeConfig{},
		},
		Database: DatabaseConfig{
			Enabled:       true,
			Managed:       false,
			MaxConns:      25,
			MinConns:      5,
			RunMigrations: false,
			Type:          Postgresql,
			URL:           "postgresql://admin:password@127.0.0.1:5432/archesai",
		},
		Intelligence: IntelligenceConfig{
			Embedding: EmbeddingConfig{
				Type: "ollama",
			},
			Llm: LLMConfig{
				Type: "ollama",
			},
		},
		Kubernetes: struct {
			Infrastructure InfrastructureConfig `json:"infrastructure,omitempty,omitzero" yaml:"infrastructure,omitempty" mapstructure:"infrastructure,omitempty"`
			Ingress        IngressConfig        `json:"ingress,omitempty,omitzero" yaml:"ingress,omitempty" mapstructure:"ingress,omitempty"`
			Monitoring     MonitoringConfig     `json:"monitoring,omitempty,omitzero" yaml:"monitoring,omitempty" mapstructure:"monitoring,omitempty"`
		}{
			Infrastructure: InfrastructureConfig{
				Images: ImagesConfig{
					ImagePullSecrets: []string{},
					ImageRegistry:    "",
				},
				Migrations: MigrationsConfig{
					Enabled: false,
				},
				Namespace: "arches-system",
				ServiceAccount: ServiceAccountConfig{
					Create: true,
					Name:   "",
				},
			},
			Ingress: IngressConfig{
				Domain:  "archesai.dev",
				Enabled: false,
				TLS: TLSConfig{
					Enabled:    true,
					Issuer:     "letsencrypt-staging",
					SecretName: "archesai-tls",
				},
			},
			Monitoring: MonitoringConfig{
				Grafana: GrafanaConfig{
					Enabled: false,
					Managed: false,
				},
				Loki: LokiConfig{
					Enabled: false,
					Host:    "http://localhost:3100",
					Managed: false,
				},
			},
		},
		Logging: LoggingConfig{
			Level:  Info,
			Pretty: false,
		},
		Platform: PlatformConfig{
			Enabled: false,
			Host:    "localhost",
			Managed: false,
		},
		Redis: RedisConfig{
			Auth:    "password",
			Enabled: false,
			Host:    "localhost",
			Managed: false,
			Port:    6379,
		},
		Storage: StorageConfig{
			Accesskey: "minioadmin",
			Bucket:    "archesai",
			Enabled:   false,
			Endpoint:  "http://localhost:9000",
			Managed:   false,
			Secretkey: "minioadmin",
		},
	}
}
