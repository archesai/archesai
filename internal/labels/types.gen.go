// Code generated by archesai codegen. DO NOT EDIT.
package labels

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for ListLabelsParamsSortField.
const (
	LabelsCreatedAt      ListLabelsParamsSortField = "createdAt"
	LabelsID             ListLabelsParamsSortField = "id"
	LabelsName           ListLabelsParamsSortField = "name"
	LabelsOrganizationID ListLabelsParamsSortField = "organizationID"
	LabelsUpdatedAt      ListLabelsParamsSortField = "updatedAt"
)

// Defines values for ListLabelsParamsSortOrder.
const (
	LabelsAsc  ListLabelsParamsSortOrder = "asc"
	LabelsDesc ListLabelsParamsSortOrder = "desc"
)

// ListLabelsParamsSortField represents the type for ListLabelsParamsSortField enum values.
type ListLabelsParamsSortField string

// ListLabelsParamsSortOrder represents the type for ListLabelsParamsSortOrder enum values.
type ListLabelsParamsSortOrder string

// CreateLabelResponse
type CreateLabelResponse = Label

// UpdateLabelResponse
type UpdateLabelResponse = Label

// GetLabelResponse
type GetLabelResponse = Label

// Label Schema for Label entity
type Label struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// Name The name of the label
	Name string `json:"name" yaml:"name"`
	// OrganizationID The organization this label belongs to
	OrganizationID uuid.UUID `json:"organizationID" yaml:"organizationID"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// CreateLabelRequestBody Request body for createLabel
type CreateLabelRequestBody struct {
	// Description The labels description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The labels name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateLabelRequestBody Request body for updateLabel
type UpdateLabelRequestBody struct {
	// Description The labels description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The labels name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListLabelsParams Parameters for listing labels
type ListLabelsParams struct {
	// Filter Filter parameters
	Filter *ListLabelsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListLabelsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListLabelsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListLabelsParamsFilter Filter labels by field values
type ListLabelsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListLabelsParamsPage Pagination parameters for listing labels
type ListLabelsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListLabelsParamsSort Sort labels by field and order
type ListLabelsParamsSort struct {
	// Field Field to sort by
	Field ListLabelsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListLabelsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteLabelResponse Response for deleting a label
type DeleteLabelResponse struct {
}

// ListLabelsResponse Response for listing labels
type ListLabelsResponse struct {
	// Data List of labels
	Data []*Label `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
