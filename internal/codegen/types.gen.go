// Package codegen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package codegen

import (
	"encoding/json"

	"github.com/oapi-codegen/runtime"
)

// Defines values for CodegenConfigGeneratorsSqlDialect.
const (
	Mysql      CodegenConfigGeneratorsSqlDialect = "mysql"
	Postgresql CodegenConfigGeneratorsSqlDialect = "postgresql"
	Sqlite     CodegenConfigGeneratorsSqlDialect = "sqlite"
)

// Defines values for XCodegenCacheInvalidateOn.
const (
	XCodegenCacheInvalidateOnBulkCreate XCodegenCacheInvalidateOn = "bulk_create"
	XCodegenCacheInvalidateOnBulkDelete XCodegenCacheInvalidateOn = "bulk_delete"
	XCodegenCacheInvalidateOnBulkUpdate XCodegenCacheInvalidateOn = "bulk_update"
	XCodegenCacheInvalidateOnCreate     XCodegenCacheInvalidateOn = "create"
	XCodegenCacheInvalidateOnDelete     XCodegenCacheInvalidateOn = "delete"
	XCodegenCacheInvalidateOnUpdate     XCodegenCacheInvalidateOn = "update"
)

// Defines values for XCodegenDatabaseIndicesMethod.
const (
	Btree XCodegenDatabaseIndicesMethod = "btree"
	Gin   XCodegenDatabaseIndicesMethod = "gin"
	Gist  XCodegenDatabaseIndicesMethod = "gist"
	Hash  XCodegenDatabaseIndicesMethod = "hash"
)

// Defines values for XCodegenDatabaseQueriesType.
const (
	Batchexec XCodegenDatabaseQueriesType = "batchexec"
	Batchmany XCodegenDatabaseQueriesType = "batchmany"
	Batchone  XCodegenDatabaseQueriesType = "batchone"
	Exec      XCodegenDatabaseQueriesType = "exec"
	Many      XCodegenDatabaseQueriesType = "many"
	One       XCodegenDatabaseQueriesType = "one"
)

// Defines values for XCodegenDatabaseRelationsOnDelete.
const (
	XCodegenDatabaseRelationsOnDeleteCASCADE  XCodegenDatabaseRelationsOnDelete = "CASCADE"
	XCodegenDatabaseRelationsOnDeleteNOACTION XCodegenDatabaseRelationsOnDelete = "NO ACTION"
	XCodegenDatabaseRelationsOnDeleteRESTRICT XCodegenDatabaseRelationsOnDelete = "RESTRICT"
	XCodegenDatabaseRelationsOnDeleteSETNULL  XCodegenDatabaseRelationsOnDelete = "SET NULL"
)

// Defines values for XCodegenDatabaseRelationsOnUpdate.
const (
	XCodegenDatabaseRelationsOnUpdateCASCADE  XCodegenDatabaseRelationsOnUpdate = "CASCADE"
	XCodegenDatabaseRelationsOnUpdateNOACTION XCodegenDatabaseRelationsOnUpdate = "NO ACTION"
	XCodegenDatabaseRelationsOnUpdateRESTRICT XCodegenDatabaseRelationsOnUpdate = "RESTRICT"
	XCodegenDatabaseRelationsOnUpdateSETNULL  XCodegenDatabaseRelationsOnUpdate = "SET NULL"
)

// Defines values for XCodegenHandlerMiddleware.
const (
	Auth      XCodegenHandlerMiddleware = "auth"
	Cors      XCodegenHandlerMiddleware = "cors"
	Logging   XCodegenHandlerMiddleware = "logging"
	Metrics   XCodegenHandlerMiddleware = "metrics"
	RateLimit XCodegenHandlerMiddleware = "rate_limit"
	Tracing   XCodegenHandlerMiddleware = "tracing"
)

// Defines values for XCodegenRepositoryAdditionalMethodsReturns.
const (
	Count    XCodegenRepositoryAdditionalMethodsReturns = "count"
	Exists   XCodegenRepositoryAdditionalMethodsReturns = "exists"
	Multiple XCodegenRepositoryAdditionalMethodsReturns = "multiple"
	Single   XCodegenRepositoryAdditionalMethodsReturns = "single"
	Void     XCodegenRepositoryAdditionalMethodsReturns = "void"
)

// Defines values for XCodegenRepositoryOperations.
const (
	XCodegenRepositoryOperationsBulkCreate XCodegenRepositoryOperations = "bulk_create"
	XCodegenRepositoryOperationsBulkDelete XCodegenRepositoryOperations = "bulk_delete"
	XCodegenRepositoryOperationsBulkUpdate XCodegenRepositoryOperations = "bulk_update"
	XCodegenRepositoryOperationsCreate     XCodegenRepositoryOperations = "create"
	XCodegenRepositoryOperationsDelete     XCodegenRepositoryOperations = "delete"
	XCodegenRepositoryOperationsList       XCodegenRepositoryOperations = "list"
	XCodegenRepositoryOperationsRead       XCodegenRepositoryOperations = "read"
	XCodegenRepositoryOperationsUpdate     XCodegenRepositoryOperations = "update"
)

// Defines values for XCodegenServiceErrorHandling.
const (
	ErrorReturn XCodegenServiceErrorHandling = "error_return"
	Panic       XCodegenServiceErrorHandling = "panic"
	ResultType  XCodegenServiceErrorHandling = "result_type"
)

// Defines values for XCodegenServiceLoggingLevel.
const (
	Debug XCodegenServiceLoggingLevel = "debug"
	Error XCodegenServiceLoggingLevel = "error"
	Info  XCodegenServiceLoggingLevel = "info"
	Warn  XCodegenServiceLoggingLevel = "warn"
)

// CodegenConfig Schema for codegen.yaml configuration file
type CodegenConfig struct {
	// Domains Domains to generate
	Domains map[string]struct {
		Schemas []string `json:"schemas,omitempty,omitzero" yaml:"schemas,omitempty"`
		Tags    []string `json:"tags,omitempty,omitzero" yaml:"tags,omitempty"`
	} `json:"domains,omitempty,omitzero" yaml:"domains,omitempty"`

	// Generators Generator configuration with output paths
	Generators struct {
		// Adapters Path for type adapters/mappers
		Adapters string `json:"adapters,omitempty,omitzero" yaml:"adapters,omitempty"`

		// Cache Cache generation paths
		Cache struct {
			// Interface Path for cache interface
			Interface string `json:"interface,omitempty,omitzero" yaml:"interface,omitempty"`

			// Memory Path for in-memory cache implementation
			Memory string `json:"memory,omitempty,omitzero" yaml:"memory,omitempty"`

			// Redis Path for Redis cache implementation
			Redis string `json:"redis,omitempty,omitzero" yaml:"redis,omitempty"`
		} `json:"cache,omitempty,omitzero" yaml:"cache,omitempty"`

		// Defaults Path for configuration defaults (relative to project root)
		Defaults string `json:"defaults,omitempty,omitzero" yaml:"defaults,omitempty"`

		// Events Event system generation paths
		Events struct {
			// Interface Path for event definitions and interface
			Interface string `json:"interface,omitempty,omitzero" yaml:"interface,omitempty"`

			// Nats Path for NATS event publisher
			Nats string `json:"nats,omitempty,omitzero" yaml:"nats,omitempty"`

			// Redis Path for Redis event publisher
			Redis string `json:"redis,omitempty,omitzero" yaml:"redis,omitempty"`
		} `json:"events,omitempty,omitzero" yaml:"events,omitempty"`

		// Handlers Path for HTTP handler generation
		Handlers string `json:"handlers,omitempty,omitzero" yaml:"handlers,omitempty"`

		// Repository Repository generation configuration
		Repository struct {
			// Interface Path for repository interfaces (ports)
			Interface string `json:"interface,omitempty,omitzero" yaml:"interface,omitempty"`

			// Postgres Path for PostgreSQL repository implementation
			Postgres string `json:"postgres,omitempty,omitzero" yaml:"postgres,omitempty"`

			// Sqlite Path for SQLite repository implementation
			Sqlite string `json:"sqlite,omitempty,omitzero" yaml:"sqlite,omitempty"`
		} `json:"repository,omitempty,omitzero" yaml:"repository,omitempty"`

		// Sql SQL generation configuration
		Sql struct {
			// Dialect SQL dialect to use
			Dialect CodegenConfigGeneratorsSqlDialect `json:"dialect,omitempty,omitzero" yaml:"dialect,omitempty"`

			// QueryDir Directory for SQL query files
			QueryDir string `json:"query_dir,omitempty,omitzero" yaml:"query_dir,omitempty"`

			// SchemaDir Directory for SQL schema files
			SchemaDir string `json:"schema_dir,omitempty,omitzero" yaml:"schema_dir,omitempty"`
		} `json:"sql,omitempty,omitzero" yaml:"sql,omitempty"`
		Tests CodegenConfig_Generators_Tests `json:"tests,omitempty,omitzero" yaml:"tests,omitempty"`
	} `json:"generators,omitempty,omitzero" yaml:"generators,omitempty"`

	// Openapi Path to the OpenAPI specification file
	Openapi string `json:"openapi" yaml:"openapi"`

	// Output Output directory for generated files
	Output string `json:"output,omitempty,omitzero" yaml:"output,omitempty"`

	// Settings Global generation settings
	Settings struct {
		// GenerateTests Whether to generate test files
		GenerateTests bool `json:"generate_tests,omitempty,omitzero" yaml:"generate_tests,omitempty"`

		// Header File header comment
		Header string `json:"header,omitempty,omitzero" yaml:"header,omitempty"`

		// Overwrite Whether to overwrite existing files
		Overwrite bool `json:"overwrite,omitempty,omitzero" yaml:"overwrite,omitempty"`
	} `json:"settings,omitempty,omitzero" yaml:"settings,omitempty"`
}

// CodegenConfigGeneratorsSqlDialect SQL dialect to use
type CodegenConfigGeneratorsSqlDialect string

// CodegenConfigGeneratorsTests0 Enable/disable test generation with default paths
type CodegenConfigGeneratorsTests0 = bool

// CodegenConfigGeneratorsTests1 Test generation paths
type CodegenConfigGeneratorsTests1 struct {
	// Integration Path for integration tests
	Integration string `json:"integration,omitempty,omitzero" yaml:"integration,omitempty"`

	// Mocks Path for mock implementations
	Mocks string `json:"mocks,omitempty,omitzero" yaml:"mocks,omitempty"`

	// Unit Path for unit tests
	Unit string `json:"unit,omitempty,omitzero" yaml:"unit,omitempty"`
}

// CodegenConfig_Generators_Tests defines model for CodegenConfig.Generators.Tests.
type CodegenConfig_Generators_Tests struct {
	union json.RawMessage
}

// XCodegen x-codegen configuration for code generation from OpenAPI schemas
type XCodegen struct {
	// Adapter Type adapter generation configuration
	Adapter struct {
		// CustomMappings Custom field mappings
		CustomMappings map[string]string `json:"custom_mappings,omitempty,omitzero" yaml:"custom_mappings,omitempty"`

		// DeepCopy Generate deep copy methods
		DeepCopy bool `json:"deep_copy,omitempty,omitzero" yaml:"deep_copy,omitempty"`

		// GenerateMappers Generate type mappers between layers
		GenerateMappers bool `json:"generate_mappers,omitempty,omitzero" yaml:"generate_mappers,omitempty"`

		// IgnoreFields Fields to ignore in mapping
		IgnoreFields []string `json:"ignore_fields,omitempty,omitzero" yaml:"ignore_fields,omitempty"`
	} `json:"adapter,omitempty,omitzero" yaml:"adapter,omitempty"`

	// Cache Cache layer generation configuration
	Cache struct {
		// Enabled Enable caching for this entity
		Enabled bool `json:"enabled,omitempty,omitzero" yaml:"enabled,omitempty"`

		// InvalidateOn Operations that invalidate cache
		InvalidateOn []XCodegenCacheInvalidateOn `json:"invalidate_on,omitempty,omitzero" yaml:"invalidate_on,omitempty"`

		// KeyPattern Redis key pattern (e.g., "user:{id}")
		KeyPattern string `json:"key_pattern,omitempty,omitzero" yaml:"key_pattern,omitempty"`

		// Redis Redis-specific configuration
		Redis struct {
			// Database Redis database number
			Database int `json:"database,omitempty,omitzero" yaml:"database,omitempty"`

			// Prefix Key prefix for namespacing
			Prefix string `json:"prefix,omitempty,omitzero" yaml:"prefix,omitempty"`
		} `json:"redis,omitempty,omitzero" yaml:"redis,omitempty"`

		// Ttl Time-to-live in seconds
		Ttl int `json:"ttl,omitempty,omitzero" yaml:"ttl,omitempty"`

		// WarmOnStartup Pre-warm cache on application startup
		WarmOnStartup bool `json:"warm_on_startup,omitempty,omitzero" yaml:"warm_on_startup,omitempty"`
	} `json:"cache,omitempty,omitzero" yaml:"cache,omitempty"`

	// Database Database configuration for x-codegen
	Database struct {
		// Indices Database indices to create
		Indices []struct {
			// Fields Fields to index
			Fields []string `json:"fields" yaml:"fields"`

			// Method Index method (btree, hash, gin, gist)
			Method XCodegenDatabaseIndicesMethod `json:"method,omitempty,omitzero" yaml:"method,omitempty"`

			// Name Index name (optional, will be generated if not provided)
			Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

			// Unique Whether this is a unique index
			Unique bool `json:"unique,omitempty,omitzero" yaml:"unique,omitempty"`

			// Where Partial index condition (PostgreSQL)
			Where string `json:"where,omitempty,omitzero" yaml:"where,omitempty"`
		} `json:"indices,omitempty,omitzero" yaml:"indices,omitempty"`

		// Queries Custom SQL queries for SQLC
		Queries []struct {
			// Description Description of what the query does
			Description string `json:"description,omitempty,omitzero" yaml:"description,omitempty"`

			// Name Query name for SQLC
			Name string `json:"name" yaml:"name"`

			// Sql SQL query
			Sql string `json:"sql" yaml:"sql"`

			// Type Query type for SQLC
			Type XCodegenDatabaseQueriesType `json:"type" yaml:"type"`
		} `json:"queries,omitempty,omitzero" yaml:"queries,omitempty"`

		// Relations Foreign key relationships
		Relations []struct {
			// Field Field name in this table
			Field string `json:"field" yaml:"field"`

			// OnDelete ON DELETE action
			OnDelete XCodegenDatabaseRelationsOnDelete `json:"onDelete,omitempty,omitzero" yaml:"onDelete,omitempty"`

			// OnUpdate ON UPDATE action
			OnUpdate XCodegenDatabaseRelationsOnUpdate `json:"onUpdate,omitempty,omitzero" yaml:"onUpdate,omitempty"`

			// References Reference in format "table.column"
			References string `json:"references" yaml:"references"`
		} `json:"relations,omitempty,omitzero" yaml:"relations,omitempty"`

		// SoftDelete Whether to add deleted_at column for soft deletes
		SoftDelete bool `json:"softDelete,omitempty,omitzero" yaml:"softDelete,omitempty"`

		// Table Database table name
		Table string `json:"table,omitempty,omitzero" yaml:"table,omitempty"`

		// Timestamps Whether to add created_at and updated_at columns
		Timestamps bool `json:"timestamps,omitempty,omitzero" yaml:"timestamps,omitempty"`
	} `json:"database,omitempty,omitzero" yaml:"database,omitempty"`

	// Events List of domain events to generate
	Events []string `json:"events,omitempty,omitzero" yaml:"events,omitempty"`

	// Handler HTTP handler generation configuration
	Handler struct {
		// Generate Whether to generate handler
		Generate bool `json:"generate,omitempty,omitzero" yaml:"generate,omitempty"`

		// Middleware Middleware to apply
		Middleware []XCodegenHandlerMiddleware `json:"middleware,omitempty,omitzero" yaml:"middleware,omitempty"`

		// Pagination Pagination configuration for list endpoints
		Pagination struct {
			DefaultLimit int `json:"default_limit,omitempty,omitzero" yaml:"default_limit,omitempty"`
			MaxLimit     int `json:"max_limit,omitempty,omitzero" yaml:"max_limit,omitempty"`
		} `json:"pagination,omitempty,omitzero" yaml:"pagination,omitempty"`

		// PathPrefix URL path prefix
		PathPrefix string `json:"path_prefix,omitempty,omitzero" yaml:"path_prefix,omitempty"`

		// ResponseWrapper Wrap responses in standard envelope
		ResponseWrapper bool `json:"response_wrapper,omitempty,omitzero" yaml:"response_wrapper,omitempty"`

		// Validation Request validation configuration
		Validation struct {
			// CustomValidators Custom validator functions
			CustomValidators []string `json:"custom_validators,omitempty,omitzero" yaml:"custom_validators,omitempty"`

			// Strict Use strict validation
			Strict bool `json:"strict,omitempty,omitzero" yaml:"strict,omitempty"`
		} `json:"validation,omitempty,omitzero" yaml:"validation,omitempty"`
	} `json:"handler,omitempty,omitzero" yaml:"handler,omitempty"`

	// Repository Repository generation configuration
	Repository struct {
		// AdditionalMethods Custom repository methods to generate
		AdditionalMethods []struct {
			// Cache Cache this method's results
			Cache bool `json:"cache,omitempty,omitzero" yaml:"cache,omitempty"`

			// Name Method name (e.g., GetUserByEmail)
			Name string `json:"name" yaml:"name"`

			// Params Method parameters
			Params []string `json:"params" yaml:"params"`

			// Query Custom SQL query (optional)
			Query string `json:"query,omitempty,omitzero" yaml:"query,omitempty"`

			// Returns Return type
			Returns XCodegenRepositoryAdditionalMethodsReturns `json:"returns" yaml:"returns"`
		} `json:"additional_methods,omitempty,omitzero" yaml:"additional_methods,omitempty"`

		// Indices Fields to create indices on
		Indices []string `json:"indices,omitempty,omitzero" yaml:"indices,omitempty"`

		// Operations CRUD operations to generate
		Operations []XCodegenRepositoryOperations `json:"operations,omitempty,omitzero" yaml:"operations,omitempty"`

		// Postgres PostgreSQL-specific configuration
		Postgres struct {
			// Schema Database schema name
			Schema string `json:"schema,omitempty,omitzero" yaml:"schema,omitempty"`

			// TableName Override default table name
			TableName string `json:"table_name,omitempty,omitzero" yaml:"table_name,omitempty"`
		} `json:"postgres,omitempty,omitzero" yaml:"postgres,omitempty"`

		// SoftDelete Enable soft delete functionality
		SoftDelete bool `json:"soft_delete,omitempty,omitzero" yaml:"soft_delete,omitempty"`

		// Sqlite SQLite-specific configuration
		Sqlite struct {
			// TableName Override default table name
			TableName string `json:"table_name,omitempty,omitzero" yaml:"table_name,omitempty"`
		} `json:"sqlite,omitempty,omitzero" yaml:"sqlite,omitempty"`

		// Timestamps Automatically manage created_at and updated_at
		Timestamps bool `json:"timestamps,omitempty,omitzero" yaml:"timestamps,omitempty"`

		// UniqueConstraints Unique constraints across multiple fields
		UniqueConstraints [][]string `json:"unique_constraints,omitempty,omitzero" yaml:"unique_constraints,omitempty"`
	} `json:"repository,omitempty,omitzero" yaml:"repository,omitempty"`

	// Service Service layer generation configuration
	Service struct {
		// BusinessMethods Business logic methods
		BusinessMethods []string `json:"business_methods,omitempty,omitzero" yaml:"business_methods,omitempty"`

		// ErrorHandling Error handling strategy
		ErrorHandling XCodegenServiceErrorHandling `json:"error_handling,omitempty,omitzero" yaml:"error_handling,omitempty"`

		// Generate Generate service layer
		Generate bool `json:"generate,omitempty,omitzero" yaml:"generate,omitempty"`

		// Logging Logging configuration
		Logging struct {
			Level      XCodegenServiceLoggingLevel `json:"level,omitempty,omitzero" yaml:"level,omitempty"`
			Structured bool                        `json:"structured,omitempty,omitzero" yaml:"structured,omitempty"`
		} `json:"logging,omitempty,omitzero" yaml:"logging,omitempty"`

		// Metrics Generate metrics collection
		Metrics bool `json:"metrics,omitempty,omitzero" yaml:"metrics,omitempty"`

		// Tracing Generate distributed tracing
		Tracing bool `json:"tracing,omitempty,omitzero" yaml:"tracing,omitempty"`

		// TransactionSupport Generate transaction support
		TransactionSupport bool `json:"transaction_support,omitempty,omitzero" yaml:"transaction_support,omitempty"`
	} `json:"service,omitempty,omitzero" yaml:"service,omitempty"`
}

// XCodegenCacheInvalidateOn defines model for XCodegen.Cache.InvalidateOn.
type XCodegenCacheInvalidateOn string

// XCodegenDatabaseIndicesMethod Index method (btree, hash, gin, gist)
type XCodegenDatabaseIndicesMethod string

// XCodegenDatabaseQueriesType Query type for SQLC
type XCodegenDatabaseQueriesType string

// XCodegenDatabaseRelationsOnDelete ON DELETE action
type XCodegenDatabaseRelationsOnDelete string

// XCodegenDatabaseRelationsOnUpdate ON UPDATE action
type XCodegenDatabaseRelationsOnUpdate string

// XCodegenHandlerMiddleware defines model for XCodegen.Handler.Middleware.
type XCodegenHandlerMiddleware string

// XCodegenRepositoryAdditionalMethodsReturns Return type
type XCodegenRepositoryAdditionalMethodsReturns string

// XCodegenRepositoryOperations defines model for XCodegen.Repository.Operations.
type XCodegenRepositoryOperations string

// XCodegenServiceErrorHandling Error handling strategy
type XCodegenServiceErrorHandling string

// XCodegenServiceLoggingLevel defines model for XCodegen.Service.Logging.Level.
type XCodegenServiceLoggingLevel string

// AsCodegenConfigGeneratorsTests0 returns the union data inside the CodegenConfig_Generators_Tests as a CodegenConfigGeneratorsTests0
func (t CodegenConfig_Generators_Tests) AsCodegenConfigGeneratorsTests0() (CodegenConfigGeneratorsTests0, error) {
	var body CodegenConfigGeneratorsTests0
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCodegenConfigGeneratorsTests0 overwrites any union data inside the CodegenConfig_Generators_Tests as the provided CodegenConfigGeneratorsTests0
func (t *CodegenConfig_Generators_Tests) FromCodegenConfigGeneratorsTests0(v CodegenConfigGeneratorsTests0) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCodegenConfigGeneratorsTests0 performs a merge with any union data inside the CodegenConfig_Generators_Tests, using the provided CodegenConfigGeneratorsTests0
func (t *CodegenConfig_Generators_Tests) MergeCodegenConfigGeneratorsTests0(v CodegenConfigGeneratorsTests0) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsCodegenConfigGeneratorsTests1 returns the union data inside the CodegenConfig_Generators_Tests as a CodegenConfigGeneratorsTests1
func (t CodegenConfig_Generators_Tests) AsCodegenConfigGeneratorsTests1() (CodegenConfigGeneratorsTests1, error) {
	var body CodegenConfigGeneratorsTests1
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromCodegenConfigGeneratorsTests1 overwrites any union data inside the CodegenConfig_Generators_Tests as the provided CodegenConfigGeneratorsTests1
func (t *CodegenConfig_Generators_Tests) FromCodegenConfigGeneratorsTests1(v CodegenConfigGeneratorsTests1) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeCodegenConfigGeneratorsTests1 performs a merge with any union data inside the CodegenConfig_Generators_Tests, using the provided CodegenConfigGeneratorsTests1
func (t *CodegenConfig_Generators_Tests) MergeCodegenConfigGeneratorsTests1(v CodegenConfigGeneratorsTests1) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t CodegenConfig_Generators_Tests) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CodegenConfig_Generators_Tests) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
