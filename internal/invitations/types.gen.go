// Code generated by archesai codegen. DO NOT EDIT.
package invitations

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for InvitationRole.
const (
	Admin  InvitationRole = "admin"
	Owner  InvitationRole = "owner"
	Member InvitationRole = "member"
)

// Defines values for ListInvitationsParamsSortField.
const (
	InvitationsCreatedAt      ListInvitationsParamsSortField = "createdAt"
	InvitationsEmail          ListInvitationsParamsSortField = "email"
	InvitationsExpiresAt      ListInvitationsParamsSortField = "expiresAt"
	InvitationsID             ListInvitationsParamsSortField = "id"
	InvitationsInviterID      ListInvitationsParamsSortField = "inviterID"
	InvitationsOrganizationID ListInvitationsParamsSortField = "organizationID"
	InvitationsRole           ListInvitationsParamsSortField = "role"
	InvitationsStatus         ListInvitationsParamsSortField = "status"
	InvitationsUpdatedAt      ListInvitationsParamsSortField = "updatedAt"
)

// Defines values for ListInvitationsParamsSortOrder.
const (
	InvitationsAsc  ListInvitationsParamsSortOrder = "asc"
	InvitationsDesc ListInvitationsParamsSortOrder = "desc"
)

// InvitationRole represents the type for InvitationRole enum values.
type InvitationRole string

// ListInvitationsParamsSortField represents the type for ListInvitationsParamsSortField enum values.
type ListInvitationsParamsSortField string

// ListInvitationsParamsSortOrder represents the type for ListInvitationsParamsSortOrder enum values.
type ListInvitationsParamsSortOrder string

// CreateInvitationResponse
type CreateInvitationResponse = Invitation

// UpdateInvitationResponse
type UpdateInvitationResponse = Invitation

// GetInvitationResponse
type GetInvitationResponse = Invitation

// Invitation Schema for Invitation entity
type Invitation struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// Email The email of the invitated user
	Email string `json:"email" yaml:"email"`
	// ExpiresAt The date and time when the invitation expires
	ExpiresAt time.Time `json:"expiresAt" yaml:"expiresAt"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// InviterID The ID of the user who sent this invitation
	InviterID uuid.UUID `json:"inviterID" yaml:"inviterID"`
	// OrganizationID The organization the user is being invited to join
	OrganizationID uuid.UUID `json:"organizationID" yaml:"organizationID"`
	// Role The role of the invitation
	Role InvitationRole `json:"role" yaml:"role"`
	// Status The status of the invitation, e.g., pending, accepted, declined
	Status string `json:"status" yaml:"status"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// CreateInvitationRequestBody Request body for createInvitation
type CreateInvitationRequestBody struct {
	// Description The invitations description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The invitations name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateInvitationRequestBody Request body for updateInvitation
type UpdateInvitationRequestBody struct {
	// Description The invitations description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The invitations name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListInvitationsParams Parameters for listing invitations
type ListInvitationsParams struct {
	// Filter Filter parameters
	Filter *ListInvitationsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListInvitationsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListInvitationsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListInvitationsParamsFilter Filter invitations by field values
type ListInvitationsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListInvitationsParamsPage Pagination parameters for listing invitations
type ListInvitationsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListInvitationsParamsSort Sort invitations by field and order
type ListInvitationsParamsSort struct {
	// Field Field to sort by
	Field ListInvitationsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListInvitationsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteInvitationResponse Response for deleting a invitation
type DeleteInvitationResponse struct {
}

// ListInvitationsResponse Response for listing invitations
type ListInvitationsResponse struct {
	// Data List of invitations
	Data []*Invitation `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
