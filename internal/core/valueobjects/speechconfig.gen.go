// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// SpeechConfig represents Speech recognition and TTS services
type SpeechConfig struct {
	Enabled bool    `json:"enabled" yaml:"enabled"`                 // Enable speech services
	Token   *string `json:"token,omitempty" yaml:"token,omitempty"` // Speech-to-text service API token
}

// NewSpeechConfig creates a new immutable SpeechConfig value object.
// Value objects are immutable and validated upon creation.
func NewSpeechConfig(enabled bool, token *string) (SpeechConfig, error) {
	// Validate required fields
	return SpeechConfig{
		Enabled: enabled,
		Token:   token,
	}, nil
}

// ZeroSpeechConfig returns the zero value for SpeechConfig.
// This is useful for comparisons and as a default value.
func ZeroSpeechConfig() SpeechConfig {
	return SpeechConfig{}
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v SpeechConfig) GetEnabled() bool {
	return v.Enabled
}

// GetToken returns the Token value.
// Value objects are immutable, so this returns a copy of the value.
func (v SpeechConfig) GetToken() *string {
	return v.Token
}

// Validate validates the SpeechConfig value object.
// Returns an error if any field fails validation.
func (v SpeechConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v SpeechConfig) IsZero() bool {
	zero := ZeroSpeechConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of SpeechConfig
func (v SpeechConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Token: %v", v.Token))
	return fmt.Sprintf("SpeechConfig{%s}", strings.Join(fields, ", "))
}
