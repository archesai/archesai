// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import "fmt"

// Config represents Arches AI configuration schema
type Config struct {
	API          *ConfigAPI          `json:"api,omitempty" yaml:"api,omitempty"`
	Auth         *ConfigAuth         `json:"auth,omitempty" yaml:"auth,omitempty"`
	Billing      *ConfigBilling      `json:"billing,omitempty" yaml:"billing,omitempty"`
	Database     *ConfigDatabase     `json:"database,omitempty" yaml:"database,omitempty"`
	Intelligence *ConfigIntelligence `json:"intelligence,omitempty" yaml:"intelligence,omitempty"`
	Kubernetes   *ConfigKubernetes   `json:"kubernetes,omitempty" yaml:"kubernetes,omitempty"`
	Logging      *ConfigLogging      `json:"logging,omitempty" yaml:"logging,omitempty"`
	Platform     *ConfigPlatform     `json:"platform,omitempty" yaml:"platform,omitempty"`
	Redis        *ConfigRedis        `json:"redis,omitempty" yaml:"redis,omitempty"`
	Storage      *ConfigStorage      `json:"storage,omitempty" yaml:"storage,omitempty"`
}

// NewConfig creates a new Config value object
func NewConfig(api *ConfigAPI, auth *ConfigAuth, billing *ConfigBilling, database *ConfigDatabase, intelligence *ConfigIntelligence, kubernetes *ConfigKubernetes, logging *ConfigLogging, platform *ConfigPlatform, redis *ConfigRedis, storage *ConfigStorage) (Config, error) {

	return Config{
		API:          api,
		Auth:         auth,
		Billing:      billing,
		Database:     database,
		Intelligence: intelligence,
		Kubernetes:   kubernetes,
		Logging:      logging,
		Platform:     platform,
		Redis:        redis,
		Storage:      storage,
	}, nil
}

// GetAPI returns the API
func (v Config) GetAPI() *ConfigAPI {
	return v.API
}

// GetAuth returns the Auth
func (v Config) GetAuth() *ConfigAuth {
	return v.Auth
}

// GetBilling returns the Billing
func (v Config) GetBilling() *ConfigBilling {
	return v.Billing
}

// GetDatabase returns the Database
func (v Config) GetDatabase() *ConfigDatabase {
	return v.Database
}

// GetIntelligence returns the Intelligence
func (v Config) GetIntelligence() *ConfigIntelligence {
	return v.Intelligence
}

// GetKubernetes returns the Kubernetes
func (v Config) GetKubernetes() *ConfigKubernetes {
	return v.Kubernetes
}

// GetLogging returns the Logging
func (v Config) GetLogging() *ConfigLogging {
	return v.Logging
}

// GetPlatform returns the Platform
func (v Config) GetPlatform() *ConfigPlatform {
	return v.Platform
}

// GetRedis returns the Redis
func (v Config) GetRedis() *ConfigRedis {
	return v.Redis
}

// GetStorage returns the Storage
func (v Config) GetStorage() *ConfigStorage {
	return v.Storage
}

// Equals checks if two Config value objects are equal
// func (v Config) Equals(other Config) bool {
//	return v.API == other.API && v.Auth == other.Auth && v.Billing == other.Billing && v.Database == other.Database && v.Intelligence == other.Intelligence && v.Kubernetes == other.Kubernetes && v.Logging == other.Logging && v.Platform == other.Platform && v.Redis == other.Redis && v.Storage == other.Storage
// }

// String returns a string representation of Config
func (v Config) String() string {
	return fmt.Sprintf("%+v", v)
}
