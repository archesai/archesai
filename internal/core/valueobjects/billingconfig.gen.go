// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// BillingConfig represents Billing configuration for Stripe
type BillingConfig struct {

	// Enabled Enable billing functionality
	Enabled bool          `json:"enabled" yaml:"enabled"`
	Stripe  *StripeConfig `json:"stripe,omitempty" yaml:"stripe,omitempty"`
}

// NewBillingConfig creates a new immutable BillingConfig value object.
// Value objects are immutable and validated upon creation.
func NewBillingConfig(
	enabled bool,
	stripe *StripeConfig,
) (BillingConfig, error) {
	// Validate required fields
	return BillingConfig{
		Enabled: enabled,
		Stripe:  stripe,
	}, nil
}

// ZeroBillingConfig returns the zero value for BillingConfig.
// This is useful for comparisons and as a default value.
func ZeroBillingConfig() BillingConfig {
	return BillingConfig{}
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v BillingConfig) GetEnabled() bool {
	return v.Enabled
}

// GetStripe returns the Stripe value.
// Value objects are immutable, so this returns a copy of the value.
func (v BillingConfig) GetStripe() *StripeConfig {
	return v.Stripe
}

// Validate validates the BillingConfig value object.
// Returns an error if any field fails validation.
func (v BillingConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v BillingConfig) IsZero() bool {
	zero := ZeroBillingConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of BillingConfig
func (v BillingConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Stripe: %v", v.Stripe))
	return fmt.Sprintf("BillingConfig{%s}", strings.Join(fields, ", "))
}
