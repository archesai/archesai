// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import "fmt"

// ConfigAuthMagicLink represents Magic link authentication configuration
type ConfigAuthMagicLink struct {
	DeliveryMethods *struct {
		Console struct {
			Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
		} `json:"console,omitempty" yaml:"console"`
		Email struct {
			Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
			From    *string `json:"from,omitempty" yaml:"from"`
		} `json:"email,omitempty" yaml:"email"`
		Otp struct {
			Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
		} `json:"otp,omitempty" yaml:"otp"`
		Webhook struct {
			Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
			URL     *string `json:"url,omitempty" yaml:"url"`
		} `json:"webhook,omitempty" yaml:"webhook"`
	} `json:"deliveryMethods,omitempty" yaml:"deliveryMethods,omitempty"` // Available delivery methods
	Enabled   bool `json:"enabled" yaml:"enabled"`                         // Enable magic link authentication
	OtpLength *int `json:"otpLength,omitempty" yaml:"otpLength,omitempty"` // Length of OTP code
	RateLimit *struct {
		MaxAttempts   *int `json:"maxAttempts,omitempty" yaml:"maxAttempts"`
		WindowMinutes *int `json:"windowMinutes,omitempty" yaml:"windowMinutes"`
	} `json:"rateLimit,omitempty" yaml:"rateLimit,omitempty"` // Rate limiting configuration
	TokenExpiry *int `json:"tokenExpiry,omitempty" yaml:"tokenExpiry,omitempty"` // Token expiry duration in minutes
}

// NewConfigAuthMagicLink creates a new ConfigAuthMagicLink value object
func NewConfigAuthMagicLink(deliveryMethods *struct {
	Console struct {
		Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
	} `json:"console,omitempty" yaml:"console"`
	Email struct {
		Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
		From    *string `json:"from,omitempty" yaml:"from"`
	} `json:"email,omitempty" yaml:"email"`
	Otp struct {
		Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
	} `json:"otp,omitempty" yaml:"otp"`
	Webhook struct {
		Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
		URL     *string `json:"url,omitempty" yaml:"url"`
	} `json:"webhook,omitempty" yaml:"webhook"`
}, enabled bool, otpLength *int, rateLimit *struct {
	MaxAttempts   *int `json:"maxAttempts,omitempty" yaml:"maxAttempts"`
	WindowMinutes *int `json:"windowMinutes,omitempty" yaml:"windowMinutes"`
}, tokenExpiry *int) (ConfigAuthMagicLink, error) {

	return ConfigAuthMagicLink{
		DeliveryMethods: deliveryMethods,
		Enabled:         enabled,
		OtpLength:       otpLength,
		RateLimit:       rateLimit,
		TokenExpiry:     tokenExpiry,
	}, nil
}

// GetDeliveryMethods returns the DeliveryMethods
func (v ConfigAuthMagicLink) GetDeliveryMethods() *struct {
	Console struct {
		Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
	} `json:"console,omitempty" yaml:"console"`
	Email struct {
		Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
		From    *string `json:"from,omitempty" yaml:"from"`
	} `json:"email,omitempty" yaml:"email"`
	Otp struct {
		Enabled *bool `json:"enabled,omitempty" yaml:"enabled"`
	} `json:"otp,omitempty" yaml:"otp"`
	Webhook struct {
		Enabled *bool   `json:"enabled,omitempty" yaml:"enabled"`
		URL     *string `json:"url,omitempty" yaml:"url"`
	} `json:"webhook,omitempty" yaml:"webhook"`
} {
	return v.DeliveryMethods
}

// GetEnabled returns the Enabled
func (v ConfigAuthMagicLink) GetEnabled() bool {
	return v.Enabled
}

// GetOtpLength returns the OtpLength
func (v ConfigAuthMagicLink) GetOtpLength() *int {
	return v.OtpLength
}

// GetRateLimit returns the RateLimit
func (v ConfigAuthMagicLink) GetRateLimit() *struct {
	MaxAttempts   *int `json:"maxAttempts,omitempty" yaml:"maxAttempts"`
	WindowMinutes *int `json:"windowMinutes,omitempty" yaml:"windowMinutes"`
} {
	return v.RateLimit
}

// GetTokenExpiry returns the TokenExpiry
func (v ConfigAuthMagicLink) GetTokenExpiry() *int {
	return v.TokenExpiry
}

// Equals checks if two ConfigAuthMagicLink value objects are equal
// func (v ConfigAuthMagicLink) Equals(other ConfigAuthMagicLink) bool {
//	return v.DeliveryMethods == other.DeliveryMethods && v.Enabled == other.Enabled && v.OtpLength == other.OtpLength && v.RateLimit == other.RateLimit && v.TokenExpiry == other.TokenExpiry
// }

// String returns a string representation of ConfigAuthMagicLink
func (v ConfigAuthMagicLink) String() string {
	return fmt.Sprintf("%+v", v)
}
