// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// LokiConfig represents Loki log aggregation service configuration
type LokiConfig struct {
	Enabled   bool            `json:"enabled" yaml:"enabled"`               // Enable Loki
	Host      *string         `json:"host,omitempty" yaml:"host,omitempty"` // Loki host URL
	Image     *ImageConfig    `json:"image,omitempty" yaml:"image,omitempty"`
	Managed   *bool           `json:"managed,omitempty" yaml:"managed,omitempty"` // Use managed Loki deployment
	Resources *ResourceConfig `json:"resources,omitempty" yaml:"resources,omitempty"`
}

// NewLokiConfig creates a new immutable LokiConfig value object.
// Value objects are immutable and validated upon creation.
func NewLokiConfig(enabled bool, host *string, image *ImageConfig, managed *bool, resources *ResourceConfig) (LokiConfig, error) {
	// Validate required fields
	return LokiConfig{
		Enabled:   enabled,
		Host:      host,
		Image:     image,
		Managed:   managed,
		Resources: resources,
	}, nil
}

// ZeroLokiConfig returns the zero value for LokiConfig.
// This is useful for comparisons and as a default value.
func ZeroLokiConfig() LokiConfig {
	return LokiConfig{}
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v LokiConfig) GetEnabled() bool {
	return v.Enabled
}

// GetHost returns the Host value.
// Value objects are immutable, so this returns a copy of the value.
func (v LokiConfig) GetHost() *string {
	return v.Host
}

// GetImage returns the Image value.
// Value objects are immutable, so this returns a copy of the value.
func (v LokiConfig) GetImage() *ImageConfig {
	return v.Image
}

// GetManaged returns the Managed value.
// Value objects are immutable, so this returns a copy of the value.
func (v LokiConfig) GetManaged() *bool {
	return v.Managed
}

// GetResources returns the Resources value.
// Value objects are immutable, so this returns a copy of the value.
func (v LokiConfig) GetResources() *ResourceConfig {
	return v.Resources
}

// Validate validates the LokiConfig value object.
// Returns an error if any field fails validation.
func (v LokiConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v LokiConfig) IsZero() bool {
	zero := ZeroLokiConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of LokiConfig
func (v LokiConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Host: %v", v.Host))
	fields = append(fields, fmt.Sprintf("Image: %v", v.Image))
	fields = append(fields, fmt.Sprintf("Managed: %v", v.Managed))
	fields = append(fields, fmt.Sprintf("Resources: %v", v.Resources))
	return fmt.Sprintf("LokiConfig{%s}", strings.Join(fields, ", "))
}
