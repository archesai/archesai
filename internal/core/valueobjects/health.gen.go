// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import "fmt"

// Health represents a Health
type Health struct {
	Services  interface{} `json:"services" yaml:"services"`
	Timestamp string      `json:"timestamp" yaml:"timestamp"`
	Uptime    float64     `json:"uptime" yaml:"uptime"`
}

// NewHealth creates a new Health value object
func NewHealth(services interface{}, timestamp string, uptime float64) (Health, error) {
	if timestamp == "" {
		return Health{}, fmt.Errorf("Timestamp cannot be empty")
	}

	return Health{
		Services:  services,
		Timestamp: timestamp,
		Uptime:    uptime,
	}, nil
}

// GetServices returns the Services
func (v Health) GetServices() interface{} {
	return v.Services
}

// GetTimestamp returns the Timestamp
func (v Health) GetTimestamp() string {
	return v.Timestamp
}

// GetUptime returns the Uptime
func (v Health) GetUptime() float64 {
	return v.Uptime
}

// Equals checks if two Health value objects are equal
func (v Health) Equals(other Health) bool {
	return v.Services == other.Services && v.Timestamp == other.Timestamp && v.Uptime == other.Uptime
}

// String returns a string representation of Health
func (v Health) String() string {
	return fmt.Sprintf("%+v", v)
}
