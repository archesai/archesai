// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import "fmt"

// ConfigResource represents Kubernetes resource configuration
type ConfigResource struct {
	Limits struct {
		Cpu    string `json:"cpu" yaml:"cpu"`
		Memory string `json:"memory" yaml:"memory"`
	} `json:"limits" yaml:"limits"` // Resource limits
	Requests struct {
		Cpu    string `json:"cpu" yaml:"cpu"`
		Memory string `json:"memory" yaml:"memory"`
	} `json:"requests" yaml:"requests"` // Resource requests
}

// NewConfigResource creates a new ConfigResource value object
func NewConfigResource(limits struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}, requests struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}) (ConfigResource, error) {

	return ConfigResource{
		Limits:   limits,
		Requests: requests,
	}, nil
}

// GetLimits returns the Limits
func (v ConfigResource) GetLimits() struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
} {
	return v.Limits
}

// GetRequests returns the Requests
func (v ConfigResource) GetRequests() struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
} {
	return v.Requests
}

// Equals checks if two ConfigResource value objects are equal
// func (v ConfigResource) Equals(other ConfigResource) bool {
//	return v.Limits == other.Limits && v.Requests == other.Requests
// }

// String returns a string representation of ConfigResource
func (v ConfigResource) String() string {
	return fmt.Sprintf("%+v", v)
}
