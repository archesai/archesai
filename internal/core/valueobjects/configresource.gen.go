// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ConfigResource represents Kubernetes resource configuration
type ConfigResource struct {
	Limits struct {
		Cpu    string `json:"cpu" yaml:"cpu"`
		Memory string `json:"memory" yaml:"memory"`
	} `json:"limits" yaml:"limits"` // Resource limits
	Requests struct {
		Cpu    string `json:"cpu" yaml:"cpu"`
		Memory string `json:"memory" yaml:"memory"`
	} `json:"requests" yaml:"requests"` // Resource requests
}

// NewConfigResource creates a new immutable ConfigResource value object.
// Value objects are immutable and validated upon creation.
func NewConfigResource(limits struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}, requests struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}) (ConfigResource, error) {
	// Validate all fields

	return ConfigResource{
		Limits:   limits,
		Requests: requests,
	}, nil
}

// MustConfigResource creates a new ConfigResource value object and panics on validation error.
// Use this only when you are certain the values are valid (e.g., in tests or with hardcoded values).
func MustConfigResource(limits struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}, requests struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
}) ConfigResource {
	v, err := NewConfigResource(limits, requests)
	if err != nil {
		panic(fmt.Sprintf("failed to create ConfigResource: %v", err))
	}
	return v
}

// ZeroConfigResource returns the zero value for ConfigResource.
// This is useful for comparisons and as a default value.
func ZeroConfigResource() ConfigResource {
	return ConfigResource{}
}

// GetLimits returns the Limits value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigResource) GetLimits() struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
} {
	return v.Limits
}

// GetRequests returns the Requests value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigResource) GetRequests() struct {
	Cpu    string `json:"cpu" yaml:"cpu"`
	Memory string `json:"memory" yaml:"memory"`
} {
	return v.Requests
}

// IsZero returns true if this is the zero value.
func (v ConfigResource) IsZero() bool {
	zero := ZeroConfigResource()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// Validate checks if the value object is valid.
// This is automatically called during construction but can be used for explicit validation.
func (v ConfigResource) Validate() error {
	return nil
}

// String returns a string representation of ConfigResource
func (v ConfigResource) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Limits: %v", v.Limits))
	fields = append(fields, fmt.Sprintf("Requests: %v", v.Requests))
	return fmt.Sprintf("ConfigResource{%s}", strings.Join(fields, ", "))
}
