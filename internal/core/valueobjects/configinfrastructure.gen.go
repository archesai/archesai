// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ConfigInfrastructure represents Infrastructure configuration for Kubernetes deployments
type ConfigInfrastructure struct {
	Images         ConfigImages         `json:"images" yaml:"images"`
	Migrations     ConfigMigrations     `json:"migrations" yaml:"migrations"`
	Namespace      string               `json:"namespace" yaml:"namespace"` // Kubernetes namespace where all resources will be deployed
	ServiceAccount ConfigServiceAccount `json:"serviceAccount" yaml:"serviceAccount"`
}

// NewConfigInfrastructure creates a new immutable ConfigInfrastructure value object.
// Value objects are immutable and validated upon creation.
func NewConfigInfrastructure(images ConfigImages, migrations ConfigMigrations, namespace string, serviceAccount ConfigServiceAccount) (ConfigInfrastructure, error) {
	// Validate all fields
	if namespace == "" {
		return ConfigInfrastructure{}, fmt.Errorf("Namespace cannot be empty")
	}

	return ConfigInfrastructure{
		Images:         images,
		Migrations:     migrations,
		Namespace:      namespace,
		ServiceAccount: serviceAccount,
	}, nil
}

// MustConfigInfrastructure creates a new ConfigInfrastructure value object and panics on validation error.
// Use this only when you are certain the values are valid (e.g., in tests or with hardcoded values).
func MustConfigInfrastructure(images ConfigImages, migrations ConfigMigrations, namespace string, serviceAccount ConfigServiceAccount) ConfigInfrastructure {
	v, err := NewConfigInfrastructure(images, migrations, namespace, serviceAccount)
	if err != nil {
		panic(fmt.Sprintf("failed to create ConfigInfrastructure: %v", err))
	}
	return v
}

// ZeroConfigInfrastructure returns the zero value for ConfigInfrastructure.
// This is useful for comparisons and as a default value.
func ZeroConfigInfrastructure() ConfigInfrastructure {
	return ConfigInfrastructure{}
}

// GetImages returns the Images value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigInfrastructure) GetImages() ConfigImages {
	return v.Images
}

// GetMigrations returns the Migrations value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigInfrastructure) GetMigrations() ConfigMigrations {
	return v.Migrations
}

// GetNamespace returns the Namespace value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigInfrastructure) GetNamespace() string {
	return v.Namespace
}

// GetServiceAccount returns the ServiceAccount value.
// Value objects are immutable, so this returns a copy of the value.
func (v ConfigInfrastructure) GetServiceAccount() ConfigServiceAccount {
	return v.ServiceAccount
}

// IsZero returns true if this is the zero value.
func (v ConfigInfrastructure) IsZero() bool {
	zero := ZeroConfigInfrastructure()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// Validate checks if the value object is valid.
// This is automatically called during construction but can be used for explicit validation.
func (v ConfigInfrastructure) Validate() error {
	if v.Namespace == "" {
		return fmt.Errorf("Namespace cannot be empty")
	}
	return nil
}

// String returns a string representation of ConfigInfrastructure
func (v ConfigInfrastructure) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Images: %v", v.Images))
	fields = append(fields, fmt.Sprintf("Migrations: %v", v.Migrations))
	fields = append(fields, fmt.Sprintf("Namespace: %v", v.Namespace))
	fields = append(fields, fmt.Sprintf("ServiceAccount: %v", v.ServiceAccount))
	return fmt.Sprintf("ConfigInfrastructure{%s}", strings.Join(fields, ", "))
}
