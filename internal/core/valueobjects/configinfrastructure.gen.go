// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import "fmt"

// ConfigInfrastructure represents Infrastructure configuration for Kubernetes deployments
type ConfigInfrastructure struct {
	Images         ConfigImages         `json:"images" yaml:"images"`
	Migrations     ConfigMigrations     `json:"migrations" yaml:"migrations"`
	Namespace      string               `json:"namespace" yaml:"namespace"` // Kubernetes namespace where all resources will be deployed
	ServiceAccount ConfigServiceAccount `json:"serviceAccount" yaml:"serviceAccount"`
}

// NewConfigInfrastructure creates a new ConfigInfrastructure value object
func NewConfigInfrastructure(images ConfigImages, migrations ConfigMigrations, namespace string, serviceAccount ConfigServiceAccount) (ConfigInfrastructure, error) {
	if namespace == "" {
		return ConfigInfrastructure{}, fmt.Errorf("Namespace cannot be empty")
	}

	return ConfigInfrastructure{
		Images:         images,
		Migrations:     migrations,
		Namespace:      namespace,
		ServiceAccount: serviceAccount,
	}, nil
}

// GetImages returns the Images
func (v ConfigInfrastructure) GetImages() ConfigImages {
	return v.Images
}

// GetMigrations returns the Migrations
func (v ConfigInfrastructure) GetMigrations() ConfigMigrations {
	return v.Migrations
}

// GetNamespace returns the Namespace
func (v ConfigInfrastructure) GetNamespace() string {
	return v.Namespace
}

// GetServiceAccount returns the ServiceAccount
func (v ConfigInfrastructure) GetServiceAccount() ConfigServiceAccount {
	return v.ServiceAccount
}

// Equals checks if two ConfigInfrastructure value objects are equal
// func (v ConfigInfrastructure) Equals(other ConfigInfrastructure) bool {
//	return v.Images == other.Images && v.Migrations == other.Migrations && v.Namespace == other.Namespace && v.ServiceAccount == other.ServiceAccount
// }

// String returns a string representation of ConfigInfrastructure
func (v ConfigInfrastructure) String() string {
	return fmt.Sprintf("%+v", v)
}
