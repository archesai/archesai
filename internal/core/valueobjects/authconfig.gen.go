// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// AuthConfig represents Authentication configuration for the API server
type AuthConfig struct {
	Enabled   bool                 `json:"enabled" yaml:"enabled"` // Enable authentication
	Firebase  *FirebaseAuthConfig  `json:"firebase,omitempty" yaml:"firebase,omitempty"`
	Github    *GitHubAuthConfig    `json:"github,omitempty" yaml:"github,omitempty"`
	Google    *GoogleAuthConfig    `json:"google,omitempty" yaml:"google,omitempty"`
	Local     *LocalAuthConfig     `json:"local,omitempty" yaml:"local,omitempty"`
	MagicLink *MagicLinkAuthConfig `json:"magicLink,omitempty" yaml:"magicLink,omitempty"`
	Microsoft *MicrosoftAuthConfig `json:"microsoft,omitempty" yaml:"microsoft,omitempty"`
	Twitter   *TwitterAuthConfig   `json:"twitter,omitempty" yaml:"twitter,omitempty"`
}

// NewAuthConfig creates a new immutable AuthConfig value object.
// Value objects are immutable and validated upon creation.
func NewAuthConfig(enabled bool, firebase *FirebaseAuthConfig, github *GitHubAuthConfig, google *GoogleAuthConfig, local *LocalAuthConfig, magicLink *MagicLinkAuthConfig, microsoft *MicrosoftAuthConfig, twitter *TwitterAuthConfig) (AuthConfig, error) {
	// Validate required fields
	return AuthConfig{
		Enabled:   enabled,
		Firebase:  firebase,
		Github:    github,
		Google:    google,
		Local:     local,
		MagicLink: magicLink,
		Microsoft: microsoft,
		Twitter:   twitter,
	}, nil
}

// ZeroAuthConfig returns the zero value for AuthConfig.
// This is useful for comparisons and as a default value.
func ZeroAuthConfig() AuthConfig {
	return AuthConfig{}
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetEnabled() bool {
	return v.Enabled
}

// GetFirebase returns the Firebase value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetFirebase() *FirebaseAuthConfig {
	return v.Firebase
}

// GetGithub returns the Github value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetGithub() *GitHubAuthConfig {
	return v.Github
}

// GetGoogle returns the Google value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetGoogle() *GoogleAuthConfig {
	return v.Google
}

// GetLocal returns the Local value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetLocal() *LocalAuthConfig {
	return v.Local
}

// GetMagicLink returns the MagicLink value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetMagicLink() *MagicLinkAuthConfig {
	return v.MagicLink
}

// GetMicrosoft returns the Microsoft value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetMicrosoft() *MicrosoftAuthConfig {
	return v.Microsoft
}

// GetTwitter returns the Twitter value.
// Value objects are immutable, so this returns a copy of the value.
func (v AuthConfig) GetTwitter() *TwitterAuthConfig {
	return v.Twitter
}

// Validate validates the AuthConfig value object.
// Returns an error if any field fails validation.
func (v AuthConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v AuthConfig) IsZero() bool {
	zero := ZeroAuthConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of AuthConfig
func (v AuthConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Firebase: %v", v.Firebase))
	fields = append(fields, fmt.Sprintf("Github: %v", v.Github))
	fields = append(fields, fmt.Sprintf("Google: %v", v.Google))
	fields = append(fields, fmt.Sprintf("Local: %v", v.Local))
	fields = append(fields, fmt.Sprintf("MagicLink: %v", v.MagicLink))
	fields = append(fields, fmt.Sprintf("Microsoft: %v", v.Microsoft))
	fields = append(fields, fmt.Sprintf("Twitter: %v", v.Twitter))
	return fmt.Sprintf("AuthConfig{%s}", strings.Join(fields, ", "))
}
