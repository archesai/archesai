// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ResourceConfigLimits represents Resource limits
type ResourceConfigLimits struct {
	CPU    string `json:"cpu" yaml:"cpu"`       // Maximum CPU allocation
	Memory string `json:"memory" yaml:"memory"` // Maximum memory allocation
}

// ResourceConfigRequests represents Resource requests
type ResourceConfigRequests struct {
	CPU    string `json:"cpu" yaml:"cpu"`       // Requested CPU allocation
	Memory string `json:"memory" yaml:"memory"` // Requested memory allocation
}

// ResourceConfig represents Kubernetes resource configuration
type ResourceConfig struct {
	Limits   ResourceConfigLimits   `json:"limits" yaml:"limits"`     // Resource limits
	Requests ResourceConfigRequests `json:"requests" yaml:"requests"` // Resource requests
}

// NewResourceConfig creates a new immutable ResourceConfig value object.
// Value objects are immutable and validated upon creation.
func NewResourceConfig(limits ResourceConfigLimits, requests ResourceConfigRequests) (ResourceConfig, error) {
	// Validate required fields
	return ResourceConfig{
		Limits:   limits,
		Requests: requests,
	}, nil
}

// ZeroResourceConfig returns the zero value for ResourceConfig.
// This is useful for comparisons and as a default value.
func ZeroResourceConfig() ResourceConfig {
	return ResourceConfig{}
}

// GetLimits returns the Limits value.
// Value objects are immutable, so this returns a copy of the value.
func (v ResourceConfig) GetLimits() ResourceConfigLimits {
	return v.Limits
}

// GetRequests returns the Requests value.
// Value objects are immutable, so this returns a copy of the value.
func (v ResourceConfig) GetRequests() ResourceConfigRequests {
	return v.Requests
}

// Validate validates the ResourceConfig value object.
// Returns an error if any field fails validation.
func (v ResourceConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v ResourceConfig) IsZero() bool {
	zero := ZeroResourceConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of ResourceConfig
func (v ResourceConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Limits: %v", v.Limits))
	fields = append(fields, fmt.Sprintf("Requests: %v", v.Requests))
	return fmt.Sprintf("ResourceConfig{%s}", strings.Join(fields, ", "))
}
