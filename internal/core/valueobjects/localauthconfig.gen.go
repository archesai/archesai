// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// LocalAuthConfig represents Local username/password authentication
type LocalAuthConfig struct {

	// AccessTokenTTL Access token time-to-live duration (e.g., "15m", "1h")
	AccessTokenTTL string `json:"accessTokenTTL" yaml:"accessTokenTTL"`

	// Enabled Enable local authentication
	Enabled bool `json:"enabled" yaml:"enabled"`

	// JWTSecret Secret key for JWT token signing
	JWTSecret string `json:"jwtSecret" yaml:"jwtSecret"`

	// RefreshTokenTTL Refresh token time-to-live duration (e.g., "7d", "168h")
	RefreshTokenTTL string `json:"refreshTokenTTL" yaml:"refreshTokenTTL"`
}

// NewLocalAuthConfig creates a new immutable LocalAuthConfig value object.
// Value objects are immutable and validated upon creation.
func NewLocalAuthConfig(
	accessTokenTtl string,
	enabled bool,
	jwtSecret string,
	refreshTokenTtl string,
) (LocalAuthConfig, error) {
	// Validate required fields
	if accessTokenTtl == "" {
		return LocalAuthConfig{}, fmt.Errorf("AccessTokenTTL cannot be empty")
	}
	if jwtSecret == "" {
		return LocalAuthConfig{}, fmt.Errorf("JWTSecret cannot be empty")
	}
	if refreshTokenTtl == "" {
		return LocalAuthConfig{}, fmt.Errorf("RefreshTokenTTL cannot be empty")
	}
	return LocalAuthConfig{
		AccessTokenTTL:  accessTokenTtl,
		Enabled:         enabled,
		JWTSecret:       jwtSecret,
		RefreshTokenTTL: refreshTokenTtl,
	}, nil
}

// ZeroLocalAuthConfig returns the zero value for LocalAuthConfig.
// This is useful for comparisons and as a default value.
func ZeroLocalAuthConfig() LocalAuthConfig {
	return LocalAuthConfig{}
}

// GetAccessTokenTTL returns the AccessTokenTTL value.
// Value objects are immutable, so this returns a copy of the value.
func (v LocalAuthConfig) GetAccessTokenTTL() string {
	return v.AccessTokenTTL
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v LocalAuthConfig) GetEnabled() bool {
	return v.Enabled
}

// GetJWTSecret returns the JWTSecret value.
// Value objects are immutable, so this returns a copy of the value.
func (v LocalAuthConfig) GetJWTSecret() string {
	return v.JWTSecret
}

// GetRefreshTokenTTL returns the RefreshTokenTTL value.
// Value objects are immutable, so this returns a copy of the value.
func (v LocalAuthConfig) GetRefreshTokenTTL() string {
	return v.RefreshTokenTTL
}

// Validate validates the LocalAuthConfig value object.
// Returns an error if any field fails validation.
func (v LocalAuthConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v LocalAuthConfig) IsZero() bool {
	zero := ZeroLocalAuthConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of LocalAuthConfig
func (v LocalAuthConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("AccessTokenTTL: %v", v.AccessTokenTTL))
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("JWTSecret: %v", v.JWTSecret))
	fields = append(fields, fmt.Sprintf("RefreshTokenTTL: %v", v.RefreshTokenTTL))
	return fmt.Sprintf("LocalAuthConfig{%s}", strings.Join(fields, ", "))
}
