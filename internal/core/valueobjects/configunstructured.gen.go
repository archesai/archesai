// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ConfigUnstructured represents Unstructured.io service for document parsing
type ConfigUnstructured struct {
	Enabled   bool            `json:"enabled" yaml:"enabled"` // Enable unstructured document parsing
	Image     *ConfigImage    `json:"image,omitempty" yaml:"image,omitempty"`
	Managed   *bool           `json:"managed,omitempty" yaml:"managed,omitempty"` // Use managed unstructured deployment
	Resources *ConfigResource `json:"resources,omitempty" yaml:"resources,omitempty"`
}

// NewConfigUnstructured creates a new ConfigUnstructured value object
func NewConfigUnstructured(enabled bool, image *ConfigImage, managed *bool, resources *ConfigResource) (ConfigUnstructured, error) {

	return ConfigUnstructured{
		Enabled:   enabled,
		Image:     image,
		Managed:   managed,
		Resources: resources,
	}, nil
}

// GetEnabled returns the Enabled
func (v ConfigUnstructured) GetEnabled() bool {
	return v.Enabled
}

// GetImage returns the Image
func (v ConfigUnstructured) GetImage() *ConfigImage {
	return v.Image
}

// GetManaged returns the Managed
func (v ConfigUnstructured) GetManaged() *bool {
	return v.Managed
}

// GetResources returns the Resources
func (v ConfigUnstructured) GetResources() *ConfigResource {
	return v.Resources
}

// Equals checks if two ConfigUnstructured value objects are equal
// func (v ConfigUnstructured) Equals(other ConfigUnstructured) bool {
//	return v.Enabled == other.Enabled && v.Image == other.Image && v.Managed == other.Managed && v.Resources == other.Resources
// }

// String returns a string representation of ConfigUnstructured
func (v ConfigUnstructured) String() string {
	// Build string representation field by field to avoid recursion
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Image: %v", v.Image))
	fields = append(fields, fmt.Sprintf("Managed: %v", v.Managed))
	fields = append(fields, fmt.Sprintf("Resources: %v", v.Resources))
	return fmt.Sprintf("ConfigUnstructured{%s}", strings.Join(fields, ", "))
}
