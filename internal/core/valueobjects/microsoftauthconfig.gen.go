// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// MicrosoftAuthConfig represents Microsoft/Azure AD OAuth configuration
type MicrosoftAuthConfig struct {
	ClientID     *string  `json:"clientId,omitempty" yaml:"clientId,omitempty"`         // Azure AD Application (client) ID
	ClientSecret *string  `json:"clientSecret,omitempty" yaml:"clientSecret,omitempty"` // Azure AD client secret
	Enabled      bool     `json:"enabled" yaml:"enabled"`                               // Enable Microsoft OAuth
	RedirectURL  *string  `json:"redirectUrl,omitempty" yaml:"redirectUrl,omitempty"`   // OAuth callback URL
	Scopes       []string `json:"scopes,omitempty" yaml:"scopes,omitempty"`             // OAuth scopes to request
	Tenant       *string  `json:"tenant,omitempty" yaml:"tenant,omitempty"`             // Azure AD tenant ID (use 'common' for multi-tenant)
}

// NewMicrosoftAuthConfig creates a new immutable MicrosoftAuthConfig value object.
// Value objects are immutable and validated upon creation.
func NewMicrosoftAuthConfig(clientID *string, clientSecret *string, enabled bool, redirectURL *string, scopes []string, tenant *string) (MicrosoftAuthConfig, error) {
	// Validate required fields
	return MicrosoftAuthConfig{
		ClientID:     clientID,
		ClientSecret: clientSecret,
		Enabled:      enabled,
		RedirectURL:  redirectURL,
		Scopes:       scopes,
		Tenant:       tenant,
	}, nil
}

// ZeroMicrosoftAuthConfig returns the zero value for MicrosoftAuthConfig.
// This is useful for comparisons and as a default value.
func ZeroMicrosoftAuthConfig() MicrosoftAuthConfig {
	return MicrosoftAuthConfig{}
}

// GetClientID returns the ClientID value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetClientID() *string {
	return v.ClientID
}

// GetClientSecret returns the ClientSecret value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetClientSecret() *string {
	return v.ClientSecret
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetEnabled() bool {
	return v.Enabled
}

// GetRedirectURL returns the RedirectURL value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetRedirectURL() *string {
	return v.RedirectURL
}

// GetScopes returns the Scopes value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetScopes() []string {
	// Return a copy for slices and maps to maintain immutability
	result := make([]string, len(v.Scopes))
	copy(result, v.Scopes)
	return result
}

// GetTenant returns the Tenant value.
// Value objects are immutable, so this returns a copy of the value.
func (v MicrosoftAuthConfig) GetTenant() *string {
	return v.Tenant
}

// Validate validates the MicrosoftAuthConfig value object.
// Returns an error if any field fails validation.
func (v MicrosoftAuthConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v MicrosoftAuthConfig) IsZero() bool {
	zero := ZeroMicrosoftAuthConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of MicrosoftAuthConfig
func (v MicrosoftAuthConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("ClientID: %v", v.ClientID))
	fields = append(fields, fmt.Sprintf("ClientSecret: %v", v.ClientSecret))
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("RedirectURL: %v", v.RedirectURL))
	fields = append(fields, fmt.Sprintf("Scopes: %v", v.Scopes))
	fields = append(fields, fmt.Sprintf("Tenant: %v", v.Tenant))
	return fmt.Sprintf("MicrosoftAuthConfig{%s}", strings.Join(fields, ", "))
}
