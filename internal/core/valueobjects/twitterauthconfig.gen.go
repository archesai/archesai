// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// TwitterAuthConfig represents Twitter OAuth configuration
type TwitterAuthConfig struct {
	CallbackURL    *string `json:"callbackURL,omitempty" yaml:"callbackURL,omitempty"`       // OAuth callback URL
	ConsumerKey    *string `json:"consumerKey,omitempty" yaml:"consumerKey,omitempty"`       // Twitter API consumer key
	ConsumerSecret *string `json:"consumerSecret,omitempty" yaml:"consumerSecret,omitempty"` // Twitter API consumer secret
	Enabled        bool    `json:"enabled" yaml:"enabled"`                                   // Enable Twitter OAuth
}

// NewTwitterAuthConfig creates a new immutable TwitterAuthConfig value object.
// Value objects are immutable and validated upon creation.
func NewTwitterAuthConfig(callbackURL *string, consumerKey *string, consumerSecret *string, enabled bool) (TwitterAuthConfig, error) {
	// Validate required fields
	return TwitterAuthConfig{
		CallbackURL:    callbackURL,
		ConsumerKey:    consumerKey,
		ConsumerSecret: consumerSecret,
		Enabled:        enabled,
	}, nil
}

// ZeroTwitterAuthConfig returns the zero value for TwitterAuthConfig.
// This is useful for comparisons and as a default value.
func ZeroTwitterAuthConfig() TwitterAuthConfig {
	return TwitterAuthConfig{}
}

// GetCallbackURL returns the CallbackURL value.
// Value objects are immutable, so this returns a copy of the value.
func (v TwitterAuthConfig) GetCallbackURL() *string {
	return v.CallbackURL
}

// GetConsumerKey returns the ConsumerKey value.
// Value objects are immutable, so this returns a copy of the value.
func (v TwitterAuthConfig) GetConsumerKey() *string {
	return v.ConsumerKey
}

// GetConsumerSecret returns the ConsumerSecret value.
// Value objects are immutable, so this returns a copy of the value.
func (v TwitterAuthConfig) GetConsumerSecret() *string {
	return v.ConsumerSecret
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v TwitterAuthConfig) GetEnabled() bool {
	return v.Enabled
}

// Validate validates the TwitterAuthConfig value object.
// Returns an error if any field fails validation.
func (v TwitterAuthConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v TwitterAuthConfig) IsZero() bool {
	zero := ZeroTwitterAuthConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of TwitterAuthConfig
func (v TwitterAuthConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("CallbackURL: %v", v.CallbackURL))
	fields = append(fields, fmt.Sprintf("ConsumerKey: %v", v.ConsumerKey))
	fields = append(fields, fmt.Sprintf("ConsumerSecret: %v", v.ConsumerSecret))
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	return fmt.Sprintf("TwitterAuthConfig{%s}", strings.Join(fields, ", "))
}
