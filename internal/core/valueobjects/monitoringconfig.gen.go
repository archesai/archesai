// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// MonitoringConfig represents Monitoring configuration for Grafana and Loki
type MonitoringConfig struct {
	Grafana GrafanaConfig `json:"grafana" yaml:"grafana"`
	Loki    LokiConfig    `json:"loki" yaml:"loki"`
}

// NewMonitoringConfig creates a new immutable MonitoringConfig value object.
// Value objects are immutable and validated upon creation.
func NewMonitoringConfig(grafana GrafanaConfig, loki LokiConfig) (MonitoringConfig, error) {
	// Validate required fields
	return MonitoringConfig{
		Grafana: grafana,
		Loki:    loki,
	}, nil
}

// ZeroMonitoringConfig returns the zero value for MonitoringConfig.
// This is useful for comparisons and as a default value.
func ZeroMonitoringConfig() MonitoringConfig {
	return MonitoringConfig{}
}

// GetGrafana returns the Grafana value.
// Value objects are immutable, so this returns a copy of the value.
func (v MonitoringConfig) GetGrafana() GrafanaConfig {
	return v.Grafana
}

// GetLoki returns the Loki value.
// Value objects are immutable, so this returns a copy of the value.
func (v MonitoringConfig) GetLoki() LokiConfig {
	return v.Loki
}

// Validate validates the MonitoringConfig value object.
// Returns an error if any field fails validation.
func (v MonitoringConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v MonitoringConfig) IsZero() bool {
	zero := ZeroMonitoringConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of MonitoringConfig
func (v MonitoringConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("Grafana: %v", v.Grafana))
	fields = append(fields, fmt.Sprintf("Loki: %v", v.Loki))
	return fmt.Sprintf("MonitoringConfig{%s}", strings.Join(fields, ", "))
}
