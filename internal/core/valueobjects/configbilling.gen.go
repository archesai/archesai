// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ConfigBilling represents Billing configuration for Stripe
type ConfigBilling struct {
	Enabled bool          `json:"enabled" yaml:"enabled"` // Enable billing functionality
	Stripe  *ConfigStripe `json:"stripe,omitempty" yaml:"stripe,omitempty"`
}

// NewConfigBilling creates a new ConfigBilling value object
func NewConfigBilling(enabled bool, stripe *ConfigStripe) (ConfigBilling, error) {

	return ConfigBilling{
		Enabled: enabled,
		Stripe:  stripe,
	}, nil
}

// GetEnabled returns the Enabled
func (v ConfigBilling) GetEnabled() bool {
	return v.Enabled
}

// GetStripe returns the Stripe
func (v ConfigBilling) GetStripe() *ConfigStripe {
	return v.Stripe
}

// Equals checks if two ConfigBilling value objects are equal
// func (v ConfigBilling) Equals(other ConfigBilling) bool {
//	return v.Enabled == other.Enabled && v.Stripe == other.Stripe
// }

// String returns a string representation of ConfigBilling
func (v ConfigBilling) String() string {
	// Build string representation field by field to avoid recursion
	var fields []string
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("Stripe: %v", v.Stripe))
	return fmt.Sprintf("ConfigBilling{%s}", strings.Join(fields, ", "))
}
