// Code generated by archesai/codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// ConfigStripe represents Stripe payment configuration
type ConfigStripe struct {
	Token string `json:"token" yaml:"token"` // Stripe secret API key
	Whsec string `json:"whsec" yaml:"whsec"` // Stripe webhook endpoint secret
}

// NewConfigStripe creates a new ConfigStripe value object
func NewConfigStripe(token string, whsec string) (ConfigStripe, error) {
	if token == "" {
		return ConfigStripe{}, fmt.Errorf("Token cannot be empty")
	}
	if whsec == "" {
		return ConfigStripe{}, fmt.Errorf("Whsec cannot be empty")
	}

	return ConfigStripe{
		Token: token,
		Whsec: whsec,
	}, nil
}

// GetToken returns the Token
func (v ConfigStripe) GetToken() string {
	return v.Token
}

// GetWhsec returns the Whsec
func (v ConfigStripe) GetWhsec() string {
	return v.Whsec
}

// Equals checks if two ConfigStripe value objects are equal
// func (v ConfigStripe) Equals(other ConfigStripe) bool {
//	return v.Token == other.Token && v.Whsec == other.Whsec
// }

// String returns a string representation of ConfigStripe
func (v ConfigStripe) String() string {
	// Build string representation field by field to avoid recursion
	var fields []string
	fields = append(fields, fmt.Sprintf("Token: %v", v.Token))
	fields = append(fields, fmt.Sprintf("Whsec: %v", v.Whsec))
	return fmt.Sprintf("ConfigStripe{%s}", strings.Join(fields, ", "))
}
