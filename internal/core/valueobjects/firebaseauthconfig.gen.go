// Code generated by archesai-codegen. DO NOT EDIT.

package valueobjects

import (
	"fmt"
	"strings"
)

// FirebaseAuthConfig represents Firebase authentication configuration
type FirebaseAuthConfig struct {
	ClientEmail *string `json:"clientEmail,omitempty" yaml:"clientEmail,omitempty"` // Firebase service account client email address
	Enabled     bool    `json:"enabled" yaml:"enabled"`                             // Enable Firebase authentication
	PrivateKey  *string `json:"privateKey,omitempty" yaml:"privateKey,omitempty"`   // Firebase service account private key (PEM format)
	ProjectID   *string `json:"projectID,omitempty" yaml:"projectID,omitempty"`     // Firebase project ID for authentication
}

// NewFirebaseAuthConfig creates a new immutable FirebaseAuthConfig value object.
// Value objects are immutable and validated upon creation.
func NewFirebaseAuthConfig(clientEmail *string, enabled bool, privateKey *string, projectID *string) (FirebaseAuthConfig, error) {
	// Validate required fields
	return FirebaseAuthConfig{
		ClientEmail: clientEmail,
		Enabled:     enabled,
		PrivateKey:  privateKey,
		ProjectID:   projectID,
	}, nil
}

// ZeroFirebaseAuthConfig returns the zero value for FirebaseAuthConfig.
// This is useful for comparisons and as a default value.
func ZeroFirebaseAuthConfig() FirebaseAuthConfig {
	return FirebaseAuthConfig{}
}

// GetClientEmail returns the ClientEmail value.
// Value objects are immutable, so this returns a copy of the value.
func (v FirebaseAuthConfig) GetClientEmail() *string {
	return v.ClientEmail
}

// GetEnabled returns the Enabled value.
// Value objects are immutable, so this returns a copy of the value.
func (v FirebaseAuthConfig) GetEnabled() bool {
	return v.Enabled
}

// GetPrivateKey returns the PrivateKey value.
// Value objects are immutable, so this returns a copy of the value.
func (v FirebaseAuthConfig) GetPrivateKey() *string {
	return v.PrivateKey
}

// GetProjectID returns the ProjectID value.
// Value objects are immutable, so this returns a copy of the value.
func (v FirebaseAuthConfig) GetProjectID() *string {
	return v.ProjectID
}

// Validate validates the FirebaseAuthConfig value object.
// Returns an error if any field fails validation.
func (v FirebaseAuthConfig) Validate() error {
	return nil
}

// IsZero returns true if this is the zero value.
func (v FirebaseAuthConfig) IsZero() bool {
	zero := ZeroFirebaseAuthConfig()
	// Compare using string representation as a simple equality check
	return v.String() == zero.String()
}

// String returns a string representation of FirebaseAuthConfig
func (v FirebaseAuthConfig) String() string {
	var fields []string
	fields = append(fields, fmt.Sprintf("ClientEmail: %v", v.ClientEmail))
	fields = append(fields, fmt.Sprintf("Enabled: %v", v.Enabled))
	fields = append(fields, fmt.Sprintf("PrivateKey: %v", v.PrivateKey))
	fields = append(fields, fmt.Sprintf("ProjectID: %v", v.ProjectID))
	return fmt.Sprintf("FirebaseAuthConfig{%s}", strings.Join(fields, ", "))
}
