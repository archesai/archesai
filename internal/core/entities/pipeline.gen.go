// Code generated by archesai-codegen. DO NOT EDIT.

package entities

import (
	"time"

	"github.com/archesai/archesai/internal/core/events"
	"github.com/google/uuid"
)

// Pipeline represents Schema for Pipeline entity
type Pipeline struct {
	ID             uuid.UUID            `json:"id" yaml:"id"`                                       // Unique identifier for the resource
	CreatedAt      time.Time            `json:"createdAt" yaml:"createdAt"`                         // The date and time when the resource was created
	Description    *string              `json:"description,omitempty" yaml:"description,omitempty"` // Detailed description of the pipeline's purpose
	Name           *string              `json:"name,omitempty" yaml:"name,omitempty"`               // The pipeline's display name
	OrganizationID uuid.UUID            `json:"organizationID" yaml:"organizationID"`               // The organization identifier
	UpdatedAt      time.Time            `json:"updatedAt" yaml:"updatedAt"`                         // The date and time when the resource was last updated
	events         []events.DomainEvent `json:"-" yaml:"-"`
}

// NewPipeline creates a new Pipeline entity.
// All required fields must be provided and valid.
func NewPipeline(
	organizationID uuid.UUID,
) (*Pipeline, error) {
	// Validate required fields
	now := time.Now().UTC()
	id := uuid.New()
	pipeline := &Pipeline{
		ID:             id,
		CreatedAt:      now,
		OrganizationID: organizationID,
		UpdatedAt:      now,
		events:         []events.DomainEvent{},
	}
	pipeline.addEvent(events.NewPipelineCreatedEvent(id))

	return pipeline, nil
}

// GetID returns the ID
func (e *Pipeline) GetID() uuid.UUID {
	return e.ID
}

// GetCreatedAt returns the CreatedAt
func (e *Pipeline) GetCreatedAt() time.Time {
	return e.CreatedAt
}

// GetDescription returns the Description
func (e *Pipeline) GetDescription() *string {
	return e.Description
}

// GetName returns the Name
func (e *Pipeline) GetName() *string {
	return e.Name
}

// GetOrganizationID returns the OrganizationID
func (e *Pipeline) GetOrganizationID() uuid.UUID {
	return e.OrganizationID
}

// GetUpdatedAt returns the UpdatedAt
func (e *Pipeline) GetUpdatedAt() time.Time {
	return e.UpdatedAt
}

// Events returns the domain events
func (e *Pipeline) Events() []events.DomainEvent {
	return e.events
}

// ClearEvents clears the domain events
func (e *Pipeline) ClearEvents() {
	e.events = []events.DomainEvent{}
}

// addEvent adds a domain event
func (e *Pipeline) addEvent(event events.DomainEvent) {
	e.events = append(e.events, event)
}
