// Code generated by archesai. DO NOT EDIT.

package repositories

import (
	"context"

	"github.com/archesai/archesai/internal/core/entities"
	"github.com/google/uuid"
)

// MemberRepository handles member persistence
type MemberRepository interface {
	// Basic CRUD operations (always included)
	Create(ctx context.Context, entity *entities.Member) (*entities.Member, error)
	Get(ctx context.Context, id uuid.UUID) (*entities.Member, error)
	Update(ctx context.Context, id uuid.UUID, entity *entities.Member) (*entities.Member, error)
	Delete(ctx context.Context, id uuid.UUID) error
	List(ctx context.Context, limit, offset int32) ([]*entities.Member, int64, error)

	// ListMembersByOrganization retrieves multiple members by organizationID
	ListMembersByOrganization(ctx context.Context, organizationID string) ([]*entities.Member, error)

	// ListMembersByUser retrieves multiple members by userID
	ListMembersByUser(ctx context.Context, userID string) ([]*entities.Member, error)

	// GetMemberByUserAndOrganization retrieves a single member by userID and organizationID
	GetMemberByUserAndOrganization(ctx context.Context, userID string, organizationID string) (*entities.Member, error)
}
