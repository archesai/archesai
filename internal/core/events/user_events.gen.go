// Code generated by codegen events. DO NOT EDIT.
package events

import (
	"github.com/google/uuid"
)

// Event type constants for User domain.
const (
	EventUserCreated = "user.created"
	EventUserUpdated = "user.updated"
	EventUserDeleted = "user.deleted"
)

// UserCreatedEvent represents a created event for User.
type UserCreatedEvent struct {
	BaseEvent
	UserID uuid.UUID `json:"user_id"`
}

// NewUserCreatedEvent creates a new User created event.
func NewUserCreatedEvent(id uuid.UUID) *UserCreatedEvent {
	return &UserCreatedEvent{
		BaseEvent: NewBaseEvent("user", EventUserCreated),
		UserID:    id,
	}
}

// UserUpdatedEvent represents an updated event for User.
type UserUpdatedEvent struct {
	BaseEvent
	UserID uuid.UUID `json:"user_id"`
}

// NewUserUpdatedEvent creates a new User updated event.
func NewUserUpdatedEvent(id uuid.UUID) *UserUpdatedEvent {
	return &UserUpdatedEvent{
		BaseEvent: NewBaseEvent("user", EventUserUpdated),
		UserID:    id,
	}
}

// UserDeletedEvent represents a deleted event for User.
type UserDeletedEvent struct {
	BaseEvent
	UserID uuid.UUID `json:"user_id"`
}

// NewUserDeletedEvent creates a new User deleted event.
func NewUserDeletedEvent(id uuid.UUID) *UserDeletedEvent {
	return &UserDeletedEvent{
		BaseEvent: NewBaseEvent("user", EventUserDeleted),
		UserID:    id,
	}
}
