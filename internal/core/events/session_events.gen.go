// Code generated by codegen events. DO NOT EDIT.
package events

import (
	"github.com/google/uuid"
)

// Event type constants for Session domain.
const (
	EventSessionCreated = "session.created"
	EventSessionUpdated = "session.updated"
	EventSessionDeleted = "session.deleted"
)

// SessionCreatedEvent represents a created event for Session.
type SessionCreatedEvent struct {
	BaseEvent
	SessionID uuid.UUID `json:"session_id"`
}

// NewSessionCreatedEvent creates a new Session created event.
func NewSessionCreatedEvent(id uuid.UUID) *SessionCreatedEvent {
	return &SessionCreatedEvent{
		BaseEvent: NewBaseEvent("session", EventSessionCreated),
		SessionID: id,
	}
}

// SessionUpdatedEvent represents an updated event for Session.
type SessionUpdatedEvent struct {
	BaseEvent
	SessionID uuid.UUID `json:"session_id"`
}

// NewSessionUpdatedEvent creates a new Session updated event.
func NewSessionUpdatedEvent(id uuid.UUID) *SessionUpdatedEvent {
	return &SessionUpdatedEvent{
		BaseEvent: NewBaseEvent("session", EventSessionUpdated),
		SessionID: id,
	}
}

// SessionDeletedEvent represents a deleted event for Session.
type SessionDeletedEvent struct {
	BaseEvent
	SessionID uuid.UUID `json:"session_id"`
}

// NewSessionDeletedEvent creates a new Session deleted event.
func NewSessionDeletedEvent(id uuid.UUID) *SessionDeletedEvent {
	return &SessionDeletedEvent{
		BaseEvent: NewBaseEvent("session", EventSessionDeleted),
		SessionID: id,
	}
}
