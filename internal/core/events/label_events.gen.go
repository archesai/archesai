// Code generated by archesai. DO NOT EDIT.

package events

import (
	"github.com/google/uuid"
)

// Event type constants for Label.
const (
	EventLabelCreated = "label.created"
	EventLabelUpdated = "label.updated"
	EventLabelDeleted = "label.deleted"
)

// LabelCreatedEvent represents a created event for Label.
type LabelCreatedEvent struct {
	BaseEvent
	LabelID uuid.UUID `json:"label_id"`
}

// NewLabelCreatedEvent creates a new Label created event.
func NewLabelCreatedEvent(id uuid.UUID) *LabelCreatedEvent {
	return &LabelCreatedEvent{
		BaseEvent: NewBaseEvent("label", EventLabelCreated),
		LabelID:   id,
	}
}

// LabelUpdatedEvent represents an updated event for Label.
type LabelUpdatedEvent struct {
	BaseEvent
	LabelID uuid.UUID `json:"label_id"`
}

// NewLabelUpdatedEvent creates a new Label updated event.
func NewLabelUpdatedEvent(id uuid.UUID) *LabelUpdatedEvent {
	return &LabelUpdatedEvent{
		BaseEvent: NewBaseEvent("label", EventLabelUpdated),
		LabelID:   id,
	}
}

// LabelDeletedEvent represents a deleted event for Label.
type LabelDeletedEvent struct {
	BaseEvent
	LabelID uuid.UUID `json:"label_id"`
}

// NewLabelDeletedEvent creates a new Label deleted event.
func NewLabelDeletedEvent(id uuid.UUID) *LabelDeletedEvent {
	return &LabelDeletedEvent{
		BaseEvent: NewBaseEvent("label", EventLabelDeleted),
		LabelID:   id,
	}
}
