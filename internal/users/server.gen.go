// Code generated by archesai/codegen. DO NOT EDIT.

package users

import (
	"context"
	"log/slog"
)

// StrictServer implements StrictServerInterface by delegating to the service
type StrictServer struct {
	service ServiceInterface
	logger  *slog.Logger
}

// NewStrictServer creates a new strict server that implements StrictServerInterface
func NewStrictServer(service ServiceInterface, logger *slog.Logger) StrictServerInterface {
	return &StrictServer{
		service: service,
		logger:  logger,
	}
}

// GetUser handles the get user endpoint
func (s *StrictServer) GetUser(ctx context.Context, request GetUserRequestObject) (GetUserResponseObject, error) {
	return s.service.Get(ctx, request)
}

// UpdateUser handles the update user endpoint
func (s *StrictServer) UpdateUser(ctx context.Context, request UpdateUserRequestObject) (UpdateUserResponseObject, error) {
	return s.service.Update(ctx, request)
}

// DeleteUser handles the delete user endpoint
func (s *StrictServer) DeleteUser(ctx context.Context, request DeleteUserRequestObject) (DeleteUserResponseObject, error) {
	return s.service.Delete(ctx, request)
}

// ListUsers handles the list users endpoint
func (s *StrictServer) ListUsers(ctx context.Context, request ListUsersRequestObject) (ListUsersResponseObject, error) {
	return s.service.List(ctx, request)
}
