// Code generated by archesai/codegen. DO NOT EDIT.

package organizations

import (
	"context"
	"log/slog"
)

// StrictServer implements StrictServerInterface by delegating to the service
type StrictServer struct {
	service ServiceInterface
	logger  *slog.Logger
}

// NewStrictServer creates a new strict server that implements StrictServerInterface
func NewStrictServer(service ServiceInterface, logger *slog.Logger) StrictServerInterface {
	return &StrictServer{
		service: service,
		logger:  logger,
	}
}

// CreateOrganization handles the create organization endpoint
func (s *StrictServer) CreateOrganization(ctx context.Context, request CreateOrganizationRequestObject) (CreateOrganizationResponseObject, error) {
	return s.service.Create(ctx, request)
}

// GetOrganization handles the get organization endpoint
func (s *StrictServer) GetOrganization(ctx context.Context, request GetOrganizationRequestObject) (GetOrganizationResponseObject, error) {
	return s.service.Get(ctx, request)
}

// UpdateOrganization handles the update organization endpoint
func (s *StrictServer) UpdateOrganization(ctx context.Context, request UpdateOrganizationRequestObject) (UpdateOrganizationResponseObject, error) {
	return s.service.Update(ctx, request)
}

// DeleteOrganization handles the delete organization endpoint
func (s *StrictServer) DeleteOrganization(ctx context.Context, request DeleteOrganizationRequestObject) (DeleteOrganizationResponseObject, error) {
	return s.service.Delete(ctx, request)
}

// ListOrganizations handles the list organizations endpoint
func (s *StrictServer) ListOrganizations(ctx context.Context, request ListOrganizationsRequestObject) (ListOrganizationsResponseObject, error) {
	return s.service.List(ctx, request)
}
