// Code generated by archesai codegen. DO NOT EDIT.
package organizations

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for OrganizationPlan.
const (
	FREE      OrganizationPlan = "FREE"
	BASIC     OrganizationPlan = "BASIC"
	STANDARD  OrganizationPlan = "STANDARD"
	PREMIUM   OrganizationPlan = "PREMIUM"
	UNLIMITED OrganizationPlan = "UNLIMITED"
)

// Defines values for ListOrganizationsParamsSortField.
const (
	OrganizationsBillingEmail     ListOrganizationsParamsSortField = "billingEmail"
	OrganizationsCreatedAt        ListOrganizationsParamsSortField = "createdAt"
	OrganizationsCredits          ListOrganizationsParamsSortField = "credits"
	OrganizationsID               ListOrganizationsParamsSortField = "id"
	OrganizationsLogo             ListOrganizationsParamsSortField = "logo"
	OrganizationsName             ListOrganizationsParamsSortField = "name"
	OrganizationsPlan             ListOrganizationsParamsSortField = "plan"
	OrganizationsSlug             ListOrganizationsParamsSortField = "slug"
	OrganizationsStripeCustomerID ListOrganizationsParamsSortField = "stripeCustomerID"
	OrganizationsUpdatedAt        ListOrganizationsParamsSortField = "updatedAt"
)

// Defines values for ListOrganizationsParamsSortOrder.
const (
	OrganizationsAsc  ListOrganizationsParamsSortOrder = "asc"
	OrganizationsDesc ListOrganizationsParamsSortOrder = "desc"
)

// OrganizationPlan represents the type for OrganizationPlan enum values.
type OrganizationPlan string

// ListOrganizationsParamsSortField represents the type for ListOrganizationsParamsSortField enum values.
type ListOrganizationsParamsSortField string

// ListOrganizationsParamsSortOrder represents the type for ListOrganizationsParamsSortOrder enum values.
type ListOrganizationsParamsSortOrder string

// CreateOrganizationResponse
type CreateOrganizationResponse = Organization

// UpdateOrganizationResponse
type UpdateOrganizationResponse = Organization

// GetOrganizationResponse
type GetOrganizationResponse = Organization

// Organization Schema for Organization entity
type Organization struct {
	// BillingEmail Email address for billing communications
	BillingEmail *string `json:"billingEmail,omitempty" yaml:"billingEmail,omitempty"`
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// Credits Available credits for this organization
	Credits int32 `json:"credits" yaml:"credits" default:"0"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// Logo The organization's logo URL
	Logo *string `json:"logo,omitempty" yaml:"logo,omitempty"`
	// Name The organization's display name
	Name string `json:"name" yaml:"name"`
	// Plan The current subscription plan
	Plan OrganizationPlan `json:"plan" yaml:"plan" default:"FREE"`
	// Slug URL-friendly unique identifier for the organization
	Slug string `json:"slug" yaml:"slug"`
	// StripeCustomerID Stripe customer identifier
	StripeCustomerID *string `json:"stripeCustomerID,omitempty" yaml:"stripeCustomerID,omitempty"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// CreateOrganizationRequestBody Request body for createOrganization
type CreateOrganizationRequestBody struct {
	// Description The organizations description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The organizations name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateOrganizationRequestBody Request body for updateOrganization
type UpdateOrganizationRequestBody struct {
	// Description The organizations description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The organizations name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListOrganizationsParams Parameters for listing organizations
type ListOrganizationsParams struct {
	// Filter Filter parameters
	Filter *ListOrganizationsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListOrganizationsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListOrganizationsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListOrganizationsParamsFilter Filter organizations by field values
type ListOrganizationsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListOrganizationsParamsPage Pagination parameters for listing organizations
type ListOrganizationsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListOrganizationsParamsSort Sort organizations by field and order
type ListOrganizationsParamsSort struct {
	// Field Field to sort by
	Field ListOrganizationsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListOrganizationsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteOrganizationResponse Response for deleting a organization
type DeleteOrganizationResponse struct {
}

// ListOrganizationsResponse Response for listing organizations
type ListOrganizationsResponse struct {
	// Data List of organizations
	Data []*Organization `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
