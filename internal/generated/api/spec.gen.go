// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
