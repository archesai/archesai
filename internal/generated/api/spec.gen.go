// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/n8AAAD//5KK/EE9pwEA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
