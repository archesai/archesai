// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
