// Code generated by archesai codegen. DO NOT EDIT.
package accounts

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for AccountProviderID.
const (
	Local     AccountProviderID = "local"
	Google    AccountProviderID = "google"
	Github    AccountProviderID = "github"
	Microsoft AccountProviderID = "microsoft"
	Apple     AccountProviderID = "apple"
)

// Defines values for ListAccountsParamsSortField.
const (
	AccountsAccessToken           ListAccountsParamsSortField = "accessToken"
	AccountsAccessTokenExpiresAt  ListAccountsParamsSortField = "accessTokenExpiresAt"
	AccountsAccountID             ListAccountsParamsSortField = "accountID"
	AccountsCreatedAt             ListAccountsParamsSortField = "createdAt"
	AccountsID                    ListAccountsParamsSortField = "id"
	AccountsIDToken               ListAccountsParamsSortField = "idToken"
	AccountsProviderID            ListAccountsParamsSortField = "providerID"
	AccountsRefreshToken          ListAccountsParamsSortField = "refreshToken"
	AccountsRefreshTokenExpiresAt ListAccountsParamsSortField = "refreshTokenExpiresAt"
	AccountsScope                 ListAccountsParamsSortField = "scope"
	AccountsUpdatedAt             ListAccountsParamsSortField = "updatedAt"
	AccountsUserID                ListAccountsParamsSortField = "userID"
)

// Defines values for ListAccountsParamsSortOrder.
const (
	AccountsAsc  ListAccountsParamsSortOrder = "asc"
	AccountsDesc ListAccountsParamsSortOrder = "desc"
)

// AccountProviderID represents the type for AccountProviderID enum values.
type AccountProviderID string

// ListAccountsParamsSortField represents the type for ListAccountsParamsSortField enum values.
type ListAccountsParamsSortField string

// ListAccountsParamsSortOrder represents the type for ListAccountsParamsSortOrder enum values.
type ListAccountsParamsSortOrder string

// CreateAccountResponse
type CreateAccountResponse = Account

// UpdateAccountResponse
type UpdateAccountResponse = Account

// GetAccountResponse
type GetAccountResponse = Account

// Account Schema for Account entity (authentication provider account)
type Account struct {
	// AccessToken The OAuth access token
	AccessToken *string `json:"accessToken,omitempty" yaml:"accessToken,omitempty"`
	// AccessTokenExpiresAt The access token expiration timestamp
	AccessTokenExpiresAt *time.Time `json:"accessTokenExpiresAt,omitempty" yaml:"accessTokenExpiresAt,omitempty"`
	// AccountID The unique identifier for the account from the provider
	AccountID string `json:"accountID" yaml:"accountID"`
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// IDToken The OpenID Connect ID token
	IDToken *string `json:"idToken,omitempty" yaml:"idToken,omitempty"`
	// ProviderID The authentication provider identifier
	ProviderID AccountProviderID `json:"providerID" yaml:"providerID"`
	// RefreshToken The OAuth refresh token
	RefreshToken *string `json:"refreshToken,omitempty" yaml:"refreshToken,omitempty"`
	// RefreshTokenExpiresAt The refresh token expiration timestamp
	RefreshTokenExpiresAt *time.Time `json:"refreshTokenExpiresAt,omitempty" yaml:"refreshTokenExpiresAt,omitempty"`
	// Scope The OAuth scope granted
	Scope *string `json:"scope,omitempty" yaml:"scope,omitempty"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
	// UserID The user ID this account belongs to
	UserID uuid.UUID `json:"userID" yaml:"userID"`
}

// CreateAccountRequestBody Request body for createAccount
type CreateAccountRequestBody struct {
	// Description The accounts description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The accounts name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateAccountRequestBody Request body for updateAccount
type UpdateAccountRequestBody struct {
	// Description The accounts description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The accounts name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListAccountsParams Parameters for listing accounts
type ListAccountsParams struct {
	// Filter Filter parameters
	Filter *ListAccountsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListAccountsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListAccountsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListAccountsParamsFilter Filter accounts by field values
type ListAccountsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListAccountsParamsPage Pagination parameters for listing accounts
type ListAccountsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListAccountsParamsSort Sort accounts by field and order
type ListAccountsParamsSort struct {
	// Field Field to sort by
	Field ListAccountsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListAccountsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteAccountResponse Response for deleting a account
type DeleteAccountResponse struct {
}

// ListAccountsResponse Response for listing accounts
type ListAccountsResponse struct {
	// Data List of accounts
	Data []*Account `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
