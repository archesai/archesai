// Code generated by archesai/codegen. DO NOT EDIT.

package accounts

import (
	"context"
	"log/slog"
)

// StrictServer implements StrictServerInterface by delegating to the service
type StrictServer struct {
	service ServiceInterface
	logger  *slog.Logger
}

// NewStrictServer creates a new strict server that implements StrictServerInterface
func NewStrictServer(service ServiceInterface, logger *slog.Logger) StrictServerInterface {
	return &StrictServer{
		service: service,
		logger:  logger,
	}
}

// CreateAccount handles the create account endpoint
func (s *StrictServer) CreateAccount(ctx context.Context, request CreateAccountRequestObject) (CreateAccountResponseObject, error) {
	return s.service.Create(ctx, request)
}

// GetAccount handles the get account endpoint
func (s *StrictServer) GetAccount(ctx context.Context, request GetAccountRequestObject) (GetAccountResponseObject, error) {
	return s.service.Get(ctx, request)
}

// UpdateAccount handles the update account endpoint
func (s *StrictServer) UpdateAccount(ctx context.Context, request UpdateAccountRequestObject) (UpdateAccountResponseObject, error) {
	return s.service.Update(ctx, request)
}

// DeleteAccount handles the delete account endpoint
func (s *StrictServer) DeleteAccount(ctx context.Context, request DeleteAccountRequestObject) (DeleteAccountResponseObject, error) {
	return s.service.Delete(ctx, request)
}

// ListAccounts handles the list accounts endpoint
func (s *StrictServer) ListAccounts(ctx context.Context, request ListAccountsRequestObject) (ListAccountsResponseObject, error) {
	return s.service.List(ctx, request)
}
