// Package artifacts provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package artifacts

import (
	"time"

	"github.com/google/uuid"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for ListArtifactsParamsSortField.
const (
	CreatedAt      ListArtifactsParamsSortField = "createdAt"
	Credits        ListArtifactsParamsSortField = "credits"
	Description    ListArtifactsParamsSortField = "description"
	ID             ListArtifactsParamsSortField = "id"
	MimeType       ListArtifactsParamsSortField = "mimeType"
	Name           ListArtifactsParamsSortField = "name"
	OrganizationID ListArtifactsParamsSortField = "organizationID"
	PreviewImage   ListArtifactsParamsSortField = "previewImage"
	ProducerID     ListArtifactsParamsSortField = "producerID"
	Text           ListArtifactsParamsSortField = "text"
	URL            ListArtifactsParamsSortField = "url"
	UpdatedAt      ListArtifactsParamsSortField = "updatedAt"
)

// Defines values for ListArtifactsParamsSortOrder.
const (
	Asc  ListArtifactsParamsSortOrder = "asc"
	Desc ListArtifactsParamsSortOrder = "desc"
)

// Artifact defines model for Artifact.
type Artifact struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`

	// Credits The number of credits required to access this artifact. This is used for metering and billing purposes.
	Credits float32 `json:"credits" yaml:"credits"`

	// Description The artifact's description
	Description string `json:"description,omitempty,omitzero" yaml:"description,omitempty"`

	// ID Universally Unique IDentifier
	ID UUID `json:"id" yaml:"id"`

	// MimeType The MIME type of the artifact, e.g. image/png
	MimeType string `json:"mimeType" yaml:"mimeType"`

	// Name The name of the artifact, used for display purposes
	Name           string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`
	OrganizationID UUID   `json:"organizationID" yaml:"organizationID"`

	// PreviewImage The URL of the preview image for this artifact. This is used for displaying a thumbnail in the UI.
	PreviewImage string `json:"previewImage,omitempty,omitzero" yaml:"previewImage,omitempty"`
	ProducerID   UUID   `json:"producerID,omitempty,omitzero" yaml:"producerID,omitempty"`

	// Text The artifact text
	Text string `json:"text" yaml:"text"`

	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// Base defines model for Base.
type Base struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`

	// ID Universally Unique IDentifier
	ID UUID `json:"id" yaml:"id"`

	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// FilterNode A recursive filter node that can be a condition or group
type FilterNode = interface{}

// Page Pagination (page number & size)
type Page struct {
	Number int `json:"number,omitempty,omitzero" yaml:"number,omitempty"`
	Size   int `json:"size,omitempty,omitzero" yaml:"size,omitempty"`
}

// Problem RFC 7807 (Problem Details) compliant error response
type Problem struct {
	// Detail Human-readable explanation specific to this occurrence
	Detail string `json:"detail,omitempty,omitzero" yaml:"detail,omitempty"`

	// Instance URI identifying the specific occurrence
	Instance string `json:"instance,omitempty,omitzero" yaml:"instance,omitempty"`

	// Status HTTP status code
	Status int `json:"status" yaml:"status"`

	// Title Short, human-readable summary
	Title string `json:"title" yaml:"title"`

	// Type URI identifying the problem type
	Type string `json:"type,omitempty,omitzero" yaml:"type,omitempty"`
}

// UUID Universally Unique IDentifier
type UUID = uuid.UUID

// ArtifactsFilter A recursive filter node that can be a condition or group
type ArtifactsFilter = FilterNode

// ArtifactsSort defines model for ArtifactsSort.
type ArtifactsSort = []struct {
	Field string `json:"field" yaml:"field"`
	Order string `json:"order" yaml:"order"`
}

// PageQuery Pagination (page number & size)
type PageQuery = Page

// BadRequest RFC 7807 (Problem Details) compliant error response
type BadRequest = Problem

// NotFound RFC 7807 (Problem Details) compliant error response
type NotFound = Problem

// Unauthorized RFC 7807 (Problem Details) compliant error response
type Unauthorized = Problem

// ListArtifactsParams defines parameters for ListArtifacts.
type ListArtifactsParams struct {
	// Filter Filter artifacts by field values. Supported fields:
	// - createdAt, id, updatedAt, credits, description, mimeType
	// - name, organizationID, previewImage, producerID, text, url
	Filter ArtifactsFilter `json:"filter,omitempty,omitzero" yaml:"filter,omitempty"`

	// Page The page parameter
	Page PageQuery `form:"page,omitempty" json:"page,omitempty,omitzero" yaml:"page,omitempty"`

	// Sort The sort parameter
	Sort ArtifactsSort `form:"sort,omitempty" json:"sort,omitempty,omitzero" yaml:"sort,omitempty"`
}

// ListArtifactsParamsSortField defines parameters for ListArtifacts.
type ListArtifactsParamsSortField string

// ListArtifactsParamsSortOrder defines parameters for ListArtifacts.
type ListArtifactsParamsSortOrder string

// CreateArtifactJSONBody defines parameters for CreateArtifact.
type CreateArtifactJSONBody struct {
	// Name The name of the artifact
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

	// Text The artifact text
	Text string `json:"text" yaml:"text"`
}

// UpdateArtifactJSONBody defines parameters for UpdateArtifact.
type UpdateArtifactJSONBody struct {
	// Name The name of the artifact
	Name string `json:"name,omitempty,omitzero" yaml:"name,omitempty"`

	// Text The artifact text
	Text string `json:"text,omitempty,omitzero" yaml:"text,omitempty"`

	// URL The artifact URL
	URL string `json:"url,omitempty,omitzero" yaml:"url,omitempty"`
}

// CreateArtifactJSONRequestBody defines body for CreateArtifact for application/json ContentType.
type CreateArtifactJSONRequestBody CreateArtifactJSONBody

// UpdateArtifactJSONRequestBody defines body for UpdateArtifact for application/json ContentType.
type UpdateArtifactJSONRequestBody UpdateArtifactJSONBody
