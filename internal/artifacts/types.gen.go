// Code generated by archesai codegen. DO NOT EDIT.
package artifacts

import (
	"time"

	"github.com/google/uuid"
)

// Defines values for ListArtifactsParamsSortField.
const (
	ArtifactsCreatedAt      ListArtifactsParamsSortField = "createdAt"
	ArtifactsCredits        ListArtifactsParamsSortField = "credits"
	ArtifactsDescription    ListArtifactsParamsSortField = "description"
	ArtifactsID             ListArtifactsParamsSortField = "id"
	ArtifactsMimeType       ListArtifactsParamsSortField = "mimeType"
	ArtifactsName           ListArtifactsParamsSortField = "name"
	ArtifactsOrganizationID ListArtifactsParamsSortField = "organizationID"
	ArtifactsPreviewImage   ListArtifactsParamsSortField = "previewImage"
	ArtifactsProducerID     ListArtifactsParamsSortField = "producerID"
	ArtifactsText           ListArtifactsParamsSortField = "text"
	ArtifactsUpdatedAt      ListArtifactsParamsSortField = "updatedAt"
)

// Defines values for ListArtifactsParamsSortOrder.
const (
	ArtifactsAsc  ListArtifactsParamsSortOrder = "asc"
	ArtifactsDesc ListArtifactsParamsSortOrder = "desc"
)

// ListArtifactsParamsSortField represents the type for ListArtifactsParamsSortField enum values.
type ListArtifactsParamsSortField string

// ListArtifactsParamsSortOrder represents the type for ListArtifactsParamsSortOrder enum values.
type ListArtifactsParamsSortOrder string

// CreateArtifactResponse
type CreateArtifactResponse = Artifact

// UpdateArtifactResponse
type UpdateArtifactResponse = Artifact

// GetArtifactResponse
type GetArtifactResponse = Artifact

// Artifact Schema for Artifact entity
type Artifact struct {
	// CreatedAt The date and time when the resource was created
	CreatedAt time.Time `json:"createdAt" yaml:"createdAt"`
	// Credits The number of credits required to access this artifact. This is used for metering and billing purposes.
	Credits int32 `json:"credits" yaml:"credits"`
	// Description The artifact's description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// ID Unique identifier for the resource
	ID uuid.UUID `json:"id" yaml:"id"`
	// MimeType The MIME type of the artifact, e.g. image/png
	MimeType string `json:"mimeType" yaml:"mimeType"`
	// Name The name of the artifact, used for display purposes
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
	// OrganizationID The organization that owns this artifact
	OrganizationID uuid.UUID `json:"organizationID" yaml:"organizationID"`
	// PreviewImage The URL of the preview image for this artifact. This is used for displaying a thumbnail in the UI.
	PreviewImage *string `json:"previewImage,omitempty" yaml:"previewImage,omitempty"`
	// ProducerID The ID of the entity that produced this artifact
	ProducerID *uuid.UUID `json:"producerID,omitempty" yaml:"producerID,omitempty"`
	// Text The artifact text
	Text *string `json:"text,omitempty" yaml:"text,omitempty"`
	// UpdatedAt The date and time when the resource was last updated
	UpdatedAt time.Time `json:"updatedAt" yaml:"updatedAt"`
}

// CreateArtifactRequestBody Request body for createArtifact
type CreateArtifactRequestBody struct {
	// Description The artifacts description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The artifacts name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// UpdateArtifactRequestBody Request body for updateArtifact
type UpdateArtifactRequestBody struct {
	// Description The artifacts description
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	// Name The artifacts name
	Name *string `json:"name,omitempty" yaml:"name,omitempty"`
}

// ListArtifactsParams Parameters for listing artifacts
type ListArtifactsParams struct {
	// Filter Filter parameters
	Filter *ListArtifactsParamsFilter `json:"filter,omitempty" yaml:"filter,omitempty"`
	// Page Pagination parameters
	Page *ListArtifactsParamsPage `json:"page,omitempty" yaml:"page,omitempty"`
	// Sort Sort parameters
	Sort *ListArtifactsParamsSort `json:"sort,omitempty" yaml:"sort,omitempty"`
}

// ListArtifactsParamsFilter Filter artifacts by field values
type ListArtifactsParamsFilter struct {
	// Filter A recursive filter node that can be a condition or group
	Filter interface{} `json:"filter" yaml:"filter"`
}

// ListArtifactsParamsPage Pagination parameters for listing artifacts
type ListArtifactsParamsPage struct {
	// Number Page number (1-indexed)
	Number int `json:"number" yaml:"number"`
	// Size Page size (items per page)
	Size int `json:"size" yaml:"size"`
}

// ListArtifactsParamsSort Sort artifacts by field and order
type ListArtifactsParamsSort struct {
	// Field Field to sort by
	Field ListArtifactsParamsSortField `json:"field" yaml:"field"`
	// Order Sort order (asc or desc)
	Order ListArtifactsParamsSortOrder `json:"order" yaml:"order"`
}

// ListMetadata Metadata for list responses
type ListMetadata struct {
	// Total Total number of items
	Total int64 `json:"total" yaml:"total"`
}

// DeleteArtifactResponse Response for deleting a artifact
type DeleteArtifactResponse struct {
}

// ListArtifactsResponse Response for listing artifacts
type ListArtifactsResponse struct {
	// Data List of artifacts
	Data []*Artifact `json:"data" yaml:"data"`
	// Meta Metadata about the list response
	Meta ListMetadata `json:"meta" yaml:"meta"`
}
