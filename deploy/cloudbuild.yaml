options:
  machineType: "E2_HIGHCPU_32"

steps:
  # Step to check for changes in ./api
  - name: "alpine/git" # Using a lightweight image with git
    id: check-api-changes
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        git fetch origin $BRANCH_NAME
        CHANGED_FILES=$(git diff --name-only origin/$BRANCH_NAME HEAD | grep '^api/')
        if [ -n "$CHANGED_FILES" ]; then
          echo "Changes detected in ./api"
          echo "BUILD_API=true" > /workspace/build_flags.txt
        else
          echo "No changes in ./api"
          echo "BUILD_API=false" >> /workspace/build_flags.txt
        fi

  # Step to check for changes in ./nlp
  - name: "alpine/git"
    id: check-nlp-changes
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        CHANGED_FILES=$(git diff --name-only origin/$BRANCH_NAME HEAD | grep '^nlp/')
        if [ -n "$CHANGED_FILES" ]; then
          echo "Changes detected in ./nlp"
          echo "BUILD_NLP=true" >> /workspace/build_flags.txt
        else
          echo "No changes in ./nlp"
          echo "BUILD_NLP=false" >> /workspace/build_flags.txt
        fi

  # Step to set environment variables based on flags
  - name: "alpine"
    id: set-env
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        source /workspace/build_flags.txt
        echo "BUILD_API=$BUILD_API" > /workspace/env_vars
        echo "BUILD_NLP=$BUILD_NLP" >> /workspace/env_vars

  # Step to build arches-api if needed
  - name: "gcr.io/kaniko-project/executor:latest"
    id: build-arches-api
    waitFor: ["check-api-changes", "set-env"]
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        source /workspace/env_vars
        if [ "$BUILD_API" = "true" ]; then
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-api:$SHORT_SHA \
            --cache=true \
            --cache-ttl=24h \
            --context=./api \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "Skipping build for arches-api"
        fi

  # Step to build arches-nlp if needed
  - name: "gcr.io/kaniko-project/executor:latest"
    id: build-arches-nlp
    waitFor: ["check-nlp-changes", "set-env"]
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        source /workspace/env_vars
        if [ "$BUILD_NLP" = "true" ]; then
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-nlp:$SHORT_SHA \
            --cache=true \
            --cache-ttl=24h \
            --context=./nlp \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "Skipping build for arches-nlp"
        fi

  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    id: Get latest image tags
    waitFor:
      - build-arches-api
      - build-arches-nlp
    args: ["./deploy/scripts/01_get-release-values.sh"]
    secretEnv:
      - GITHUB_TOKEN

  # - name: "gcr.io/cloud-builders/docker"
  #   entrypoint: bash
  #   id: e2e-test
  #   args: ["./scripts/01_e2e-test.sh"]
  #   secretEnv:
  #     - GITHUB_TOKEN

  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    id: gen-dotenv
    waitFor:
      - Get latest image tags
    args: ["./deploy/scripts/02_generate-dotenv.sh"]

  - name: gcr.io/cloud-builders/gcloud
    waitFor:
      - gen-dotenv
    entrypoint: bash
    id: Create release in cloud deploy
    args: ["./deploy/scripts/03_create-release.sh"]

availableSecrets:
  secretManager:
    - versionName: projects/archesai/secrets/GH_PAT/versions/1
      env: GITHUB_TOKEN
