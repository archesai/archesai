options:
  machineType: "E2_HIGHCPU_32"

steps:
  # Step 1: Detect changes in api/ and nlp/ directories
  - name: "alpine/git"
    id: detect-changes
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        >/workspace/values.sh

        # Install Git
        apk add --no-cache git

        # Fetch the latest commits
        git fetch origin $BRANCH_NAME

        # Detect changes in ./api/
        local api_changed=$(git diff --name-only origin/$BRANCH_NAME HEAD | grep '^api/' || true)
        echo "$api_changed"

        # Detect changes in ./nlp/
        local nlp_changed=$(git diff --name-only origin/$BRANCH_NAME HEAD | grep '^nlp/' || true)
        echo "$nlp_changed"

        # Set flags based on changes
        if [ -n "$api_changed" ]; then
          echo "export API_CHANGED=true"  >>/workspace/values.sh
        else
          echo "export API_CHANGED=false"  >>/workspace/values.sh
        fi

        if [ -n "$nlp_changed" ]; then
          echo "export NLP_CHANGED=true"  >>/workspace/values.sh
        else
          echo "export NLP_CHANGED=false"  >>/workspace/values.sh
        fi

  # Step 3: Conditionally build arches-api
  - name: "gcr.io/kaniko-project/executor:latest"
    id: build-arches-api
    waitFor: ["detect-changes", "export-flags"]
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        source /workspace/values.sh

        if [ "$API_CHANGED" = "true" ]; then
          echo "Changes detected in ./api/. Building arches-api..."
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-api:$SHORT_SHA \
            --cache=true \
            --cache-ttl=24h \
            --context=./api \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "No changes detected in ./api/. Skipping arches-api build."
        fi

  # Step 4: Conditionally build arches-nlp
  - name: "gcr.io/kaniko-project/executor:latest"
    id: build-arches-nlp
    waitFor: ["detect-changes", "export-flags"]
    entrypoint: /bin/sh
    args:
      - "-c"
      - |
        source /workspace/values.sh

        if [ "$NLP_CHANGED" = "true" ]; then
          echo "Changes detected in ./nlp/. Building arches-nlp..."
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-nlp:$SHORT_SHA \
            --cache=true \
            --cache-ttl=24h \
            --context=./nlp \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "No changes detected in ./nlp/. Skipping arches-nlp build."
        fi

  # Step 5: Get latest image tags
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    id: get-latest-image-tags
    waitFor:
      - build-arches-api
      - build-arches-nlp
    args: ["./deploy/scripts/01_get-release-values.sh"]
    secretEnv:
      - GITHUB_TOKEN

  # Step 6: Generate .env file
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    id: generate-dotenv
    waitFor:
      - get-latest-image-tags
    args: ["./deploy/scripts/02_generate-dotenv.sh"]

  # Step 7: Create release in Cloud Deploy
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    id: create-release
    waitFor:
      - generate-dotenv
    args: ["./deploy/scripts/03_create-release.sh"]

availableSecrets:
  secretManager:
    - versionName: projects/archesai/secrets/GH_PAT/versions/1
      env: GITHUB_TOKEN
