options:
  machineType: "E2_HIGHCPU_32"

steps:
  # Step 0: Debug the workspace (Optional)
  - name: "gcr.io/cloud-builders/gcloud"
    id: debug-workspace
    entrypoint: bash
    args:
      - "-c"
      - |
        echo "Listing contents of /workspace:"
        ls -la /workspace
        echo "Current Git status:"
        git status

  # Step 1: Detect changes in api/ and nlp/ directories
  - name: "gcr.io/cloud-builders/git"
    id: detect-changes
    entrypoint: bash
    secretEnv:
      - GITHUB_TOKEN
    args:
      - "-c"
      - |
        #!/bin/bash
        set -e

        # Set up netrc file for authentication
        echo "machine github.com login x-access-token password $$GITHUB_TOKEN" > ~/.netrc
        chmod 600 ~/.netrc

        # Ensure we have the full history
        git fetch --unshallow

        # Check out the correct branch
        git checkout $BRANCH_NAME

        # Get the previous commit hash
        previous_commit=$(git rev-parse HEAD~1)

        # List files changed between the previous commit and the current one
        changed_files=$(git diff --name-only "$previous_commit" HEAD)

        echo "Changed files:"
        echo "$changed_files"

        # Detect changes in ./api/
        if echo "$changed_files" | grep -q '^api/'; then
          echo "true" > /workspace/api_changed
        else
          echo "false" > /workspace/api_changed
        fi

        # Detect changes in ./nlp/
        if echo "$changed_files" | grep -q '^nlp/'; then
          echo "true" > /workspace/nlp_changed
        else
          echo "false" > /workspace/nlp_changed
        fi

        cat /workspace/api_changed
        cat /workspace/nlp_changed

  - name: node
    id: lint
    entrypoint: bash
    args:
      - "-c"
      - |
        cd ./api && npm install && cd ../ui && npm install && cd .. && make lint

  # Step 2: Conditionally build arches-api
  - name: "gcr.io/kaniko-project/executor:debug"
    id: build-arches-api
    waitFor: ["detect-changes"]
    entrypoint: /busybox/sh
    args:
      - "-c"
      - |
        if [ "$(cat /workspace/api_changed)" = "true" ]; then
          echo "Changes detected in ./api/. Building arches-api..."
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-api:latest \
            --cache=true \
            --cache-ttl=24h \
            --context=./api \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "No changes detected in ./api/. Skipping build..."
        fi

  # Step 3: Conditionally build arches-nlp
  - name: "gcr.io/kaniko-project/executor:debug"
    id: build-arches-nlp
    waitFor: ["detect-changes"]
    entrypoint: /busybox/sh
    args:
      - "-c"
      - |
        if [ "$(cat /workspace/nlp_changed)" = "true" ]; then
          echo "Changes detected in ./nlp/. Building arches-nlp..."
          /kaniko/executor \
            --destination=us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-nlp:latest \
            --cache=true \
            --cache-ttl=24h \
            --context=./nlp \
            --snapshot-mode=redo \
            --use-new-run
        else
          echo "No changes detected in ./nlp/. Skipping build..."
        fi

  # Step 4: Tag arches-api image if no changes
  - name: "gcr.io/cloud-builders/gcloud"
    id: tag-arches-api
    waitFor: ["build-arches-api"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud container images add-tag \
          us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-api:latest \
          us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-api:$SHORT_SHA

  # Step 5: Tag arches-nlp image if no changes
  - name: "gcr.io/cloud-builders/gcloud"
    id: tag-arches-nlp
    waitFor: ["build-arches-nlp"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud container images add-tag \
          us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-nlp:latest \
          us-east4-docker.pkg.dev/$PROJECT_ID/images/arches-nlp:$SHORT_SHA

  - name: "gcr.io/cloud-builders/gcloud"
    id: generate-dotenv
    entrypoint: "bash"
    args:
      - "./deploy/scripts/generate-dotenv.sh"

  - name: "gcr.io/cloud-builders/gcloud"
    id: create-release
    waitFor: ["tag-arches-api", "tag-arches-nlp", "lint"]
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud components install gke-gcloud-auth-plugin
        gcloud container clusters get-credentials archesai-cluster --zone us-east1-c --project archesai
        gcloud deploy releases create arches-${SHORT_SHA} \
            --project=archesai \
            --region=us-east1 \
            --delivery-pipeline=arches-deployment \
            --images=us-east4-docker.pkg.dev/archesai/images/arches-api=us-east4-docker.pkg.dev/archesai/images/arches-api:${SHORT_SHA},us-east4-docker.pkg.dev/archesai/images/arches-ui=us-east4-docker.pkg.dev/archesai/images/arches-ui:${SHORT_SHA},us-east4-docker.pkg.dev/archesai/images/arches-nlp=us-east4-docker.pkg.dev/archesai/images/arches-nlp:${SHORT_SHA} \
            --skaffold-file=./deploy/skaffold.yaml

availableSecrets:
  secretManager:
    - versionName: projects/archesai/secrets/GH_PAT/versions/1
      env: GITHUB_TOKEN
