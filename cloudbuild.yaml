options:
  machineType: "N1_HIGHCPU_8"
substitutions:
  _API_SHA: default
  _UI_SHA: default
  _NLP_SHA: default
  _VERSION: v0.0.0

steps:
  - name: gcr.io/cloud-builders/gcloud
    id: Release
    env:
      - API_SHA=$_API_SHA
      - UI_SHA=$_UI_SHA
      - NLP_SHA=$_NLP_SHA
      - VERSION=$_VERSION

    script: |
      #!/usr/bin/env bash

      prod_env_file="./kubernetes/overlays/saas/production/.env.production"
      stage_env_file="./kubernetes/overlays/saas/stage/.env.stage"
      redis_ca_file="./kubernetes/overlays/saas/base/redis-ca.pem"

      > "$prod_env_file"
      > "$stage_env_file"
      > "$redis_ca_file"

      while IFS= read -r line || [[ -n "$line" ]]; do
        if [[ "$line" == *{{*}}* ]]; then
          placeholder=$(echo $line | grep -oP '{{\K[^}]+')
          secret_key=$(echo $placeholder | cut -d ':' -f 1)
          secret_version=$(echo $placeholder | cut -d ':' -f 2)
          secret_value=$(gcloud secrets versions access $secret_version --secret="$secret_key")
          line=${line//\{\{$placeholder\}\}/$secret_value}
        fi
        echo "$line" >> "$prod_env_file"
      done < .env.template

      yes | cp -f "$prod_env_file" "$stage_env_file"
      secrets=$(gcloud secrets list --project=archesai --filter="name:STAGE_" --format="value(name)")
      for secret_name in $secrets; do
          secret_value=$(gcloud secrets versions access latest --secret="$secret_name" --project=archesai)
          trimmed_key_name=${secret_name#STAGE_}
          sed -i "/^$trimmed_key_name=/d" "$stage_env_file"
          echo "$trimmed_key_name=$secret_value" >> "$stage_env_file"
      done

      echo "$(gcloud secrets versions access latest --secret=PROD_REDIS_CA --project=archesai)" > "$redis_ca_file"

      VERSION=$(echo "${VERSION}" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g')
      TIMESTAMP=$(date +'%Y%m%d%H%M%S')
      RELEASE_NAME="release-${VERSION}-${TIMESTAMP}"
      RELEASE_NAME="${RELEASE_NAME:0:63}"
      gcloud components install gke-gcloud-auth-plugin
      gcloud container clusters get-credentials archesai-cluster --zone us-east1-c --project archesai
      gcloud deploy releases create "$RELEASE_NAME" \
      --project=archesai \
      --region=us-east1 \
      --delivery-pipeline=arches-deployment \
      --images=us-east4-docker.pkg.dev/archesai/images/arches-api=us-east4-docker.pkg.dev/archesai/images/arches-api:${API_SHA},us-east4-docker.pkg.dev/archesai/images/arches-ui=us-east4-docker.pkg.dev/archesai/images/arches-ui:${UI_SHA},us-east4-docker.pkg.dev/archesai/images/arches-nlp=us-east4-docker.pkg.dev/archesai/images/arches-nlp:${NLP_SHA}
