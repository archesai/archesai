/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as appArtifactsSingleIndexRouteImport } from './app/(app)/artifacts/single/index'
import { Route as appArtifactsViewIndexRouteImport } from './app/(app)/artifacts/view/index'
import { Route as appChatIndexRouteImport } from './app/(app)/chat/index'
import { Route as appLabelsIndexRouteImport } from './app/(app)/labels/index'
import { Route as appOrganizationApiTokensIndexRouteImport } from './app/(app)/organization/api-tokens/index'
import { Route as appOrganizationGeneralIndexRouteImport } from './app/(app)/organization/general/index'
import { Route as appOrganizationMembersIndexRouteImport } from './app/(app)/organization/members/index'
import { Route as appPipelinesCreateIndexRouteImport } from './app/(app)/pipelines/create/index'
import { Route as appPipelinesIndexRouteImport } from './app/(app)/pipelines/index'
import { Route as appPlaygroundIndexRouteImport } from './app/(app)/playground/index'
import { Route as appProfileGeneralIndexRouteImport } from './app/(app)/profile/general/index'
import { Route as appProfileSecurityIndexRouteImport } from './app/(app)/profile/security/index'
import { Route as appRunsIndexRouteImport } from './app/(app)/runs/index'
import { Route as appToolsIndexRouteImport } from './app/(app)/tools/index'
import { Route as AuthConfirmIndexRouteImport } from './app/auth/confirm/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './app/auth/forgot-password/index'
import { Route as AuthLoginIndexRouteImport } from './app/auth/login/index'
import { Route as AuthRegisterIndexRouteImport } from './app/auth/register/index'
import { Route as AuthRouteRouteImport } from './app/auth/route'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => AuthRouteRoute
} as any)
const AuthConfirmIndexRoute = AuthConfirmIndexRouteImport.update({
  id: '/confirm/',
  path: '/confirm/',
  getParentRoute: () => AuthRouteRoute
} as any)
const appToolsIndexRoute = appToolsIndexRouteImport.update({
  id: '/(app)/tools/',
  path: '/tools/',
  getParentRoute: () => rootRouteImport
} as any)
const appRunsIndexRoute = appRunsIndexRouteImport.update({
  id: '/(app)/runs/',
  path: '/runs/',
  getParentRoute: () => rootRouteImport
} as any)
const appPlaygroundIndexRoute = appPlaygroundIndexRouteImport.update({
  id: '/(app)/playground/',
  path: '/playground/',
  getParentRoute: () => rootRouteImport
} as any)
const appPipelinesIndexRoute = appPipelinesIndexRouteImport.update({
  id: '/(app)/pipelines/',
  path: '/pipelines/',
  getParentRoute: () => rootRouteImport
} as any)
const appLabelsIndexRoute = appLabelsIndexRouteImport.update({
  id: '/(app)/labels/',
  path: '/labels/',
  getParentRoute: () => rootRouteImport
} as any)
const appChatIndexRoute = appChatIndexRouteImport.update({
  id: '/(app)/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport
} as any)
const appProfileSecurityIndexRoute = appProfileSecurityIndexRouteImport.update({
  id: '/(app)/profile/security/',
  path: '/profile/security/',
  getParentRoute: () => rootRouteImport
} as any)
const appProfileGeneralIndexRoute = appProfileGeneralIndexRouteImport.update({
  id: '/(app)/profile/general/',
  path: '/profile/general/',
  getParentRoute: () => rootRouteImport
} as any)
const appPipelinesCreateIndexRoute = appPipelinesCreateIndexRouteImport.update({
  id: '/(app)/pipelines/create/',
  path: '/pipelines/create/',
  getParentRoute: () => rootRouteImport
} as any)
const appOrganizationMembersIndexRoute =
  appOrganizationMembersIndexRouteImport.update({
    id: '/(app)/organization/members/',
    path: '/organization/members/',
    getParentRoute: () => rootRouteImport
  } as any)
const appOrganizationGeneralIndexRoute =
  appOrganizationGeneralIndexRouteImport.update({
    id: '/(app)/organization/general/',
    path: '/organization/general/',
    getParentRoute: () => rootRouteImport
  } as any)
const appOrganizationApiTokensIndexRoute =
  appOrganizationApiTokensIndexRouteImport.update({
    id: '/(app)/organization/api-tokens/',
    path: '/organization/api-tokens/',
    getParentRoute: () => rootRouteImport
  } as any)
const appArtifactsViewIndexRoute = appArtifactsViewIndexRouteImport.update({
  id: '/(app)/artifacts/view/',
  path: '/artifacts/view/',
  getParentRoute: () => rootRouteImport
} as any)
const appArtifactsSingleIndexRoute = appArtifactsSingleIndexRouteImport.update({
  id: '/(app)/artifacts/single/',
  path: '/artifacts/single/',
  getParentRoute: () => rootRouteImport
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteRouteWithChildren
  '/chat': typeof appChatIndexRoute
  '/labels': typeof appLabelsIndexRoute
  '/pipelines': typeof appPipelinesIndexRoute
  '/playground': typeof appPlaygroundIndexRoute
  '/runs': typeof appRunsIndexRoute
  '/tools': typeof appToolsIndexRoute
  '/auth/confirm': typeof AuthConfirmIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/artifacts/single': typeof appArtifactsSingleIndexRoute
  '/artifacts/view': typeof appArtifactsViewIndexRoute
  '/organization/api-tokens': typeof appOrganizationApiTokensIndexRoute
  '/organization/general': typeof appOrganizationGeneralIndexRoute
  '/organization/members': typeof appOrganizationMembersIndexRoute
  '/pipelines/create': typeof appPipelinesCreateIndexRoute
  '/profile/general': typeof appProfileGeneralIndexRoute
  '/profile/security': typeof appProfileSecurityIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/chat': typeof appChatIndexRoute
  '/labels': typeof appLabelsIndexRoute
  '/pipelines': typeof appPipelinesIndexRoute
  '/playground': typeof appPlaygroundIndexRoute
  '/runs': typeof appRunsIndexRoute
  '/tools': typeof appToolsIndexRoute
  '/auth/confirm': typeof AuthConfirmIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/artifacts/single': typeof appArtifactsSingleIndexRoute
  '/artifacts/view': typeof appArtifactsViewIndexRoute
  '/organization/api-tokens': typeof appOrganizationApiTokensIndexRoute
  '/organization/general': typeof appOrganizationGeneralIndexRoute
  '/organization/members': typeof appOrganizationMembersIndexRoute
  '/pipelines/create': typeof appPipelinesCreateIndexRoute
  '/profile/general': typeof appProfileGeneralIndexRoute
  '/profile/security': typeof appProfileSecurityIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/auth': typeof AuthRouteRouteWithChildren
  '/(app)/chat/': typeof appChatIndexRoute
  '/(app)/labels/': typeof appLabelsIndexRoute
  '/(app)/pipelines/': typeof appPipelinesIndexRoute
  '/(app)/playground/': typeof appPlaygroundIndexRoute
  '/(app)/runs/': typeof appRunsIndexRoute
  '/(app)/tools/': typeof appToolsIndexRoute
  '/auth/confirm/': typeof AuthConfirmIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/(app)/artifacts/single/': typeof appArtifactsSingleIndexRoute
  '/(app)/artifacts/view/': typeof appArtifactsViewIndexRoute
  '/(app)/organization/api-tokens/': typeof appOrganizationApiTokensIndexRoute
  '/(app)/organization/general/': typeof appOrganizationGeneralIndexRoute
  '/(app)/organization/members/': typeof appOrganizationMembersIndexRoute
  '/(app)/pipelines/create/': typeof appPipelinesCreateIndexRoute
  '/(app)/profile/general/': typeof appProfileGeneralIndexRoute
  '/(app)/profile/security/': typeof appProfileSecurityIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/chat'
    | '/labels'
    | '/pipelines'
    | '/playground'
    | '/runs'
    | '/tools'
    | '/auth/confirm'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/artifacts/single'
    | '/artifacts/view'
    | '/organization/api-tokens'
    | '/organization/general'
    | '/organization/members'
    | '/pipelines/create'
    | '/profile/general'
    | '/profile/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/chat'
    | '/labels'
    | '/pipelines'
    | '/playground'
    | '/runs'
    | '/tools'
    | '/auth/confirm'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/artifacts/single'
    | '/artifacts/view'
    | '/organization/api-tokens'
    | '/organization/general'
    | '/organization/members'
    | '/pipelines/create'
    | '/profile/general'
    | '/profile/security'
  id:
    | '__root__'
    | '/auth'
    | '/(app)/chat/'
    | '/(app)/labels/'
    | '/(app)/pipelines/'
    | '/(app)/playground/'
    | '/(app)/runs/'
    | '/(app)/tools/'
    | '/auth/confirm/'
    | '/auth/forgot-password/'
    | '/auth/login/'
    | '/auth/register/'
    | '/(app)/artifacts/single/'
    | '/(app)/artifacts/view/'
    | '/(app)/organization/api-tokens/'
    | '/(app)/organization/general/'
    | '/(app)/organization/members/'
    | '/(app)/pipelines/create/'
    | '/(app)/profile/general/'
    | '/(app)/profile/security/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  appChatIndexRoute: typeof appChatIndexRoute
  appLabelsIndexRoute: typeof appLabelsIndexRoute
  appPipelinesIndexRoute: typeof appPipelinesIndexRoute
  appPlaygroundIndexRoute: typeof appPlaygroundIndexRoute
  appRunsIndexRoute: typeof appRunsIndexRoute
  appToolsIndexRoute: typeof appToolsIndexRoute
  appArtifactsSingleIndexRoute: typeof appArtifactsSingleIndexRoute
  appArtifactsViewIndexRoute: typeof appArtifactsViewIndexRoute
  appOrganizationApiTokensIndexRoute: typeof appOrganizationApiTokensIndexRoute
  appOrganizationGeneralIndexRoute: typeof appOrganizationGeneralIndexRoute
  appOrganizationMembersIndexRoute: typeof appOrganizationMembersIndexRoute
  appPipelinesCreateIndexRoute: typeof appPipelinesCreateIndexRoute
  appProfileGeneralIndexRoute: typeof appProfileGeneralIndexRoute
  appProfileSecurityIndexRoute: typeof appProfileSecurityIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/confirm/': {
      id: '/auth/confirm/'
      path: '/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/(app)/tools/': {
      id: '/(app)/tools/'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof appToolsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/runs/': {
      id: '/(app)/runs/'
      path: '/runs'
      fullPath: '/runs'
      preLoaderRoute: typeof appRunsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/playground/': {
      id: '/(app)/playground/'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof appPlaygroundIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/pipelines/': {
      id: '/(app)/pipelines/'
      path: '/pipelines'
      fullPath: '/pipelines'
      preLoaderRoute: typeof appPipelinesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/labels/': {
      id: '/(app)/labels/'
      path: '/labels'
      fullPath: '/labels'
      preLoaderRoute: typeof appLabelsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/chat/': {
      id: '/(app)/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof appChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/profile/security/': {
      id: '/(app)/profile/security/'
      path: '/profile/security'
      fullPath: '/profile/security'
      preLoaderRoute: typeof appProfileSecurityIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/profile/general/': {
      id: '/(app)/profile/general/'
      path: '/profile/general'
      fullPath: '/profile/general'
      preLoaderRoute: typeof appProfileGeneralIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/pipelines/create/': {
      id: '/(app)/pipelines/create/'
      path: '/pipelines/create'
      fullPath: '/pipelines/create'
      preLoaderRoute: typeof appPipelinesCreateIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/organization/members/': {
      id: '/(app)/organization/members/'
      path: '/organization/members'
      fullPath: '/organization/members'
      preLoaderRoute: typeof appOrganizationMembersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/organization/general/': {
      id: '/(app)/organization/general/'
      path: '/organization/general'
      fullPath: '/organization/general'
      preLoaderRoute: typeof appOrganizationGeneralIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/organization/api-tokens/': {
      id: '/(app)/organization/api-tokens/'
      path: '/organization/api-tokens'
      fullPath: '/organization/api-tokens'
      preLoaderRoute: typeof appOrganizationApiTokensIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/artifacts/view/': {
      id: '/(app)/artifacts/view/'
      path: '/artifacts/view'
      fullPath: '/artifacts/view'
      preLoaderRoute: typeof appArtifactsViewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/artifacts/single/': {
      id: '/(app)/artifacts/single/'
      path: '/artifacts/single'
      fullPath: '/artifacts/single'
      preLoaderRoute: typeof appArtifactsSingleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AuthRouteRouteChildren {
  AuthConfirmIndexRoute: typeof AuthConfirmIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConfirmIndexRoute: AuthConfirmIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren
)

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  appChatIndexRoute: appChatIndexRoute,
  appLabelsIndexRoute: appLabelsIndexRoute,
  appPipelinesIndexRoute: appPipelinesIndexRoute,
  appPlaygroundIndexRoute: appPlaygroundIndexRoute,
  appRunsIndexRoute: appRunsIndexRoute,
  appToolsIndexRoute: appToolsIndexRoute,
  appArtifactsSingleIndexRoute: appArtifactsSingleIndexRoute,
  appArtifactsViewIndexRoute: appArtifactsViewIndexRoute,
  appOrganizationApiTokensIndexRoute: appOrganizationApiTokensIndexRoute,
  appOrganizationGeneralIndexRoute: appOrganizationGeneralIndexRoute,
  appOrganizationMembersIndexRoute: appOrganizationMembersIndexRoute,
  appPipelinesCreateIndexRoute: appPipelinesCreateIndexRoute,
  appProfileGeneralIndexRoute: appProfileGeneralIndexRoute,
  appProfileSecurityIndexRoute: appProfileSecurityIndexRoute
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
