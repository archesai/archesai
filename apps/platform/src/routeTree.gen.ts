/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as AuthRouteRouteImport } from './app/auth/route'
import { Route as AppRouteRouteImport } from './app/_app/route'
import { Route as AppIndexRouteImport } from './app/_app/index'
import { Route as AuthRegisterIndexRouteImport } from './app/auth/register/index'
import { Route as AuthLoginIndexRouteImport } from './app/auth/login/index'
import { Route as AuthForgotPasswordIndexRouteImport } from './app/auth/forgot-password/index'
import { Route as AuthConfirmIndexRouteImport } from './app/auth/confirm/index'
import { Route as AppToolsIndexRouteImport } from './app/_app/tools/index'
import { Route as AppRunsIndexRouteImport } from './app/_app/runs/index'
import { Route as AppPlaygroundIndexRouteImport } from './app/_app/playground/index'
import { Route as AppPipelinesIndexRouteImport } from './app/_app/pipelines/index'
import { Route as AppLabelsIndexRouteImport } from './app/_app/labels/index'
import { Route as AppChatIndexRouteImport } from './app/_app/chat/index'
import { Route as AppProfileSecurityIndexRouteImport } from './app/_app/profile/security/index'
import { Route as AppProfileGeneralIndexRouteImport } from './app/_app/profile/general/index'
import { Route as AppPipelinesCreateIndexRouteImport } from './app/_app/pipelines/create/index'
import { Route as AppOrganizationMembersIndexRouteImport } from './app/_app/organization/members/index'
import { Route as AppOrganizationGeneralIndexRouteImport } from './app/_app/organization/general/index'
import { Route as AppOrganizationBillingIndexRouteImport } from './app/_app/organization/billing/index'
import { Route as AppOrganizationApiTokensIndexRouteImport } from './app/_app/organization/api-tokens/index'
import { Route as AppArtifactsViewIndexRouteImport } from './app/_app/artifacts/view/index'
import { Route as AppArtifactsSingleIndexRouteImport } from './app/_app/artifacts/single/index'

const AuthRouteRoute = AuthRouteRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRouteRoute = AppRouteRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthForgotPasswordIndexRoute = AuthForgotPasswordIndexRouteImport.update({
  id: '/forgot-password/',
  path: '/forgot-password/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AuthConfirmIndexRoute = AuthConfirmIndexRouteImport.update({
  id: '/confirm/',
  path: '/confirm/',
  getParentRoute: () => AuthRouteRoute,
} as any)
const AppToolsIndexRoute = AppToolsIndexRouteImport.update({
  id: '/tools/',
  path: '/tools/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppRunsIndexRoute = AppRunsIndexRouteImport.update({
  id: '/runs/',
  path: '/runs/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPlaygroundIndexRoute = AppPlaygroundIndexRouteImport.update({
  id: '/playground/',
  path: '/playground/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPipelinesIndexRoute = AppPipelinesIndexRouteImport.update({
  id: '/pipelines/',
  path: '/pipelines/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppLabelsIndexRoute = AppLabelsIndexRouteImport.update({
  id: '/labels/',
  path: '/labels/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppChatIndexRoute = AppChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileSecurityIndexRoute = AppProfileSecurityIndexRouteImport.update({
  id: '/profile/security/',
  path: '/profile/security/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppProfileGeneralIndexRoute = AppProfileGeneralIndexRouteImport.update({
  id: '/profile/general/',
  path: '/profile/general/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppPipelinesCreateIndexRoute = AppPipelinesCreateIndexRouteImport.update({
  id: '/pipelines/create/',
  path: '/pipelines/create/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppOrganizationMembersIndexRoute =
  AppOrganizationMembersIndexRouteImport.update({
    id: '/organization/members/',
    path: '/organization/members/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppOrganizationGeneralIndexRoute =
  AppOrganizationGeneralIndexRouteImport.update({
    id: '/organization/general/',
    path: '/organization/general/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppOrganizationBillingIndexRoute =
  AppOrganizationBillingIndexRouteImport.update({
    id: '/organization/billing/',
    path: '/organization/billing/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppOrganizationApiTokensIndexRoute =
  AppOrganizationApiTokensIndexRouteImport.update({
    id: '/organization/api-tokens/',
    path: '/organization/api-tokens/',
    getParentRoute: () => AppRouteRoute,
  } as any)
const AppArtifactsViewIndexRoute = AppArtifactsViewIndexRouteImport.update({
  id: '/artifacts/view/',
  path: '/artifacts/view/',
  getParentRoute: () => AppRouteRoute,
} as any)
const AppArtifactsSingleIndexRoute = AppArtifactsSingleIndexRouteImport.update({
  id: '/artifacts/single/',
  path: '/artifacts/single/',
  getParentRoute: () => AppRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/chat': typeof AppChatIndexRoute
  '/labels': typeof AppLabelsIndexRoute
  '/pipelines': typeof AppPipelinesIndexRoute
  '/playground': typeof AppPlaygroundIndexRoute
  '/runs': typeof AppRunsIndexRoute
  '/tools': typeof AppToolsIndexRoute
  '/auth/confirm': typeof AuthConfirmIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/artifacts/single': typeof AppArtifactsSingleIndexRoute
  '/artifacts/view': typeof AppArtifactsViewIndexRoute
  '/organization/api-tokens': typeof AppOrganizationApiTokensIndexRoute
  '/organization/billing': typeof AppOrganizationBillingIndexRoute
  '/organization/general': typeof AppOrganizationGeneralIndexRoute
  '/organization/members': typeof AppOrganizationMembersIndexRoute
  '/pipelines/create': typeof AppPipelinesCreateIndexRoute
  '/profile/general': typeof AppProfileGeneralIndexRoute
  '/profile/security': typeof AppProfileSecurityIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteRouteWithChildren
  '/': typeof AppIndexRoute
  '/chat': typeof AppChatIndexRoute
  '/labels': typeof AppLabelsIndexRoute
  '/pipelines': typeof AppPipelinesIndexRoute
  '/playground': typeof AppPlaygroundIndexRoute
  '/runs': typeof AppRunsIndexRoute
  '/tools': typeof AppToolsIndexRoute
  '/auth/confirm': typeof AuthConfirmIndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordIndexRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/auth/register': typeof AuthRegisterIndexRoute
  '/artifacts/single': typeof AppArtifactsSingleIndexRoute
  '/artifacts/view': typeof AppArtifactsViewIndexRoute
  '/organization/api-tokens': typeof AppOrganizationApiTokensIndexRoute
  '/organization/billing': typeof AppOrganizationBillingIndexRoute
  '/organization/general': typeof AppOrganizationGeneralIndexRoute
  '/organization/members': typeof AppOrganizationMembersIndexRoute
  '/pipelines/create': typeof AppPipelinesCreateIndexRoute
  '/profile/general': typeof AppProfileGeneralIndexRoute
  '/profile/security': typeof AppProfileSecurityIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppRouteRouteWithChildren
  '/auth': typeof AuthRouteRouteWithChildren
  '/_app/': typeof AppIndexRoute
  '/_app/chat/': typeof AppChatIndexRoute
  '/_app/labels/': typeof AppLabelsIndexRoute
  '/_app/pipelines/': typeof AppPipelinesIndexRoute
  '/_app/playground/': typeof AppPlaygroundIndexRoute
  '/_app/runs/': typeof AppRunsIndexRoute
  '/_app/tools/': typeof AppToolsIndexRoute
  '/auth/confirm/': typeof AuthConfirmIndexRoute
  '/auth/forgot-password/': typeof AuthForgotPasswordIndexRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/auth/register/': typeof AuthRegisterIndexRoute
  '/_app/artifacts/single/': typeof AppArtifactsSingleIndexRoute
  '/_app/artifacts/view/': typeof AppArtifactsViewIndexRoute
  '/_app/organization/api-tokens/': typeof AppOrganizationApiTokensIndexRoute
  '/_app/organization/billing/': typeof AppOrganizationBillingIndexRoute
  '/_app/organization/general/': typeof AppOrganizationGeneralIndexRoute
  '/_app/organization/members/': typeof AppOrganizationMembersIndexRoute
  '/_app/pipelines/create/': typeof AppPipelinesCreateIndexRoute
  '/_app/profile/general/': typeof AppProfileGeneralIndexRoute
  '/_app/profile/security/': typeof AppProfileSecurityIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/'
    | '/chat'
    | '/labels'
    | '/pipelines'
    | '/playground'
    | '/runs'
    | '/tools'
    | '/auth/confirm'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/artifacts/single'
    | '/artifacts/view'
    | '/organization/api-tokens'
    | '/organization/billing'
    | '/organization/general'
    | '/organization/members'
    | '/pipelines/create'
    | '/profile/general'
    | '/profile/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/'
    | '/chat'
    | '/labels'
    | '/pipelines'
    | '/playground'
    | '/runs'
    | '/tools'
    | '/auth/confirm'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/artifacts/single'
    | '/artifacts/view'
    | '/organization/api-tokens'
    | '/organization/billing'
    | '/organization/general'
    | '/organization/members'
    | '/pipelines/create'
    | '/profile/general'
    | '/profile/security'
  id:
    | '__root__'
    | '/_app'
    | '/auth'
    | '/_app/'
    | '/_app/chat/'
    | '/_app/labels/'
    | '/_app/pipelines/'
    | '/_app/playground/'
    | '/_app/runs/'
    | '/_app/tools/'
    | '/auth/confirm/'
    | '/auth/forgot-password/'
    | '/auth/login/'
    | '/auth/register/'
    | '/_app/artifacts/single/'
    | '/_app/artifacts/view/'
    | '/_app/organization/api-tokens/'
    | '/_app/organization/billing/'
    | '/_app/organization/general/'
    | '/_app/organization/members/'
    | '/_app/pipelines/create/'
    | '/_app/profile/general/'
    | '/_app/profile/security/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/auth/register/': {
      id: '/auth/register/'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/forgot-password/': {
      id: '/auth/forgot-password/'
      path: '/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/auth/confirm/': {
      id: '/auth/confirm/'
      path: '/confirm'
      fullPath: '/auth/confirm'
      preLoaderRoute: typeof AuthConfirmIndexRouteImport
      parentRoute: typeof AuthRouteRoute
    }
    '/_app/tools/': {
      id: '/_app/tools/'
      path: '/tools'
      fullPath: '/tools'
      preLoaderRoute: typeof AppToolsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/runs/': {
      id: '/_app/runs/'
      path: '/runs'
      fullPath: '/runs'
      preLoaderRoute: typeof AppRunsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/playground/': {
      id: '/_app/playground/'
      path: '/playground'
      fullPath: '/playground'
      preLoaderRoute: typeof AppPlaygroundIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/pipelines/': {
      id: '/_app/pipelines/'
      path: '/pipelines'
      fullPath: '/pipelines'
      preLoaderRoute: typeof AppPipelinesIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/labels/': {
      id: '/_app/labels/'
      path: '/labels'
      fullPath: '/labels'
      preLoaderRoute: typeof AppLabelsIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/chat/': {
      id: '/_app/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof AppChatIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/profile/security/': {
      id: '/_app/profile/security/'
      path: '/profile/security'
      fullPath: '/profile/security'
      preLoaderRoute: typeof AppProfileSecurityIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/profile/general/': {
      id: '/_app/profile/general/'
      path: '/profile/general'
      fullPath: '/profile/general'
      preLoaderRoute: typeof AppProfileGeneralIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/pipelines/create/': {
      id: '/_app/pipelines/create/'
      path: '/pipelines/create'
      fullPath: '/pipelines/create'
      preLoaderRoute: typeof AppPipelinesCreateIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/organization/members/': {
      id: '/_app/organization/members/'
      path: '/organization/members'
      fullPath: '/organization/members'
      preLoaderRoute: typeof AppOrganizationMembersIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/organization/general/': {
      id: '/_app/organization/general/'
      path: '/organization/general'
      fullPath: '/organization/general'
      preLoaderRoute: typeof AppOrganizationGeneralIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/organization/billing/': {
      id: '/_app/organization/billing/'
      path: '/organization/billing'
      fullPath: '/organization/billing'
      preLoaderRoute: typeof AppOrganizationBillingIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/organization/api-tokens/': {
      id: '/_app/organization/api-tokens/'
      path: '/organization/api-tokens'
      fullPath: '/organization/api-tokens'
      preLoaderRoute: typeof AppOrganizationApiTokensIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/artifacts/view/': {
      id: '/_app/artifacts/view/'
      path: '/artifacts/view'
      fullPath: '/artifacts/view'
      preLoaderRoute: typeof AppArtifactsViewIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
    '/_app/artifacts/single/': {
      id: '/_app/artifacts/single/'
      path: '/artifacts/single'
      fullPath: '/artifacts/single'
      preLoaderRoute: typeof AppArtifactsSingleIndexRouteImport
      parentRoute: typeof AppRouteRoute
    }
  }
}

interface AppRouteRouteChildren {
  AppIndexRoute: typeof AppIndexRoute
  AppChatIndexRoute: typeof AppChatIndexRoute
  AppLabelsIndexRoute: typeof AppLabelsIndexRoute
  AppPipelinesIndexRoute: typeof AppPipelinesIndexRoute
  AppPlaygroundIndexRoute: typeof AppPlaygroundIndexRoute
  AppRunsIndexRoute: typeof AppRunsIndexRoute
  AppToolsIndexRoute: typeof AppToolsIndexRoute
  AppArtifactsSingleIndexRoute: typeof AppArtifactsSingleIndexRoute
  AppArtifactsViewIndexRoute: typeof AppArtifactsViewIndexRoute
  AppOrganizationApiTokensIndexRoute: typeof AppOrganizationApiTokensIndexRoute
  AppOrganizationBillingIndexRoute: typeof AppOrganizationBillingIndexRoute
  AppOrganizationGeneralIndexRoute: typeof AppOrganizationGeneralIndexRoute
  AppOrganizationMembersIndexRoute: typeof AppOrganizationMembersIndexRoute
  AppPipelinesCreateIndexRoute: typeof AppPipelinesCreateIndexRoute
  AppProfileGeneralIndexRoute: typeof AppProfileGeneralIndexRoute
  AppProfileSecurityIndexRoute: typeof AppProfileSecurityIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppIndexRoute: AppIndexRoute,
  AppChatIndexRoute: AppChatIndexRoute,
  AppLabelsIndexRoute: AppLabelsIndexRoute,
  AppPipelinesIndexRoute: AppPipelinesIndexRoute,
  AppPlaygroundIndexRoute: AppPlaygroundIndexRoute,
  AppRunsIndexRoute: AppRunsIndexRoute,
  AppToolsIndexRoute: AppToolsIndexRoute,
  AppArtifactsSingleIndexRoute: AppArtifactsSingleIndexRoute,
  AppArtifactsViewIndexRoute: AppArtifactsViewIndexRoute,
  AppOrganizationApiTokensIndexRoute: AppOrganizationApiTokensIndexRoute,
  AppOrganizationBillingIndexRoute: AppOrganizationBillingIndexRoute,
  AppOrganizationGeneralIndexRoute: AppOrganizationGeneralIndexRoute,
  AppOrganizationMembersIndexRoute: AppOrganizationMembersIndexRoute,
  AppPipelinesCreateIndexRoute: AppPipelinesCreateIndexRoute,
  AppProfileGeneralIndexRoute: AppProfileGeneralIndexRoute,
  AppProfileSecurityIndexRoute: AppProfileSecurityIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthConfirmIndexRoute: typeof AuthConfirmIndexRoute
  AuthForgotPasswordIndexRoute: typeof AuthForgotPasswordIndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthConfirmIndexRoute: AuthConfirmIndexRoute,
  AuthForgotPasswordIndexRoute: AuthForgotPasswordIndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
