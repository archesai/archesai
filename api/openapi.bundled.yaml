openapi: 3.2.0
info:
  title: Arches AI API
  description: The Arches AI API
  version: v0.0.0
  summary: API for Arches AI platform
  termsOfService: https://archesai.com/terms
  license:
    name: AGPL-3.0
    url: https://opensource.org/licenses/AGPL-3.0
  contact:
    name: Arches AI Support
    email: support@archesai.com
    url: https://archesai.com/support
jsonSchemaDialect: https://spec.openapis.org/oas/3.2/dialect/2025-09-17
servers:
  - url: https://api.archesai.dev
    description: Remote development server
  - url: https://api.archesai.com
    description: Production server
security:
  - bearerAuth: []
  - sessionCookie: []
tags:
  - name: APIKey
    description: API key management
  - name: Artifact
    description: Content artifact management
  - name: Auth
    description: Authentication and authorization operations
  - name: Config
    description: Configuration management
  - name: Health
    description: Health check operations
  - name: Invitation
    description: Organization invitation management
  - name: Label
    description: Content label management
  - name: Member
    description: Organization member management
  - name: OAuth
    description: OAuth provider integration
  - name: Organization
    description: Organization management
  - name: Pipeline
    description: Pipeline management
  - name: Run
    description: Pipeline run management
  - name: Session
    description: User session management
  - name: Token
    description: API token management
  - name: Tool
    description: Tool management
  - name: User
    description: User profile management
paths:
  /auth/login:
    post:
      operationId: Login
      summary: Login
      tags:
        - Auth
      description: Authenticate user and create a session
      security:
        - {}
      x-public-endpoint: true
      x-codegen-custom-handler: true
      requestBody:
        description: User login credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email address associated with the account
                  type: string
                  format: email
                  example: user@example.com
                  minLength: 1
                  maxLength: 255
                password:
                  description: The password for the account
                  type: string
                  minLength: 1
                  maxLength: 72
                  example: secure-password-123
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                rememberMe:
                  description: Whether to create a long-lived session
                  type: boolean
                  default: false
                  example: true
              required:
                - email
                - password
        required: true
      responses:
        '201':
          $ref: '#/components/responses/SessionCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/logout:
    post:
      operationId: Logout
      summary: Logout
      tags:
        - Auth
      description: Logout from current session
      x-codegen-custom-handler: true
      security:
        - bearerAuth: []
        - sessionCookie: []
      responses:
        '200':
          $ref: '#/components/responses/LogoutResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/logout-all:
    post:
      operationId: LogoutAll
      summary: Logout all sessions
      tags:
        - Auth
      description: Logout from all sessions across all devices
      security:
        - bearerAuth: []
        - sessionCookie: []
      responses:
        '200':
          $ref: '#/components/responses/LogoutResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codegen-custom-handler: true
  /auth/register:
    post:
      operationId: Register
      summary: Register
      tags:
        - Auth
      description: Register a new user account with email and password
      security:
        - {}
      x-public-endpoint: true
      x-codegen-custom-handler: true
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email address for the new account
                  type: string
                  format: email
                  pattern: ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$
                  example: user@example.com
                  minLength: 1
                  maxLength: 255
                name:
                  description: The name of the user
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: John Doe
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                password:
                  description: The password for the account
                  type: string
                  minLength: 8
                  maxLength: 72
                  example: secure-password-123
                  pattern: ^[\w\s\-.,!?()@#+/]*$
              required:
                - email
                - name
                - password
        required: true
      responses:
        '201':
          $ref: '#/components/responses/SessionCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/magic-links/request:
    post:
      operationId: RequestMagicLink
      summary: Request a magic link
      description: Request a magic link to be sent via email or generate an OTP code
      tags:
        - Auth
      security:
        - {}
      x-public-endpoint: true
      x-codegen-custom-handler: true
      requestBody:
        description: Magic link authentication request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identifier:
                  description: Email address or username
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: user@example.com
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                deliveryMethod:
                  description: How to deliver the magic link
                  type: string
                  enum:
                    - email
                    - console
                    - otp
                    - webhook
                  default: email
                  example: email
                redirectUrl:
                  description: URL to redirect to after successful authentication
                  type: string
                  format: uri
                  minLength: 1
                  maxLength: 2048
                  example: https://app.archesai.com/dashboard
              required:
                - identifier
      responses:
        '200':
          description: Magic link requested successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    minLength: 1
                    maxLength: 500
                    example: Magic link sent to user@example.com
                    pattern: ^[\w\s\-.,!?()@]+$
                  otpCode:
                    description: OTP code (only returned if deliveryMethod is 'otp')
                    type: string
                    minLength: 6
                    maxLength: 6
                    example: '123456'
                    pattern: ^[A-Za-z0-9_-]+$
                  expiresIn:
                    description: Token expiry in seconds
                    type: integer
                    format: int32
                    minimum: 1
                    maximum: 2147483647
                    example: 900
                  token:
                    $ref: '#/components/schemas/MagicLinkToken'
              example:
                message: Magic link sent to user@example.com
                expiresIn: 900
          headers:
            Set-Cookie:
              $ref: '#/components/headers/SetCookie'
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/magic-links/verify:
    post:
      operationId: VerifyMagicLink
      summary: Verify a magic link token
      description: Verify a magic link token or OTP code and create a session
      tags:
        - Auth
      security:
        - {}
      x-public-endpoint: true
      x-codegen-custom-handler: true
      requestBody:
        description: Magic link verification request
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  description: Magic link token from URL
                  type: string
                  minLength: 32
                  maxLength: 512
                  example: abc123def456789ghi012jkl345mno678pqr901stu234
                  pattern: ^[A-Za-z0-9_-]+$
                code:
                  description: OTP code (alternative to token)
                  type: string
                  minLength: 6
                  maxLength: 6
                  pattern: ^[0-9]{6}$
                  example: '123456'
                identifier:
                  description: Required when using OTP code
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: user@example.com
                  pattern: ^[\w\s\-.,!?()@#+/]*$
      responses:
        '201':
          $ref: '#/components/responses/SessionCreated'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/link:
    post:
      x-codegen-custom-handler: true
      operationId: LinkAccount
      summary: Link authentication provider
      tags:
        - Auth
      description: Link an additional authentication provider to the current user account
      security:
        - bearerAuth: []
        - sessionCookie: []
      requestBody:
        description: Account linking request
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
              properties:
                provider:
                  description: The authentication provider to link
                  type: string
                  enum:
                    - google
                    - github
                    - microsoft
                    - apple
                  example: github
                redirectUrl:
                  description: URL to redirect to after successful linking
                  type: string
                  format: uri
                  maxLength: 2048
                  example: https://app.archesai.com/settings/security
      responses:
        '200':
          description: Provider linking initiated
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - authorizationUrl
                properties:
                  authorizationUrl:
                    description: URL to redirect the user to for provider authorization
                    type: string
                    format: uri
                    minLength: 1
                    maxLength: 2048
                    example: https://github.com/login/oauth/authorize?client_id=...
              example:
                authorizationUrl: https://github.com/login/oauth/authorize?client_id=abc123
          headers:
            X-RateLimit-Limit:
              description: The maximum number of requests allowed per time window
              schema:
                type: integer
                example: 1000
                format: int32
                minimum: 1
                maximum: 1000000
              example: 1000
            X-RateLimit-Remaining:
              description: The number of requests remaining in the current time window
              schema:
                type: integer
                example: 999
                format: int32
                minimum: 0
                maximum: 1000000
              example: 999
            X-RateLimit-Reset:
              description: The time at which the current rate limit window resets (Unix timestamp)
              schema:
                type: integer
                example: 1640995200
                format: int64
                minimum: 0
                maximum: 9223372036854776000
              example: 1640995200
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/sessions:
    get:
      operationId: ListSessions
      x-codegen-repository: Session
      summary: List sessions
      tags:
        - Auth
      description: List all active sessions for the current user
      security:
        - bearerAuth: []
        - sessionCookie: []
      parameters:
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/SessionsSort'
      responses:
        '200':
          $ref: '#/components/responses/SessionListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/sessions/{id}:
    get:
      operationId: GetSession
      x-codegen-repository: Session
      summary: Find a session
      tags:
        - Auth
      description: Find a session
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SessionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      x-codegen-custom-handler: true
      operationId: UpdateSession
      summary: Update Session
      tags:
        - Auth
      description: This endpoint will update the active organization for the current session
      requestBody:
        description: Session update data
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationID:
                  description: The organization ID to set as active for this session
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
              required:
                - organizationID
        required: true
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      responses:
        '200':
          $ref: '#/components/responses/SessionResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-codegen-custom-handler: true
      operationId: DeleteSession
      summary: Delete session (Logout)
      tags:
        - Auth
      description: Delete a specific session (logout from that session)
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/SessionResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/accounts:
    get:
      operationId: ListAccounts
      x-codegen-repository: Account
      summary: List linked accounts
      tags:
        - Auth
      description: List all linked authentication providers for the current user
      security:
        - bearerAuth: []
        - sessionCookie: []
      responses:
        '200':
          $ref: '#/components/responses/AccountListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/accounts/{id}:
    get:
      operationId: GetAccount
      x-codegen-repository: Account
      summary: Find an account
      tags:
        - Auth
      parameters:
        - in: path
          name: id
          required: true
          schema:
            description: UUID identifier
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
            minLength: 36
            maxLength: 36
          description: The unique identifier of the resource
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/AccountResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Get an account
    patch:
      x-codegen-custom-handler: true
      operationId: UpdateAccount
      summary: Update an account
      tags:
        - Auth
      parameters:
        - in: path
          name: id
          required: true
          schema:
            description: UUID identifier
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
            minLength: 36
            maxLength: 36
          description: The unique identifier of the resource
      security:
        - bearerAuth: []
      requestBody:
        description: Account update request
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              maxProperties: 3
              properties:
                provider:
                  type: string
                  maxLength: 255
                  description: The account provider
                  example: google
                  pattern: ^[a-z][a-z0-9-]*$
                providerAccountIdentifier:
                  type: string
                  maxLength: 255
                  description: The provider account ID
                  example: user1234567890
                  pattern: ^[a-z][a-z0-9-]*$
                type:
                  type: string
                  maxLength: 255
                  description: The account type
                  example: oauth
                  pattern: ^[\w\s\-.,!?()@#+/]*$
      responses:
        '200':
          $ref: '#/components/responses/AccountResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Update an account
    delete:
      x-codegen-custom-handler: true
      operationId: DeleteAccount
      summary: Delete an account
      tags:
        - Auth
      parameters:
        - in: path
          name: id
          required: true
          schema:
            description: UUID identifier
            type: string
            format: uuid
            example: 550e8400-e29b-41d4-a716-446655440000
            minLength: 36
            maxLength: 36
          description: The unique identifier of the resource
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/AccountResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      description: Delete an account
  /auth/request-verification:
    post:
      operationId: RequestEmailVerification
      summary: Request e-mail verification
      tags:
        - Auth
      description: This endpoint will send an e-mail verification link to you. ADMIN ONLY.
      security:
        - bearerAuth: []
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codegen-custom-handler: true
  /auth/verify-email:
    post:
      operationId: ConfirmEmailVerification
      summary: Confirm e-mail verification
      tags:
        - Auth
      description: This endpoint will confirm your e-mail with a token
      requestBody:
        description: Email verification request with token
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  description: The email verification token
                  type: string
                  minLength: 1
                  maxLength: 512
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                  pattern: ^[A-Za-z0-9_-]+$
              required:
                - token
        required: true
      responses:
        '200':
          $ref: '#/components/responses/EmailVerificationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codegen-custom-handler: true
  /auth/forgot-password:
    post:
      x-codegen-custom-handler: true
      operationId: RequestPasswordReset
      x-public-endpoint: true
      summary: Request password reset
      tags:
        - Auth
      description: This endpoint will request a password reset link
      security:
        - {}
      requestBody:
        description: Password reset request
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The e-mail to send the password reset token to
                  type: string
                  format: email
                  minLength: 1
                  maxLength: 255
                  example: user@example.com
              required:
                - email
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/reset-password:
    post:
      operationId: ConfirmPasswordReset
      summary: Verify password reset
      tags:
        - Auth
      description: This endpoint will verify your password change with a token
      security:
        - {}
      x-public-endpoint: true
      x-codegen-custom-handler: true
      requestBody:
        description: Password reset confirmation request
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  description: The new password
                  type: string
                  minLength: 8
                  maxLength: 72
                  example: secure-new-password-123
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                token:
                  description: The password reset token
                  type: string
                  minLength: 1
                  maxLength: 512
                  example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
                  pattern: ^[A-Za-z0-9_-]+$
              required:
                - newPassword
                - token
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/change-email:
    post:
      x-codegen-custom-handler: true
      operationId: RequestEmailChange
      summary: Request e-mail change
      tags:
        - Auth
      description: This endpoint will request your e-mail change with a token
      requestBody:
        description: Email change request
        content:
          application/json:
            schema:
              type: object
              properties:
                newEmail:
                  description: The e-mail to send the confirmation token to
                  type: string
                  format: email
                  example: user@example.com
                  minLength: 1
                  maxLength: 255
                userID:
                  description: The user ID of the user requesting the email change
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
              required:
                - newEmail
                - userID
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/confirm-email:
    post:
      x-codegen-custom-handler: true
      operationId: ConfirmEmailChange
      summary: Verify e-mail change
      tags:
        - Auth
      description: This endpoint will verify your e-mail change with a token
      requestBody:
        description: Email change confirmation request
        content:
          application/json:
            schema:
              type: object
              properties:
                newEmail:
                  description: The e-mail to send the confirmation token to
                  type: string
                  format: email
                  maxLength: 255
                  example: user@example.com
                  minLength: 1
                token:
                  description: The password reset token
                  type: string
                  minLength: 1
                  maxLength: 512
                  example: example-string
                  pattern: ^[A-Za-z0-9_-]+$
                userID:
                  description: The user ID of the user requesting the email change
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
              required:
                - newEmail
                - token
                - userID
        required: true
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users:
    get:
      operationId: ListUsers
      summary: List users
      tags:
        - User
      description: List users
      parameters:
        - $ref: '#/components/parameters/UsersFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/UsersSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /users/{id}:
    get:
      operationId: GetUser
      summary: Get a user
      tags:
        - User
      description: Get a user
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateUser
      summary: Update an user
      tags:
        - User
      description: Update an user
      requestBody:
        description: User update data
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The user's e-mail
                  type: string
                  format: email
                  minLength: 1
                  example: user@example.com
                  maxLength: 255
                image:
                  description: The user's avatar image URL
                  type: string
                  format: uri
                  maxLength: 2048
                  example: https://example.com/avatar.jpg
                  pattern: ^https?://[\w\-\.]+[\w\-\./:?#@!$&'()*+,;=]*$
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteUser
      summary: Delete a user
      tags:
        - User
      description: Delete a user
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /me:
    get:
      x-codegen-custom-handler: true
      operationId: GetCurrentUser
      summary: Get current user
      tags:
        - User
      description: Get the currently authenticated user's profile
      security:
        - bearerAuth: []
        - sessionCookie: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      x-codegen-custom-handler: true
      operationId: UpdateCurrentUser
      summary: Update current user
      tags:
        - User
      description: Update the currently authenticated user's profile
      security:
        - bearerAuth: []
        - sessionCookie: []
      requestBody:
        description: User profile update data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The user's display name
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: John Doe
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                image:
                  description: The user's avatar image URL
                  type: string
                  minLength: 5
                  maxLength: 2048
                  format: uri
                  example: https://example.com/avatar.jpg
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      x-codegen-custom-handler: true
      operationId: DeleteCurrentUser
      summary: Delete current user
      tags:
        - User
      description: Delete the currently authenticated user's account (cascades to all sessions and accounts)
      security:
        - bearerAuth: []
        - sessionCookie: []
      parameters:
        - name: X-Confirm
          in: header
          required: true
          description: Confirmation header to prevent accidental deletion
          schema:
            type: string
            enum:
              - DELETE_MY_ACCOUNT
            example: DELETE_MY_ACCOUNT
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/oauth/{provider}/authorize:
    get:
      operationId: OauthAuthorize
      summary: Start OAuth authorization flow
      tags:
        - Auth
      description: Redirect user to OAuth provider authorization page
      x-codegen-custom-handler: true
      parameters:
        - schema:
            type: string
            enum:
              - google
              - github
              - microsoft
            example: google
          in: path
          name: provider
          required: true
          description: The OAuth provider to use for authorization
        - schema:
            type: string
            format: uri
            maxLength: 2048
            example: http://localhost:3000/auth/callback
          in: query
          name: redirect_uri
          required: false
          description: Where to redirect after authorization (optional, uses default if not provided)
        - schema:
            type: string
            maxLength: 255
            pattern: ^[\w\s\-.,!?()@#+/:]*$
            example: read:user
          in: query
          name: scope
          required: false
          description: OAuth scopes to request (optional, uses default if not provided)
        - schema:
            type: string
            maxLength: 255
            pattern: ^[\w\-]+$
            example: random_state_123
          in: query
          name: state
          required: false
          description: State parameter for CSRF protection
      responses:
        '200':
          description: Authorization URL generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorizationUrl:
                    type: string
                    minLength: 1
                    example: https://accounts.google.com/oauth/authorize?client_id=...
                    description: URL to redirect user for OAuth authorization
                    maxLength: 2048
                    format: uri
                required:
                  - authorizationUrl
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '302':
          description: Redirect to OAuth provider
          headers:
            Location:
              description: The OAuth provider authorization URL
              schema:
                type: string
                format: uri
                maxLength: 2048
                example: https://accounts.google.com/oauth/authorize?client_id=...
              example: https://accounts.google.com/oauth/authorize?client_id=...
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /auth/oauth/{provider}/callback:
    get:
      operationId: OauthCallback
      x-codegen-custom-handler: true
      summary: Handle OAuth callback
      tags:
        - Auth
      description: Handle the callback from OAuth provider and complete authentication
      parameters:
        - schema:
            type: string
            enum:
              - google
              - github
              - microsoft
            example: google
          in: path
          name: provider
          required: true
          description: The OAuth provider handling the callback
        - schema:
            type: string
            maxLength: 1024
            pattern: ^[\w\-]+$
            example: authorization_code_123
          in: query
          name: code
          required: false
          description: Authorization code from OAuth provider
        - schema:
            type: string
            maxLength: 255
            pattern: ^[\w\-]+$
            example: random_state_123
          in: query
          name: state
          required: false
          description: State parameter for CSRF protection
        - schema:
            type: string
            maxLength: 100
            pattern: ^[\w\-_]+$
            example: access_denied
          in: query
          name: error
          required: false
          description: Error code if authorization failed
        - schema:
            type: string
            maxLength: 500
            pattern: ^[\w\s\-.,!?()@#+/]*$
            example: The user denied the request
          in: query
          name: error_description
          required: false
          description: Human-readable error description
      responses:
        '200':
          $ref: '#/components/responses/SessionCreated'
        '302':
          description: Redirect to frontend with authentication result
          headers:
            Set-Cookie:
              description: Session cookies for authentication
              schema:
                type: string
                minLength: 1
                maxLength: 4096
                pattern: ^[\w\-=;,. ]+$
            Location:
              description: Redirect URL to frontend
              schema:
                type: string
                format: uri
                maxLength: 2048
                example: http://localhost:3000/auth/success
              example: http://localhost:3000/auth/success
            X-RateLimit-Limit:
              $ref: '#/components/headers/RateLimitLimit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/RateLimitRemaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/RateLimitReset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api-keys:
    get:
      operationId: ListAPIKeys
      summary: List tokens
      tags:
        - APIKey
      description: List user's tokens (without showing the actual key values)
      parameters:
        - $ref: '#/components/parameters/APIKeysFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/APIKeysSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/APIKeyListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateAPIKey
      summary: Create a token
      tags:
        - APIKey
      description: Create a token
      security:
        - bearerAuth: []
      requestBody:
        description: API key creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: Human-readable name for the API key
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Production API Key
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                scopes:
                  description: List of scopes/permissions for this API key
                  type: array
                  maxItems: 100
                  items:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: ^[\w\s\-.,!?()@#+/:]*$
                  example:
                    - read:users
                    - write:workflows
                rateLimit:
                  description: Requests per minute limit (default 60)
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 10000
                  default: 60
                  example: 1000
                expiresAt:
                  description: When the API key expires (optional, no expiry if omitted)
                  type: string
                  format: date-time
                  minLength: 1
                  maxLength: 255
                  example: '2025-01-15T09:30:00Z'
              required:
                - name
                - scopes
        required: true
      responses:
        '201':
          $ref: '#/components/responses/APIKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api-keys/{id}:
    get:
      operationId: GetAPIKey
      summary: Get API key details
      tags:
        - APIKey
      description: Get details of a specific API key (without the actual key value)
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/APIKeyListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      operationId: UpdateAPIKey
      summary: Update API key
      tags:
        - APIKey
      description: Update an API key's name, scopes, or rate limit
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      requestBody:
        description: API key update data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Updated Production API Key
                  description: Human-readable name for the API key
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                scopes:
                  type: array
                  maxItems: 1000
                  items:
                    type: string
                    maxLength: 255
                    pattern: ^[\w\s\-.,!?()@#+/:]*$
                  example:
                    - read:users
                    - write:workflows
                    - read:pipelines
                  description: Array of permission scopes
                rateLimit:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 10000
                  example: 2000
                  description: Requests per minute allowed for this API key
              additionalProperties: false
      responses:
        '200':
          $ref: '#/components/responses/APIKeyResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      operationId: DeleteAPIKey
      summary: Delete API key
      tags:
        - APIKey
      description: Delete an API key permanently. This action cannot be undone.
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations:
    get:
      operationId: ListOrganizations
      summary: List organizations
      tags:
        - Organization
      description: List organizations
      parameters:
        - $ref: '#/components/parameters/OrganizationsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/OrganizationsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateOrganization
      summary: Create an organization
      tags:
        - Organization
      description: Create an organization
      requestBody:
        description: Organization creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                billingEmail:
                  description: The billing email to use for the organization
                  type: string
                  example: example@archesai.com
                  minLength: 1
                  maxLength: 255
                  format: email
                organizationID:
                  description: UUID identifier
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
              required:
                - billingEmail
                - organizationID
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{id}:
    get:
      operationId: GetOrganization
      summary: Get an organization
      tags:
        - Organization
      description: Get an organization
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateOrganization
      summary: Update an organization
      tags:
        - Organization
      description: Update an organization
      requestBody:
        description: Organization update data
        content:
          application/json:
            schema:
              type: object
              properties:
                billingEmail:
                  description: The billing email to use for the organization
                  type: string
                  example: example@archesai.com
                  format: email
                  maxLength: 255
                organizationID:
                  description: UUID identifier
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteOrganization
      summary: Delete an organization
      tags:
        - Organization
      description: Delete an organization
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /organizations/{organizationID}/members:
    get:
      operationId: ListMembers
      summary: List members
      tags:
        - Member
      description: List members
      parameters:
        - in: path
          name: organizationID
          required: true
          schema:
            type: string
            format: uuid
            maxLength: 36
          description: Organization ID
        - $ref: '#/components/parameters/MembersFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/MembersSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/MemberResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateMember
      summary: Create a member
      tags:
        - Member
      description: Create a member
      parameters:
        - in: path
          name: organizationID
          required: true
          schema:
            type: string
            format: uuid
            maxLength: 36
          description: Organization ID
      requestBody:
        description: Member creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  description: The role of the member
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
                  example: admin
              required:
                - role
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/OrganizationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{organizationID}/members/{id}:
    get:
      operationId: GetMember
      summary: Get a member
      tags:
        - Member
      description: Get a member
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/MemberResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateMember
      summary: Update a member
      tags:
        - Member
      description: Update a member
      requestBody:
        description: Member update data
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  description: The role of the member
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
                  example: admin
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/MemberResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteMember
      summary: Delete a member
      tags:
        - Member
      description: Delete a member
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/MemberResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /organizations/{organizationID}/invitations:
    get:
      operationId: ListInvitations
      summary: List invitations
      tags:
        - Invitation
      description: List invitations
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/InvitationsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/InvitationsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/InvitationListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateInvitation
      summary: Create an invitation
      tags:
        - Invitation
      description: Create an invitation
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
      requestBody:
        description: Invitation creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email of the invitated user
                  type: string
                  example: example-string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                role:
                  description: The role of the invitation
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
                  example: admin
              required:
                - email
                - role
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/InvitationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /organizations/{organizationID}/invitations/{id}:
    get:
      operationId: GetInvitation
      summary: Get an invitation
      tags:
        - Invitation
      description: Get an invitation
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/InvitationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateInvitation
      summary: Update an invitation
      tags:
        - Invitation
      description: Update an invitation
      requestBody:
        description: Invitation update data
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email of the invitated user
                  type: string
                  example: example-string
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                role:
                  description: The role of the invitation
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
                  example: admin
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/InvitationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteInvitation
      summary: Delete an invitation
      tags:
        - Invitation
      description: Delete an invitation
      parameters:
        - $ref: '#/components/parameters/OrganizationID'
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/InvitationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /pipelines:
    get:
      operationId: ListPipelines
      summary: List pipelines
      tags:
        - Pipeline
      description: List pipelines
      parameters:
        - $ref: '#/components/parameters/PipelinesFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/PipelinesSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreatePipeline
      summary: Create a pipeline
      tags:
        - Pipeline
      description: Create a pipeline
      requestBody:
        description: Pipeline creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The pipeline description
                  type: string
                  example: Example description text
                  minLength: 1
                  maxLength: 1000
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                name:
                  description: The pipeline name
                  type: string
                  example: Example Name
                  minLength: 1
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/PipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /pipelines/{id}:
    get:
      operationId: GetPipeline
      summary: Find a pipeline
      tags:
        - Pipeline
      description: Find a pipeline
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdatePipeline
      summary: Update a pipeline
      tags:
        - Pipeline
      description: Update a pipeline
      requestBody:
        description: Pipeline update data
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The pipeline description
                  type: string
                  example: Example description text
                  maxLength: 1000
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                name:
                  description: The pipeline name
                  type: string
                  example: Example Name
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeletePipeline
      summary: Delete a pipeline
      tags:
        - Pipeline
      description: Delete a pipeline
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /pipelines/{id}/steps:
    get:
      operationId: GetPipelineSteps
      x-codegen-custom-handler: true
      summary: Get all steps for a pipeline
      tags:
        - Pipeline
      description: Retrieve all steps and their dependencies for a pipeline
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineStepListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-codegen-custom-handler: true
      operationId: CreatePipelineStep
      summary: Add a step to a pipeline
      tags:
        - Pipeline
      description: Create a step in the pipeline
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      requestBody:
        description: Pipeline step creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                toolID:
                  description: UUID identifier
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
                name:
                  description: Name of the step
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Validate Input Data
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                description:
                  description: Description of what this step does
                  type: string
                  maxLength: 1000
                  example: Validates the input data against the configured schema
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                position:
                  description: Position in the pipeline (for ordering)
                  type: integer
                  format: int32
                  minimum: 0
                  maximum: 2147483647
                  example: 1
                dependencies:
                  description: IDs of steps this step depends on
                  type: array
                  maxItems: 1000
                  items:
                    description: UUID identifier
                    type: string
                    format: uuid
                    example: 550e8400-e29b-41d4-a716-446655440000
                    minLength: 36
                    maxLength: 36
              required:
                - toolID
                - name
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Pipeline step created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/PipelineStep'
                required:
                  - data
                additionalProperties: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /pipelines/{id}/execution-plans:
    get:
      x-codegen-custom-handler: true
      operationId: GetPipelineExecutionPlan
      summary: Get execution plan for a pipeline
      tags:
        - Pipeline
      description: Get the DAG execution plan showing which steps can run in parallel
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecutionPlanResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      x-codegen-custom-handler: true
      operationId: ValidatePipelineExecutionPlan
      summary: Validate a pipeline configuration
      tags:
        - Pipeline
      description: Validate that a pipeline can be executed without issues
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/PipelineResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /runs:
    get:
      operationId: ListRuns
      summary: List runs
      tags:
        - Run
      description: List runs
      parameters:
        - $ref: '#/components/parameters/RunsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/RunsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/RunListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateRun
      summary: Create a run
      tags:
        - Run
      description: Create a run
      requestBody:
        description: Run creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                pipelineID:
                  description: UUID identifier
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
              required:
                - pipelineID
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/RunResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /runs/{id}:
    get:
      operationId: GetRun
      summary: Find a run
      tags:
        - Run
      description: Find a run
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/RunListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateRun
      summary: Update a run
      tags:
        - Run
      description: Update a run
      requestBody:
        description: Run update data
        content:
          application/json:
            schema:
              type: object
              properties:
                pipelineID:
                  description: UUID identifier
                  type: string
                  format: uuid
                  example: 550e8400-e29b-41d4-a716-446655440000
                  minLength: 36
                  maxLength: 36
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/RunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteRun
      summary: Delete a run
      tags:
        - Run
      description: Delete a run
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/RunResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /tools:
    get:
      operationId: ListTools
      summary: List tools
      tags:
        - Tool
      description: List tools
      parameters:
        - $ref: '#/components/parameters/ToolsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/ToolsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ToolListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateTool
      summary: Create a tool
      tags:
        - Tool
      description: Create a tool
      requestBody:
        description: Tool creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The tool description
                  type: string
                  minLength: 1
                  maxLength: 1000
                  example: Example description text
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                name:
                  description: The name of the tool
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Example Name
                  pattern: ^[\w\s\-.,!?()@#+/]*$
              required:
                - description
                - name
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/ToolResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /tools/{id}:
    get:
      operationId: GetTool
      summary: Find a tool
      tags:
        - Tool
      description: Find a tool
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ToolResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateTool
      summary: Update a tool
      tags:
        - Tool
      description: Update a tool
      requestBody:
        description: Tool update data
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The tool description
                  type: string
                  minLength: 1
                  example: Example description text
                  maxLength: 1000
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                name:
                  description: The name of the tool
                  type: string
                  minLength: 1
                  example: Example Name
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ToolResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteTool
      summary: Delete a tool
      tags:
        - Tool
      description: Delete a tool
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ToolResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /artifacts:
    get:
      operationId: ListArtifacts
      summary: List artifacts
      tags:
        - Artifact
      description: List artifacts
      parameters:
        - $ref: '#/components/parameters/ArtifactsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/ArtifactsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ArtifactListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateArtifact
      summary: Create a artifact
      tags:
        - Artifact
      description: Create a artifact
      requestBody:
        description: Artifact creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the artifact
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Example Name
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                text:
                  description: The artifact text
                  type: string
                  example: example-string
                  minLength: 1
                  maxLength: 1000
                  pattern: ^[\w\s\-.,!?()@#+/]*$
              required:
                - text
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/ArtifactResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /artifacts/{id}:
    get:
      operationId: GetArtifact
      summary: Find an artifact
      tags:
        - Artifact
      description: Find an artifact
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ArtifactListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      operationId: UpdateArtifact
      summary: Update an artifact
      tags:
        - Artifact
      description: Update an artifact
      requestBody:
        description: Artifact update data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the artifact
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Example Name
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                text:
                  description: The artifact text
                  type: string
                  maxLength: 1000
                  example: example-string
                  pattern: ^[\w\s\-.,!?()@#+/]*$
                url:
                  description: The artifact URL
                  type: string
                  format: uri
                  maxLength: 2048
                  example: example-string
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ArtifactResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteArtifact
      summary: Delete an artifact
      tags:
        - Artifact
      description: Delete an artifact
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/ArtifactResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /labels:
    get:
      operationId: ListLabels
      summary: List labels
      tags:
        - Label
      description: List labels
      parameters:
        - $ref: '#/components/parameters/LabelsFilter'
        - $ref: '#/components/parameters/PageQuery'
        - $ref: '#/components/parameters/LabelsSort'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/LabelListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      operationId: CreateLabel
      summary: Create a label
      tags:
        - Label
      description: Create a label
      requestBody:
        description: Label creation request
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the label
                  type: string
                  minLength: 1
                  example: Example Name
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
              required:
                - name
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          $ref: '#/components/responses/LabelResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /labels/{id}:
    get:
      operationId: GetLabel
      summary: Find a label
      tags:
        - Label
      description: Find a label
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/LabelListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      operationId: UpdateLabel
      summary: Update a label
      tags:
        - Label
      description: Update a label
      requestBody:
        description: Label update data
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: The name of the label
                  type: string
                  minLength: 1
                  example: Example Name
                  maxLength: 255
                  pattern: ^[\w\s\-.,!?()@#+/]*$
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/LabelResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      operationId: DeleteLabel
      summary: Delete a label
      tags:
        - Label
      description: Delete a label
      parameters:
        - $ref: '#/components/parameters/ResourceID'
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/LabelResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  /config:
    get:
      x-codegen-custom-handler: true
      operationId: GetConfig
      summary: Get the configuration
      tags:
        - Config
      description: Get the configuration of the application
      responses:
        '200':
          $ref: '#/components/responses/ConfigResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - {}
  /health:
    get:
      x-codegen-custom-handler: true
      operationId: GetHealth
      summary: Get health status
      tags:
        - Health
      description: Check the health status of the application
      responses:
        '200':
          $ref: '#/components/responses/HealthResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - {}
components:
  securitySchemes:
    bearerAuth:
      description: API Token for authenticated requests
      scheme: bearer
      type: http
    sessionCookie:
      description: Session cookie for authenticated requests
      type: apiKey
      name: __Secure-better-auth.session_token
      in: cookie
  schemas:
    Session:
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromUpdate:
            - IPAddress
            - UserID
            - UserAgent
            - Token
      description: Schema for Session entity
      title: Session
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            organizationID:
              description: The organization ID for this session (nullable for users without org)
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            authMethod:
              description: The authentication method used (magic_link, oauth_google, oauth_github, etc.)
              type: string
              minLength: 1
              maxLength: 100
              example: magic_link
              pattern: ^[a-z_]+$
            authProvider:
              description: The authentication provider (google, github, microsoft, local)
              type: string
              enum:
                - local
                - google
                - github
                - microsoft
                - apple
              example: local
            expiresAt:
              description: The expiration date of the session
              type: string
              minLength: 1
              format: date-time
              example: '2023-10-05T14:48:00Z'
              maxLength: 255
            ipAddress:
              description: The IP address of the session
              type: string
              format: ipv4
              example: 192.168.1.1
              minLength: 7
              maxLength: 45
            token:
              description: The session token
              type: string
              minLength: 1
              example: eyJhbGciOiJIUzI1NiIs...
              maxLength: 512
              pattern: ^[A-Za-z0-9_\-\.]+$
            userAgent:
              description: The user agent of the session
              type: string
              example: Mozilla/5.0 (Windows NT 10.0; Win64; x64)
              minLength: 1
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/\(\):;]+$
            userID:
              description: The user who owns this session
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
          required:
            - expiresAt
            - token
            - userID
      unevaluatedProperties: false
      example:
        id: 550e8400-e29b-41d4-a716-446655440000
        createdAt: '2023-10-05T14:48:00Z'
        updatedAt: '2023-10-05T14:48:00Z'
        organizationID: 550e8400-e29b-41d4-a716-446655440000
        authMethod: magic_link
        authProvider: local
        expiresAt: '2023-10-05T14:48:00Z'
        ipAddress:
    Base:
      title: Base
      description: Base schema for all entities with common fields
      type: object
      properties:
        id:
          description: Unique identifier for the resource
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
          minLength: 36
          maxLength: 36
        createdAt:
          description: The date and time when the resource was created
          type: string
          format: date-time
          example: '2024-01-15T09:30:00Z'
          minLength: 1
          maxLength: 255
        updatedAt:
          description: The date and time when the resource was last updated
          type: string
          format: date-time
          example: '2024-01-15T10:45:00Z'
          minLength: 1
          maxLength: 255
      required:
        - id
        - createdAt
        - updatedAt
    Problem:
      title: Problem
      description: RFC 7807 (Problem Details) compliant error response
      type: object
      additionalProperties: false
      required:
        - status
        - title
      properties:
        status:
          type: integer
          format: int32
          description: HTTP status code
          minimum: 100
          maximum: 599
          example: 400
        type:
          type: string
          format: uri
          description: URI identifying the problem type
          default: about:blank
          example: https://api.example.com/errors/validation-failed
          minLength: 1
          maxLength: 2048
        title:
          type: string
          description: Short, human-readable summary
          example: Validation Failed
          minLength: 1
          maxLength: 255
          pattern: ^[\w\s\-.,!?()]+$
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence
          example: The request body contains invalid fields
          minLength: 1
          maxLength: 255
          pattern: ^[\w\s\-.,!?()]+$
        instance:
          type: string
          format: uri
          description: URI identifying the specific occurrence
          example: https://api.example.com/auth/users/123
          maxLength: 2048
    MagicLinkToken:
      title: MagicLinkToken
      x-codegen:
        schemaType: valueobject
      description: Schema for MagicLinkToken entity
      type: object
      properties:
        id:
          description: Unique identifier for the magic link token
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
          minLength: 36
          maxLength: 36
        userID:
          description: User ID if token is for existing user
          type: string
          format: uuid
          example: 550e8400-e29b-41d4-a716-446655440000
          minLength: 36
          maxLength: 36
        token:
          description: The raw magic link token
          type: string
          minLength: 32
          example: abc123def456789ghi012jkl345mno678pqr901stu234
          maxLength: 512
          pattern: ^[a-zA-Z0-9]+$
        tokenHash:
          description: SHA256 hash of the magic link token
          type: string
          minLength: 64
          maxLength: 64
          example: a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3
          pattern: ^[a-f0-9]{64}$
        code:
          description: Optional 6-digit OTP code
          type: string
          minLength: 6
          maxLength: 6
          pattern: ^[0-9]{6}$
          example: '123456'
        identifier:
          description: Email or username for authentication
          type: string
          format: email
          minLength: 1
          example: user@example.com
          maxLength: 255
        deliveryMethod:
          description: How the magic link was delivered
          type: string
          enum:
            - email
            - console
            - webhook
            - otp
            - file
          example: email
        expiresAt:
          description: When the token expires
          type: string
          format: date-time
          minLength: 1
          example: '2023-10-05T14:48:00Z'
          maxLength: 512
        usedAt:
          description: When the token was used (null if unused)
          oneOf:
            - type: string
              format: date-time
              minLength: 1
              maxLength: 512
            - type: 'null'
          example: '2023-10-05T14:48:00Z'
        ipAddress:
          description: IP address of the request
          type: string
          format: ipv4
          minLength: 7
          maxLength: 45
          example: 192.168.1.1
        userAgent:
          description: User agent of the request
          type: string
          minLength: 1
          maxLength: 512
          pattern: ^[\w\s\-.,!?()@#+/\(\):;]+$
          example: Mozilla/5.0
        createdAt:
          description: When the token was created
          type: string
          format: date-time
          minLength: 1
          example: '2023-10-05T14:48:00Z'
          maxLength: 512
      required:
        - id
        - tokenHash
        - identifier
        - expiresAt
        - createdAt
      additionalProperties: false
    Page:
      description: Pagination parameters (limit & offset)
      type: object
      title: Page
      additionalProperties: false
      properties:
        limit:
          description: Maximum number of items to return
          type: integer
          format: int32
          minimum: 1
          default: 10
          maximum: 100
          example: 10
        offset:
          description: Number of items to skip before starting to collect the result set
          type: integer
          format: int32
          minimum: 0
          default: 0
          maximum: 9007199254740991
          example: 0
    PaginationMeta:
      description: Pagination metadata
      title: PaginationMeta
      type: object
      properties:
        total:
          description: Total number of items in the collection
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          example: 42
      required:
        - total
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    UUID:
      description: UUID identifier
      type: string
      format: uuid
      example: 550e8400-e29b-41d4-a716-446655440000
      minLength: 36
      maxLength: 36
    Account:
      description: Schema for Account entity (authentication provider account)
      title: Account
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          indices:
            - userID
            - accountIdentifier
          excludeFromUpdate:
            - AccountIdentifier
            - Provider
            - UserID
          additionalMethods:
            - name: GetAccountByProvider
              params:
                - name: provider
                  type: string
                - name: accountIdentifier
                  type: string
              returns: single
            - name: ListAccountsByUserID
              params:
                - name: userID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            accountIdentifier:
              description: The unique identifier for the account from the provider
              type: string
              example: google123456789
              minLength: 1
              maxLength: 255
              pattern: ^[a-zA-Z0-9_\-\.@]+$
            userID:
              description: The user ID this account belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            provider:
              description: The authentication provider identifier
              type: string
              enum:
                - local
                - google
                - github
                - microsoft
                - apple
              example: google
            accessToken:
              description: The OAuth access token
              type: string
              minLength: 1
              example: ya29.a0AfH6SMBa...
              x-sensitive: true
              maxLength: 512
              pattern: ^[A-Za-z0-9_\-\.]+$
            accessTokenExpiresAt:
              description: The access token expiration timestamp
              type: string
              format: date-time
              minLength: 1
              example: '2024-12-31T23:59:59Z'
              maxLength: 255
            refreshToken:
              description: The OAuth refresh token
              type: string
              minLength: 1
              example: 1//0fM8N5...
              x-sensitive: true
              maxLength: 512
              pattern: ^[A-Za-z0-9_\-\./]+$
            refreshTokenExpiresAt:
              description: The refresh token expiration timestamp
              type: string
              format: date-time
              minLength: 1
              example: '2025-12-31T23:59:59Z'
              maxLength: 255
            idToken:
              description: The OpenID Connect ID token
              type: string
              minLength: 1
              example: eyJhbGciOiJSUzI1NiIs...
              x-sensitive: true
              maxLength: 2048
              pattern: ^[A-Za-z0-9_\-\.]+$
            scope:
              description: The OAuth scope granted
              type: string
              minLength: 1
              example: openid profile email
              maxLength: 255
              pattern: ^[\w\s\-:]+$
          required:
            - accountIdentifier
            - userID
            - provider
      unevaluatedProperties: false
    User:
      description: Schema for User entity
      title: User
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - read
            - update
            - delete
            - list
          indices:
            - email
          additionalMethods:
            - name: GetUserByEmail
              params:
                - name: email
                  type: string
              returns: single
            - name: GetUserBySessionID
              params:
                - name: sessionID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: single
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            email:
              description: The user's email address
              type: string
              format: email
              minLength: 5
              maxLength: 255
              example: user@example.com
            emailVerified:
              description: Whether the user's email has been verified
              type: boolean
              default: false
              example: true
            image:
              description: The user's avatar image URL
              type: string
              minLength: 5
              maxLength: 2048
              format: uri
              example: https://example.com/avatar.jpg
            name:
              description: The user's display name
              type: string
              minLength: 1
              maxLength: 255
              example: John Doe
              pattern: ^[\w\s\-.,!?()@#+/']+$
          required:
            - email
            - emailVerified
            - name
      unevaluatedProperties: false
    FilterNode:
      title: FilterNode
      description: A recursive filter node that can be a condition or group
      x-codegen:
        schemaType: valueobject
      type: object
      properties:
        type:
          type: string
          enum:
            - and
            - or
            - eq
            - ne
            - gt
            - gte
            - lt
            - lte
            - contains
            - startsWith
            - endsWith
          description: The type of filter operation
          example: eq
        field:
          type: string
          description: The field to filter on (for leaf conditions)
          example: name
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
        value:
          description: The value to compare against (for leaf conditions)
          oneOf:
            - type: string
              maxLength: 1000
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
            - type: integer
              format: int64
              minimum: -9223372036854776000
              maximum: 9223372036854776000
            - type: boolean
          example: example-value
      required:
        - type
    APIKey:
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - update
            - delete
            - read
            - list
          excludeFromCreate:
            - CreatedAt
            - UpdatedAt
            - LastUsedAt
          excludeFromUpdate:
            - CreatedAt
            - UpdatedAt
            - UserID
            - OrganizationID
            - KeyHash
            - Prefix
            - LastUsedAt
      title: APIKey
      description: Schema for API Key entity
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            userID:
              description: The user who owns this API key
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            organizationID:
              description: The organization this API key belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            keyHash:
              type: string
              minLength: 1
              example: hashedskliveabc123...
              description: Hashed version of the API key for secure storage
              maxLength: 255
              pattern: ^[a-zA-Z0-9]+$
            name:
              type: string
              minLength: 1
              example: Production API Key
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/']+$
            prefix:
              type: string
              minLength: 1
              example: sklive
              maxLength: 255
              pattern: ^[a-z]+$
            scopes:
              type: array
              items:
                type: string
                maxLength: 255
                pattern: ^[a-z]+:[a-z]+$
              example:
                - read:users
                - write:workflows
              maxItems: 1000
            rateLimit:
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
              example: 1000
              description: Requests per minute allowed for this API key
            lastUsedAt:
              type: string
              format: date-time
              minLength: 1
              example: '2024-01-15T09:30:00Z'
              description: When this API key was last used
              maxLength: 255
            expiresAt:
              type: string
              format: date-time
              minLength: 1
              example: '2025-01-15T09:30:00Z'
              description: When this API key expires
              maxLength: 255
          required:
            - scopes
            - rateLimit
            - keyHash
            - organizationID
            - userID
      unevaluatedProperties: false
    Organization:
      title: Organization
      description: Schema for Organization entity
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromUpdate:
            - Slug
            - StripeCustomerIdentifier
          indices:
            - slug
            - stripeCustomerIdentifier
          additionalMethods:
            - name: GetOrganizationBySlug
              params:
                - name: slug
                  type: string
              returns: single
            - name: GetOrganizationByStripeCustomerID
              params:
                - name: stripeCustomerIdentifier
                  type: string
              returns: single
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              description: The organization's display name
              type: string
              minLength: 1
              maxLength: 255
              example: Acme Corporation
              pattern: ^[\w\s\-.,!?()@#+/'&]+$
            slug:
              description: URL-friendly unique identifier for the organization
              type: string
              pattern: ^[a-z0-9]+(?:-[a-z0-9]+)*$
              minLength: 3
              maxLength: 50
              example: acme-corp
            logo:
              description: The organization's logo URL
              type: string
              format: uri
              minLength: 1
              example: https://example.com/org-logo.png
              maxLength: 2048
            billingEmail:
              description: Email address for billing communications
              type: string
              format: email
              minLength: 5
              example: billing@acme.com
              maxLength: 255
            plan:
              description: The current subscription plan
              type: string
              enum:
                - FREE
                - BASIC
                - STANDARD
                - PREMIUM
                - UNLIMITED
              default: FREE
              example: STANDARD
            credits:
              description: Available credits for this organization
              type: integer
              format: int32
              minimum: 0
              maximum: 2147483647
              default: 0
              example: 1000
            stripeCustomerIdentifier:
              description: Stripe customer identifier
              type: string
              minLength: 1
              example: cus_1234567890
              x-sensitive: true
              maxLength: 255
              pattern: ^cus_[a-zA-Z0-9]+$
          required:
            - name
            - slug
            - plan
            - credits
            - stripeCustomerIdentifier
      unevaluatedProperties: false
    Member:
      title: Member
      description: Schema for Member entity
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          indices:
            - organizationID
            - userID
          excludeFromUpdate:
            - OrganizationID
            - UserID
          additionalMethods:
            - name: ListMembersByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: ListMembersByUser
              params:
                - name: userID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: GetMemberByUserAndOrganization
              params:
                - name: userID
                  type: string
                  format: uuid
                  maxLength: 36
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: single
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            organizationID:
              description: The organization this member belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            role:
              description: The role of the member
              type: string
              enum:
                - admin
                - owner
                - basic
              example: admin
            userID:
              description: The user who is a member of the organization
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
          required:
            - organizationID
            - role
            - userID
      unevaluatedProperties: false
    Invitation:
      title: Invitation
      description: Schema for Invitation entity
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          indices:
            - organizationID
            - email
            - inviterID
          excludeFromUpdate:
            - InviterID
            - OrganizationID
          additionalMethods:
            - name: ListInvitationsByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: GetInvitationByEmail
              params:
                - name: email
                  type: string
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: single
            - name: ListInvitationsByInviter
              params:
                - name: inviterID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            email:
              description: The email of the invitated user
              type: string
              format: email
              example: user@example.com
              minLength: 1
              maxLength: 255
            expiresAt:
              description: The date and time when the invitation expires
              type: string
              format: date-time
              minLength: 1
              example: '2023-12-31T23:59:59Z'
              maxLength: 255
            inviterID:
              description: The ID of the user who sent this invitation
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            organizationID:
              description: The organization the user is being invited to join
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            role:
              description: The role of the invitation
              type: string
              enum:
                - admin
                - owner
                - basic
              example: admin
            status:
              description: The status of the invitation, e.g., pending, accepted, declined
              type: string
              enum:
                - pending
                - accepted
                - declined
                - expired
              example: pending
          required:
            - email
            - expiresAt
            - inviterID
            - organizationID
            - role
            - status
      unevaluatedProperties: false
    Pipeline:
      description: Schema for Pipeline entity
      title: Pipeline
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromUpdate:
            - OrganizationID
          indices:
            - organizationID
          additionalMethods:
            - name: ListPipelinesByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            organizationID:
              description: The organization identifier
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            name:
              description: The pipeline's display name
              type: string
              minLength: 1
              maxLength: 255
              example: Data Processing Pipeline
              pattern: ^[\w\s\-.,!?()@#+/']+$
            description:
              description: Detailed description of the pipeline's purpose
              type: string
              maxLength: 1000
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
              example: Processes incoming data through validation, transformation, and storage steps
          required:
            - organizationID
      unevaluatedProperties: false
    PipelineStep:
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromCreate:
            - CreatedAt
            - UpdatedAt
          excludeFromUpdate:
            - CreatedAt
            - UpdatedAt
            - PipelineID
      title: PipelineStep
      description: Schema for PipelineStep entity
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            pipelineID:
              description: The pipeline this step belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            toolID:
              description: The tool used in this step
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
          required:
            - pipelineID
            - toolID
      unevaluatedProperties: false
    Run:
      description: Schema for Run entity
      title: Run
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          indices:
            - pipelineID
            - organizationID
            - toolID
          excludeFromCreate:
            - CompletedAt
            - Error
            - StartedAt
          excludeFromUpdate:
            - OrganizationID
          additionalMethods:
            - name: ListRunsByPipeline
              params:
                - name: pipelineID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: ListRunsByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: ListRunsByTool
              params:
                - name: toolID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            completedAt:
              description: The timestamp when the run completed
              type: string
              format: date-time
              example: '2024-01-15T09:30:00Z'
              minLength: 1
              maxLength: 255
            error:
              description: The error message
              type: string
              example: Pipeline execution failed at step 3
              minLength: 1
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
            organizationID:
              description: The organization this run belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            pipelineID:
              description: The pipeline this run is executing
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            progress:
              description: The percent progress of the run (0-100)
              type: integer
              format: int32
              minimum: 0
              maximum: 100
              example: 75
            startedAt:
              description: The timestamp when the run started
              type: string
              format: date-time
              example: '2024-01-15T09:30:00Z'
              minLength: 1
              maxLength: 255
            status:
              type: string
              enum:
                - COMPLETED
                - FAILED
                - PROCESSING
                - QUEUED
              example: COMPLETED
            toolID:
              description: The tool being used in this run
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
          required:
            - organizationID
            - pipelineID
            - progress
            - status
            - toolID
      unevaluatedProperties: false
    Tool:
      description: Schema for Tool entity
      title: Tool
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromUpdate:
            - OrganizationID
          indices:
            - organizationID
          additionalMethods:
            - name: ListToolsByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            description:
              description: The tool description
              type: string
              minLength: 1
              example: Example description text
              maxLength: 1000
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
            inputMimeType:
              description: The MIME type of the input for the tool, e.g. text/plain
              type: string
              minLength: 1
              example: text/plain
              maxLength: 255
              pattern: ^[a-z]+/[a-z0-9\+\-\.]+$
            name:
              description: The name of the tool
              type: string
              minLength: 1
              example: Data Transformer
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/']+$
            organizationID:
              description: The organization that owns this tool
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            outputMimeType:
              description: The MIME type of the output for the tool, e.g. text/plain
              type: string
              minLength: 1
              example: application/json
              maxLength: 255
              pattern: ^[a-z]+/[a-z0-9\+\-\.]+$
          required:
            - description
            - inputMimeType
            - name
            - organizationID
            - outputMimeType
      unevaluatedProperties: false
    Artifact:
      description: Schema for Artifact entity
      title: Artifact
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          indices:
            - organizationID
            - producerID
          excludeFromUpdate:
            - OrganizationID
            - ProducerID
          additionalMethods:
            - name: ListArtifactsByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: ListArtifactsByProducer
              params:
                - name: producerID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            credits:
              description: The number of credits required to access this artifact. This is used for metering and billing purposes.
              type: integer
              format: int32
              minimum: 0
              maximum: 2147483647
              example: 42
            description:
              description: The artifact's description
              type: string
              example: Example description text
              minLength: 1
              maxLength: 1000
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
            mimeType:
              description: The MIME type of the artifact, e.g. image/png
              type: string
              minLength: 1
              example: image/png
              maxLength: 255
              pattern: ^[a-z]+/[a-z0-9\+\-\.]+$
            name:
              description: The name of the artifact, used for display purposes
              type: string
              example: Data Export Results
              minLength: 1
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/']+$
            organizationID:
              description: The organization that owns this artifact
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            previewImage:
              description: The URL of the preview image for this artifact. This is used for displaying a thumbnail in the UI.
              type: string
              format: uri
              example: https://example.com/preview.jpg
              minLength: 1
              maxLength: 2048
            producerID:
              description: The ID of the entity that produced this artifact
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
            text:
              description: The artifact text
              type: string
              example: Processed data ready for analysis
              minLength: 1
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/':;]+$
          required:
            - credits
            - mimeType
            - organizationID
      unevaluatedProperties: false
    Label:
      title: Label
      description: Schema for Label entity
      x-codegen:
        schemaType: entity
        repository:
          operations:
            - create
            - read
            - update
            - delete
            - list
          excludeFromUpdate:
            - OrganizationID
          indices:
            - organizationID
            - name
          additionalMethods:
            - name: ListLabelsByOrganization
              params:
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: multiple
            - name: GetLabelByName
              params:
                - name: name
                  type: string
                - name: organizationID
                  type: string
                  format: uuid
                  maxLength: 36
              returns: single
      allOf:
        - $ref: '#/components/schemas/Base'
        - type: object
          properties:
            name:
              description: The name of the label
              type: string
              minLength: 1
              example: Production
              maxLength: 255
              pattern: ^[\w\s\-.,!?()@#+/']+$
            organizationID:
              description: The organization this label belongs to
              type: string
              format: uuid
              example: 550e8400-e29b-41d4-a716-446655440000
              minLength: 36
              maxLength: 36
          required:
            - name
            - organizationID
      unevaluatedProperties: false
    Config:
      description: Arches AI configuration schema
      title: Config
      x-codegen:
        schemaType: valueobject
      type: object
      properties:
        api:
          $ref: '#/components/schemas/ConfigAPI'
        auth:
          $ref: '#/components/schemas/ConfigAuth'
        billing:
          $ref: '#/components/schemas/ConfigBilling'
        database:
          $ref: '#/components/schemas/ConfigDatabase'
        intelligence:
          $ref: '#/components/schemas/ConfigIntelligence'
        logging:
          $ref: '#/components/schemas/ConfigLogging'
        platform:
          $ref: '#/components/schemas/ConfigPlatform'
        redis:
          $ref: '#/components/schemas/ConfigRedis'
        storage:
          $ref: '#/components/schemas/ConfigStorage'
        kubernetes:
          $ref: '#/components/schemas/ConfigKubernetes'
      additionalProperties: false
    ConfigAPI:
      title: APIConfig
      description: Configuration schema for the API server
      type: object
      properties:
        cors:
          description: A comma-separated list of allowed origins for CORS requests
          type: string
          default: localhost
          minLength: 1
          example: localhost,https://platform.archesai.com
          maxLength: 2048
          pattern: ^[\w\-\.,:/@]+$
        url:
          description: The public URL for the API
          default: http://localhost:3001
          type: string
          format: uri
          example: http://localhost:3001
          maxLength: 2048
        docs:
          description: Enable or disable API documentation
          type: boolean
          default: true
          example: true
        email:
          $ref: '#/components/schemas/ConfigEmail'
        environment:
          description: Deployment environment (development, staging, production)
          type: string
          enum:
            - development
            - staging
            - production
          default: development
          example: development
        host:
          description: The host address on which the API server will listen
          type: string
          default: 0.0.0.0
          minLength: 1
          example: 0.0.0.0
          maxLength: 255
          pattern: ^[\w\-\.:]+$
        port:
          description: The port on which the API server will listen
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          default: 3001
          example: 3001
        validation:
          description: Enable or disable request validation
          type: boolean
          default: true
          example: true
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - cors
        - docs
        - environment
        - host
        - port
        - validation
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuth:
      description: Authentication configuration for the API server
      type: object
      title: AuthConfig
      properties:
        enabled:
          description: Enable authentication
          type: boolean
          default: true
          example: true
        firebase:
          $ref: '#/components/schemas/ConfigAuthFirebase'
        local:
          $ref: '#/components/schemas/ConfigAuthLocal'
        magicLink:
          $ref: '#/components/schemas/ConfigAuthMagicLink'
        twitter:
          $ref: '#/components/schemas/ConfigAuthTwitter'
        google:
          $ref: '#/components/schemas/ConfigAuthGoogle'
        github:
          $ref: '#/components/schemas/ConfigAuthGithub'
        microsoft:
          $ref: '#/components/schemas/ConfigAuthMicrosoft'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigBilling:
      description: Billing configuration for Stripe
      type: object
      title: BillingConfig
      properties:
        enabled:
          description: Enable billing functionality
          type: boolean
          default: false
          example: true
        stripe:
          $ref: '#/components/schemas/ConfigStripe'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigDatabase:
      title: DatabaseConfig
      description: Database configuration for PostgreSQL
      type: object
      properties:
        enabled:
          description: Enable database
          type: boolean
          default: true
          example: true
        url:
          description: Database connection url/string
          type: string
          format: uri
          default: postgresql://admin:password@127.0.0.1:5432/archesai
          minLength: 1
          example: postgresql://admin:password@127.0.0.1:5432/archesai
          maxLength: 2048
        type:
          description: Database type (postgresql or sqlite)
          type: string
          enum:
            - postgresql
            - sqlite
          default: postgresql
          example: postgresql
        maxConns:
          description: Maximum number of connections in pool (PostgreSQL)
          type: integer
          minimum: 1
          maximum: 2147483647
          format: int32
          default: 25
          example: 25
        minConns:
          description: Minimum number of connections in pool (PostgreSQL)
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          default: 5
          example: 5
        connMaxLifetime:
          description: Maximum connection lifetime (e.g., "30m")
          type: string
          pattern: ^(\d+[smh])+$
          minLength: 2
          maxLength: 20
          example: 30m
        connMaxIdleTime:
          description: Maximum connection idle time (e.g., "5m")
          type: string
          pattern: ^(\d+[smh])+$
          minLength: 2
          maxLength: 20
          example: 5m
        healthCheckPeriod:
          description: Health check period for connections (PostgreSQL)
          type: string
          pattern: ^(\d+[smh])+$
          minLength: 2
          maxLength: 20
          example: 30s
        runMigrations:
          description: Automatically run database migrations on startup
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed database deployment
          type: boolean
          default: false
          example: true
        image:
          $ref: '#/components/schemas/ConfigImage'
        persistence:
          $ref: '#/components/schemas/ConfigPersistence'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
        - url
        - type
        - maxConns
        - minConns
        - runMigrations
        - managed
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigIntelligence:
      description: Intelligence configuration (LLMs, embeddings, scraper, speech, etc.)
      type: object
      title: IntelligenceConfig
      properties:
        embedding:
          $ref: '#/components/schemas/ConfigLLM'
        llm:
          $ref: '#/components/schemas/ConfigLLM'
        runpod:
          $ref: '#/components/schemas/ConfigRunPod'
        scraper:
          $ref: '#/components/schemas/ConfigScraper'
        speech:
          $ref: '#/components/schemas/ConfigSpeech'
        unstructured:
          $ref: '#/components/schemas/ConfigUnstructured'
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigLogging:
      description: Logging configuration
      type: object
      title: LoggingConfig
      properties:
        level:
          description: Minimum log level to output
          type: string
          enum:
            - fatal
            - error
            - warn
            - info
            - debug
            - trace
            - silent
          default: info
          example: fatal
        pretty:
          description: Enable pretty-printed logs for development
          type: boolean
          default: false
          example: true
      required:
        - level
        - pretty
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigPlatform:
      description: Platform configuration (host, image, resources)
      type: object
      title: PlatformConfig
      properties:
        enabled:
          description: Enable platform service
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed platform deployment
          type: boolean
          default: false
          example: true
        url:
          description: Platform URL
          type: string
          default: http://localhost:3000
          format: uri
          example: https://platform.archesai.dev
          maxLength: 2048
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigRedis:
      description: Redis configuration
      type: object
      title: RedisConfig
      properties:
        enabled:
          description: Enable Redis
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed Redis deployment
          type: boolean
          default: false
          example: true
        auth:
          description: Redis authentication password
          type: string
          default: password
          minLength: 1
          example: secure-redis-password
          maxLength: 72
          pattern: ^[\w\-@./#&+!*()]+$
        ca:
          description: Certificate Authority for TLS (optional)
          type: string
          minLength: 1
          example: /etc/ssl/certs/ca.pem
          maxLength: 255
          pattern: ^[\w\s\-./]+$
        host:
          description: Redis hostname or IP
          type: string
          default: localhost
          minLength: 1
          example: redis.example.com
          maxLength: 255
          pattern: ^[a-zA-Z0-9.\-]+$
        port:
          description: Redis port number
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          default: 6379
          example: 6379
        image:
          $ref: '#/components/schemas/ConfigImage'
        persistence:
          $ref: '#/components/schemas/ConfigPersistence'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
        - auth
        - host
        - port
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigStorage:
      description: Object storage configuration for MinIO or S3-compatible services
      type: object
      properties:
        enabled:
          description: Enable object storage
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed storage deployment
          type: boolean
          default: false
          example: true
        accesskey:
          description: MinIO/S3 access key ID
          type: string
          default: minioadmin
          minLength: 1
          example: AKIAIOSFODNN7EXAMPLE
          maxLength: 255
          pattern: ^[A-Z0-9]+$
        bucket:
          description: S3 bucket name
          type: string
          default: archesai
          minLength: 1
          example: archesai
          maxLength: 255
          pattern: ^[a-z0-9][a-z0-9\-]*[a-z0-9]$
        endpoint:
          description: MinIO server endpoint URL
          type: string
          format: uri
          default: http://localhost:9000
          minLength: 1
          example: http://localhost:9000
          maxLength: 2048
        secretkey:
          description: MinIO/S3 secret access key
          type: string
          default: minioadmin
          minLength: 1
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          maxLength: 255
          pattern: ^[A-Za-z0-9+/=]+$
        image:
          $ref: '#/components/schemas/ConfigImage'
        persistence:
          $ref: '#/components/schemas/ConfigPersistence'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
        - accesskey
        - bucket
        - endpoint
        - secretkey
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
      title: StorageConfig
    ConfigKubernetes:
      type: object
      title: KubernetesConfig
      description: Kubernetes-specific deployment configuration
      properties:
        infrastructure:
          $ref: '#/components/schemas/ConfigInfrastructure'
        ingress:
          $ref: '#/components/schemas/ConfigIngress'
        monitoring:
          $ref: '#/components/schemas/ConfigMonitoring'
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigEmail:
      description: Email configuration for sending emails
      type: object
      title: EmailConfig
      properties:
        enabled:
          description: Enable email functionality
          type: boolean
          default: false
          example: true
        service:
          description: Email service provider (e.g., "gmail", "sendgrid", etc.)
          type: string
          pattern: ^[\w\-]+$
          example: sendgrid
          maxLength: 255
        user:
          description: Username for the email service
          type: string
          format: email
          pattern: ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$
          example: user@example.com
          maxLength: 255
        password:
          description: Password for the email service
          type: string
          pattern: ^[\w\s\-.,!?()@#+/=]*$
          example: secret-password-123
          maxLength: 255
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigImage:
      description: Container image configuration
      type: object
      title: ImageConfig
      properties:
        pullPolicy:
          description: Kubernetes image pull policy
          type: string
          enum:
            - Always
            - IfNotPresent
            - Never
          default: IfNotPresent
          example: Always
        repository:
          description: Container image repository
          type: string
          minLength: 1
          example: archesai/archesai
          maxLength: 255
          pattern: ^[a-z0-9]+(([._]|__|[-]+)[a-z0-9]+)*(\/[a-z0-9]+(([._]|__|[-]+)[a-z0-9]+)*)*$
        tag:
          description: Container image tag
          type: string
          default: latest
          minLength: 1
          example: v1.0.0
          maxLength: 255
          pattern: ^[a-zA-Z0-9_][a-zA-Z0-9._-]*$
      required:
        - pullPolicy
        - tag
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigResource:
      description: Kubernetes resource configuration
      type: object
      title: ResourceConfig
      properties:
        limits:
          description: Resource limits
          type: object
          properties:
            cpu:
              description: Maximum CPU allocation
              type: string
              pattern: ^\d+m?$
              default: 1000m
              minLength: 1
              example: 1000m
              maxLength: 255
            memory:
              description: Maximum memory allocation
              type: string
              pattern: ^\d+(Mi|Gi|Ki)?$
              default: 1Gi
              minLength: 1
              example: 1Gi
              maxLength: 255
          required:
            - cpu
            - memory
          additionalProperties: false
        requests:
          description: Resource requests
          type: object
          properties:
            cpu:
              description: Requested CPU allocation
              type: string
              pattern: ^\d+m?$
              default: 100m
              minLength: 1
              example: 100m
              maxLength: 255
            memory:
              description: Requested memory allocation
              type: string
              pattern: ^\d+(Mi|Gi|Ki)?$
              default: 128Mi
              minLength: 1
              example: 128Mi
              maxLength: 255
          required:
            - cpu
            - memory
          additionalProperties: false
      required:
        - limits
        - requests
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthFirebase:
      description: Firebase authentication configuration
      type: object
      title: FirebaseAuthConfig
      properties:
        enabled:
          description: Enable Firebase authentication
          type: boolean
          default: false
          example: true
        clientEmail:
          description: Firebase service account client email address
          type: string
          format: email
          example: firebase@project.iam.gserviceaccount.com
          maxLength: 255
          pattern: ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$
        privateKey:
          description: Firebase service account private key (PEM format)
          type: string
          minLength: 1
          maxLength: 10000
          pattern: ^[\w\s\-.,!?()@#+/=\n\r]*$
        projectID:
          description: Firebase project ID for authentication
          type: string
          maxLength: 255
          pattern: ^[\w\-]+$
          example: example-id-123
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthLocal:
      description: Local username/password authentication
      type: object
      title: LocalAuthConfig
      properties:
        enabled:
          description: Enable local authentication
          type: boolean
          default: true
          example: true
        jwtSecret:
          description: Secret key for JWT token signing
          type: string
          default: change-me-in-production
          minLength: 32
          example: your-256-bit-secret-key-here-change-in-production
          maxLength: 512
          pattern: ^[\w\-+=/.]+$
        accessTokenTTL:
          description: Access token time-to-live duration (e.g., "15m", "1h")
          type: string
          pattern: ^(\d+[smhd])+$
          minLength: 2
          maxLength: 20
          default: 15m
          example: 15m
        refreshTokenTTL:
          description: Refresh token time-to-live duration (e.g., "7d", "168h")
          type: string
          pattern: ^(\d+[smhd])+$
          minLength: 2
          maxLength: 20
          default: 168h
          example: 168h
      required:
        - enabled
        - jwtSecret
        - accessTokenTTL
        - refreshTokenTTL
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthMagicLink:
      description: Magic link authentication configuration
      type: object
      title: MagicLinkAuthConfig
      properties:
        enabled:
          description: Enable magic link authentication
          type: boolean
          default: false
          example: true
        tokenExpiry:
          description: Token expiry duration in minutes
          type: integer
          format: int32
          minimum: 1
          maximum: 60
          default: 15
          example: 15
        otpLength:
          description: Length of OTP code
          type: integer
          format: int32
          minimum: 4
          maximum: 8
          default: 6
          example: 6
        deliveryMethods:
          description: Available delivery methods
          type: object
          properties:
            email:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: true
                  example: true
                from:
                  type: string
                  format: email
                  example: noreply@archesai.com
                  maxLength: 255
              additionalProperties: false
            console:
              type: object
              properties:
                enabled:
                  description: Enable console output (development only)
                  type: boolean
                  default: false
                  example: false
              additionalProperties: false
            otp:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: true
                  example: true
              additionalProperties: false
            webhook:
              type: object
              properties:
                enabled:
                  type: boolean
                  default: false
                  example: false
                url:
                  type: string
                  format: uri
                  example: https://hooks.example.com/magic-link
                  maxLength: 2048
              additionalProperties: false
          additionalProperties: false
        rateLimit:
          description: Rate limiting configuration
          type: object
          properties:
            maxAttempts:
              description: Maximum number of attempts within window
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
              default: 5
              example: 5
            windowMinutes:
              description: Time window in minutes
              type: integer
              format: int32
              minimum: 1
              maximum: 2147483647
              default: 15
              example: 15
          additionalProperties: false
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthTwitter:
      description: Twitter OAuth configuration
      type: object
      title: TwitterAuthConfig
      properties:
        enabled:
          description: Enable Twitter OAuth
          type: boolean
          default: false
          example: true
        callbackURL:
          description: OAuth callback URL
          type: string
          format: uri
          minLength: 1
          example: http://localhost:8080/auth/oauth/twitter/callback
          maxLength: 2048
        consumerKey:
          description: Twitter API consumer key
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-]+$
        consumerSecret:
          description: Twitter API consumer secret
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-]+$
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthGoogle:
      description: Google OAuth configuration
      type: object
      title: GoogleAuthConfig
      properties:
        enabled:
          description: Enable Google OAuth
          type: boolean
          default: false
          example: false
        clientId:
          description: Google OAuth client ID
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\.\-]+$
          example: 123456789012-abcdefghijklmnopqrstuvwxyz123456.apps.googleusercontent.com
        clientSecret:
          description: Google OAuth client secret
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-]+$
          example: GOCSPX-abc123def456ghi789jkl012
        redirectUrl:
          description: OAuth callback URL
          type: string
          format: uri
          example: http://localhost:8080/auth/oauth/google/callback
          maxLength: 2048
        scopes:
          description: OAuth scopes to request
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[\w\s\-:\.]+$
          default:
            - openid
            - profile
            - email
          example:
            - openid
            - profile
          maxItems: 1000
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthGithub:
      description: GitHub OAuth configuration
      type: object
      title: GitHubAuthConfig
      properties:
        enabled:
          description: Enable GitHub OAuth
          type: boolean
          default: false
          example: false
        clientId:
          description: GitHub OAuth App client ID
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\.\-]+$
          example: Iv1.abc123def456ghi7
        clientSecret:
          description: GitHub OAuth App client secret
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-]+$
          example: abc123def456ghi789jkl012mno345pqr678stu901
        redirectUrl:
          description: OAuth callback URL
          type: string
          format: uri
          example: http://localhost:8080/auth/oauth/github/callback
          maxLength: 2048
        scopes:
          description: OAuth scopes to request
          type: array
          items:
            type: string
            maxLength: 255
            pattern: ^[\w\s\-:]+$
          default:
            - user:email
          example:
            - read:user
          maxItems: 1000
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigAuthMicrosoft:
      description: Microsoft/Azure AD OAuth configuration
      type: object
      title: MicrosoftAuthConfig
      properties:
        enabled:
          description: Enable Microsoft OAuth
          type: boolean
          default: false
          example: false
        clientId:
          description: Azure AD Application (client) ID
          type: string
          format: uuid
          minLength: 1
          maxLength: 255
          example: 12345678-1234-1234-1234-123456789012
        clientSecret:
          description: Azure AD client secret
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-~]+$
          example: abc~def123GHI456jkl789MNO012pqr345
        redirectUrl:
          description: OAuth callback URL
          type: string
          format: uri
          example: http://localhost:8080/auth/oauth/microsoft/callback
          maxLength: 2048
        tenant:
          description: Azure AD tenant ID (use 'common' for multi-tenant)
          type: string
          minLength: 1
          maxLength: 255
          pattern: ^[\w\-]+$
          default: common
          example: common
        scopes:
          description: OAuth scopes to request
          type: array
          items:
            type: string
            maxLength: 255
            pattern: ^[\w\s\-:\.]+$
          default:
            - openid
            - profile
            - email
            - User.Read
          example:
            - openid
            - profile
          maxItems: 1000
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigStripe:
      description: Stripe payment configuration
      type: object
      title: StripeConfig
      properties:
        token:
          description: Stripe secret API key
          type: string
          minLength: 1
          example: sk_test_51H...
          maxLength: 512
          pattern: ^[a-zA-Z0-9_]+$
        whsec:
          description: Stripe webhook endpoint secret
          type: string
          minLength: 1
          example: whsec_...
          maxLength: 255
          pattern: ^[a-zA-Z0-9_]+$
      required:
        - token
        - whsec
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigPersistence:
      description: Persistent storage configuration
      type: object
      title: PersistenceConfig
      properties:
        enabled:
          description: Enable persistent storage
          type: boolean
          default: true
          example: true
        size:
          description: Size of persistent volume
          type: string
          default: 10Gi
          minLength: 1
          example: 10Gi
          maxLength: 255
          pattern: ^[0-9]+(Ei|Pi|Ti|Gi|Mi|Ki|E|P|T|G|M|K)?$
      required:
        - enabled
        - size
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigLLM:
      description: Large Language Model configuration
      type: object
      title: LLMConfig
      properties:
        type:
          description: LLM provider type
          type: string
          enum:
            - ollama
            - openai
          default: ollama
          example: ollama
        endpoint:
          description: LLM service endpoint URL
          type: string
          format: uri
          minLength: 1
          example: http://localhost:11434
          maxLength: 2048
        token:
          description: Authentication token for LLM service
          type: string
          minLength: 1
          example: sk-...
          maxLength: 512
          pattern: ^[a-zA-Z0-9_\-\.]+$
      required:
        - type
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigRunPod:
      description: RunPod serverless GPU configuration
      type: object
      title: RunPodConfig
      properties:
        enabled:
          description: Enable RunPod integration
          type: boolean
          default: false
          example: true
        token:
          description: RunPod API token
          type: string
          minLength: 1
          example: rp-...
          maxLength: 512
          pattern: ^[a-zA-Z0-9_\-\.]+$
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigScraper:
      description: Web scraping service configuration
      type: object
      title: ScraperConfig
      properties:
        enabled:
          description: Enable scraper service
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed scraper deployment
          type: boolean
          default: false
          example: true
        endpoint:
          description: Web scraper service endpoint URL
          type: string
          format: uri
          minLength: 1
          example: http://scraper:8080
          maxLength: 2048
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigSpeech:
      description: Speech recognition and TTS services
      type: object
      properties:
        enabled:
          description: Enable speech services
          type: boolean
          default: false
          example: true
        token:
          description: Speech-to-text service API token
          type: string
          minLength: 1
          example: sk-...
          maxLength: 512
          pattern: ^[a-zA-Z0-9_\-\.]+$
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
      title: SpeechConfig
    ConfigUnstructured:
      description: Unstructured.io service for document parsing
      type: object
      title: UnstructuredConfig
      properties:
        enabled:
          description: Enable unstructured document parsing
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed unstructured deployment
          type: boolean
          default: false
          example: true
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigInfrastructure:
      description: Infrastructure configuration for Kubernetes deployments
      type: object
      title: InfrastructureConfig
      properties:
        images:
          $ref: '#/components/schemas/ConfigImages'
        migrations:
          $ref: '#/components/schemas/ConfigMigrations'
        namespace:
          description: Kubernetes namespace where all resources will be deployed
          type: string
          default: arches-system
          minLength: 1
          example: arches-system
          maxLength: 255
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
        serviceAccount:
          $ref: '#/components/schemas/ConfigServiceAccount'
      required:
        - images
        - migrations
        - namespace
        - serviceAccount
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigIngress:
      description: Ingress configuration
      type: object
      title: IngressConfig
      properties:
        enabled:
          description: Enable ingress
          type: boolean
          default: false
          example: true
        domain:
          description: Primary domain name for ingress routing
          type: string
          format: hostname
          default: archesai.dev
          minLength: 1
          example: archesai.dev
          maxLength: 255
        tls:
          $ref: '#/components/schemas/ConfigTLS'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigMonitoring:
      description: Monitoring configuration for Grafana and Loki
      type: object
      title: MonitoringConfig
      properties:
        grafana:
          $ref: '#/components/schemas/ConfigGrafana'
        loki:
          $ref: '#/components/schemas/ConfigLoki'
      required:
        - grafana
        - loki
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigImages:
      description: Container image configuration
      type: object
      title: ImagesConfig
      properties:
        imagePullSecrets:
          description: List of Kubernetes secrets for pulling private images
          type: array
          items:
            type: string
            minLength: 1
            example: regcred
            maxLength: 255
            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
          default: []
          maxItems: 1000
        imageRegistry:
          description: Custom container registry URL (leave empty for Docker Hub)
          type: string
          default: ''
          example: gcr.io
          maxLength: 2048
          pattern: ^(|[a-z0-9]([-a-z0-9\.]*[a-z0-9])?(:[0-9]+)?)$
      required:
        - imagePullSecrets
        - imageRegistry
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigMigrations:
      description: Database migration configuration
      type: object
      title: MigrationsConfig
      properties:
        enabled:
          description: Enable automatic DB migrations
          type: boolean
          default: false
          example: true
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigServiceAccount:
      description: Kubernetes service account configuration
      type: object
      title: ServiceAccountConfig
      properties:
        create:
          description: Create dedicated service account
          type: boolean
          default: true
          example: true
        name:
          description: Custom service account name
          type: string
          default: ''
          example: archesai-sa
          maxLength: 255
          pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9])?)$
      required:
        - create
        - name
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigTLS:
      description: TLS configuration
      type: object
      title: TLSConfig
      properties:
        enabled:
          description: Enable TLS/SSL
          type: boolean
          default: true
          example: true
        issuer:
          description: Cert-manager ClusterIssuer
          type: string
          default: letsencrypt-staging
          minLength: 1
          example: letsencrypt-prod
          maxLength: 255
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
        secretName:
          description: Kubernetes secret name for TLS certificates
          type: string
          default: archesai-tls
          minLength: 1
          example: archesai-tls
          maxLength: 255
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigGrafana:
      description: Grafana monitoring dashboard configuration
      type: object
      title: GrafanaConfig
      properties:
        enabled:
          description: Enable Grafana
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed Grafana deployment
          type: boolean
          default: false
          example: true
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    ConfigLoki:
      description: Loki log aggregation service configuration
      type: object
      title: LokiConfig
      properties:
        enabled:
          description: Enable Loki
          type: boolean
          default: false
          example: true
        managed:
          description: Use managed Loki deployment
          type: boolean
          default: false
          example: true
        host:
          description: Loki host URL
          type: string
          format: uri
          default: http://localhost:3100
          minLength: 1
          example: http://localhost:3100
          maxLength: 2048
        image:
          $ref: '#/components/schemas/ConfigImage'
        resources:
          $ref: '#/components/schemas/ConfigResource'
      required:
        - enabled
      additionalProperties: false
      x-codegen:
        schemaType: valueobject
    Health:
      title: Health
      description: Health check response
      x-codegen:
        schemaType: valueobject
      type: object
      properties:
        services:
          type: object
          properties:
            database:
              type: string
              example: healthy
              enum:
                - healthy
                - unhealthy
                - degraded
            email:
              type: string
              example: healthy
              enum:
                - healthy
                - unhealthy
                - degraded
            redis:
              type: string
              example: healthy
              enum:
                - healthy
                - unhealthy
                - degraded
          required:
            - database
            - email
            - redis
          additionalProperties: false
        timestamp:
          type: string
          format: date-time
          maxLength: 64
          example: '2024-01-15T09:30:00Z'
        uptime:
          description: System uptime in seconds
          type: integer
          format: int64
          minimum: 0
          maximum: 9223372036854776000
          example: 86400
      required:
        - services
        - timestamp
        - uptime
      additionalProperties: false
  responses:
    SessionCreated:
      description: Login successful
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Session'
      headers:
        Set-Cookie:
          $ref: '#/components/headers/SetCookie'
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    BadRequest:
      description: 400 Bad Request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    Unauthorized:
      description: 401 Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    UnprocessableEntity:
      description: 422 Unprocessable Entity
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    TooManyRequests:
      description: Too many requests - rate limit exceeded
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
        Retry-After:
          $ref: '#/components/headers/RetryAfter'
    InternalServerError:
      description: Internal server error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    LogoutResponse:
      description: Logout successful
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            required:
              - message
            properties:
              message:
                type: string
                minLength: 1
                maxLength: 255
                example: Successfully logged out
                pattern: ^[\w\s\-.,!?()]+$
          example:
            message: Successfully logged out
      headers:
        Set-Cookie:
          $ref: '#/components/headers/SetCookie'
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    Conflict:
      description: 409 Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    NotFound:
      description: 404 Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    SessionListResponse:
      description: Sessions retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Session'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    SessionResponse:
      description: Session retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Session'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    AccountListResponse:
      description: Accounts retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Account'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    AccountResponse:
      description: Account retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Account'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    NoContent:
      description: 204 No Content
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    EmailVerificationResponse:
      description: Email verified successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              session:
                $ref: '#/components/schemas/Session'
              user:
                $ref: '#/components/schemas/User'
            required:
              - session
              - user
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    UserListResponse:
      description: Users retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/User'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
          example:
            data:
              - id: 550e8400-e29b-41d4-a716-446655440001
                name: John Doe
                email: john@example.com
                emailVerified: true
                image: https://example.com/avatar.jpg
                createdAt: '2024-01-15T09:30:00Z'
                updatedAt: '2024-01-15T09:30:00Z'
            meta:
              total: 1
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    UserResponse:
      description: User retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/User'
            required:
              - data
            additionalProperties: false
          example:
            data:
              id: 550e8400-e29b-41d4-a716-446655440000
              name: John Doe
              email: user@example.com
              emailVerified: true
              image: https://example.com/avatar.jpg
              createdAt: '2024-01-15T09:30:00Z'
              updatedAt: '2024-01-15T09:30:00Z'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    APIKeyListResponse:
      description: API keys retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/APIKey'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    APIKeyResponse:
      description: API key retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/APIKey'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    OrganizationListResponse:
      description: Organizations retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Organization'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
          example:
            data:
              - id: 550e8400-e29b-41d4-a716-446655440000
                name: Acme Corporation
                slug: acme-corp
                logo: https://example.com/org-logo.png
                billingEmail: billing@acme.com
                plan: STANDARD
                credits: 1000
                stripeCustomerIdentifier: cus_1234567890
                createdAt: '2024-01-15T09:30:00Z'
                updatedAt: '2024-01-15T09:30:00Z'
            meta:
              total: 1
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    OrganizationResponse:
      description: Organization retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Organization'
            required:
              - data
            additionalProperties: false
          example:
            data:
              id: 550e8400-e29b-41d4-a716-446655440000
              name: Acme Corporation
              slug: acme-corp
              logo: https://example.com/org-logo.png
              billingEmail: billing@acme.com
              plan: STANDARD
              credits: 1000
              stripeCustomerIdentifier: cus_1234567890
              createdAt: '2024-01-15T09:30:00Z'
              updatedAt: '2024-01-15T09:30:00Z'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    MemberResponse:
      description: Member retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Member'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    InvitationListResponse:
      description: Invitations retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Invitation'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    InvitationResponse:
      description: Invitation retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Invitation'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    PipelineListResponse:
      description: Pipelines retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Pipeline'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
          example:
            data:
              - id: 550e8400-e29b-41d4-a716-446655440000
                organizationID: 550e8400-e29b-41d4-a716-446655440001
                name: Data Processing Pipeline
                description: Processes incoming data through validation, transformation, and storage steps
                createdAt: '2024-01-15T09:30:00Z'
                updatedAt: '2024-01-15T09:30:00Z'
            meta:
              total: 1
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    PipelineResponse:
      description: Pipeline retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Pipeline'
            required:
              - data
            additionalProperties: false
          example:
            data:
              id: 550e8400-e29b-41d4-a716-446655440000
              organizationID: 550e8400-e29b-41d4-a716-446655440001
              name: Data Processing Pipeline
              description: Processes incoming data through validation, transformation, and storage steps
              createdAt: '2024-01-15T09:30:00Z'
              updatedAt: '2024-01-15T09:30:00Z'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    PipelineStepListResponse:
      description: Pipeline steps retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/PipelineStep'
            required:
              - data
            additionalProperties: false
          example:
            data:
              - id: 550e8400-e29b-41d4-a716-446655440010
                pipelineID: 550e8400-e29b-41d4-a716-446655440000
                toolID: 550e8400-e29b-41d4-a716-446655440011
                createdAt: '2024-01-15T09:30:00Z'
                updatedAt: '2024-01-15T09:30:00Z'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    PipelineExecutionPlanResponse:
      description: Execution plan retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  pipelineID:
                    description: UUID identifier
                    type: string
                    format: uuid
                    example: 550e8400-e29b-41d4-a716-446655440000
                    minLength: 36
                    maxLength: 36
                  levels:
                    type: array
                    maxItems: 1000
                    items:
                      type: object
                      properties:
                        level:
                          type: integer
                          format: int32
                          minimum: 0
                          maximum: 2147483647
                          description: Execution level (0-based)
                          example: 0
                        steps:
                          type: array
                          maxItems: 10000
                          items:
                            type: string
                            format: uuid
                            example: 550e8400-e29b-41d4-a716-446655440000
                            minLength: 36
                            description: Step IDs that can run in parallel at this level
                            maxLength: 36
                      required:
                        - level
                        - steps
                  totalSteps:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 2147483647
                    description: Total number of steps in the pipeline
                    example: 5
                  isValid:
                    type: boolean
                    description: Whether the pipeline DAG is valid (no cycles)
                    example: true
                  estimatedDuration:
                    type: integer
                    format: int32
                    minimum: 0
                    maximum: 2147483647
                    description: Estimated execution time in seconds
                    example: 3600
                required:
                  - pipelineID
                  - levels
                  - totalSteps
                  - isValid
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    RunListResponse:
      description: Runs retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Run'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    RunResponse:
      description: Run retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Run'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    ToolListResponse:
      description: Tools retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Tool'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    ToolResponse:
      description: Tool retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Tool'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    ArtifactListResponse:
      description: Artifacts retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Artifact'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    ArtifactResponse:
      description: Artifact retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Artifact'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    LabelListResponse:
      description: Labels retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                maxItems: 10000
                items:
                  $ref: '#/components/schemas/Label'
              meta:
                $ref: '#/components/schemas/PaginationMeta'
            required:
              - data
              - meta
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    LabelResponse:
      description: Label retrieved successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Label'
            required:
              - data
            additionalProperties: false
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    ConfigResponse:
      description: Current configuration
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Config'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
    HealthResponse:
      description: Health status retrieved successfully
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Health'
      headers:
        X-RateLimit-Limit:
          $ref: '#/components/headers/RateLimitLimit'
        X-RateLimit-Remaining:
          $ref: '#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: '#/components/headers/RateLimitReset'
  parameters:
    PageQuery:
      in: query
      name: page
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/Page'
      description: The page parameter
      example:
        limit: 10
        offset: 0
    SessionsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - organizationID
                - expiresAt
                - ipAddress
                - token
                - userAgent
                - userID
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    ResourceID:
      schema:
        $ref: '#/components/schemas/UUID'
      in: path
      name: id
      required: true
      description: The unique identifier of the resource.
    UsersFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: email
        value: user@example.com
    UsersSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - email
                - emailVerified
                - image
                - name
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    APIKeysFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: userID
        value: 550e8400-e29b-41d4-a716-446655440000
    APIKeysSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - userID
                - organizationID
                - keyHash
                - name
                - prefix
                - rateLimit
                - lastUsedAt
                - expiresAt
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: desc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    OrganizationsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: name
        value: Example Organization
    OrganizationsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - billingEmail
                - credits
                - logo
                - metadata
                - name
                - plan
                - slug
                - stripeCustomerIdentifier
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    MembersFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: role
        value: ADMIN
    MembersSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - organizationID
                - role
                - userID
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    OrganizationID:
      schema:
        $ref: '#/components/schemas/UUID'
      in: path
      name: organizationID
      required: true
      description: The unique identifier of the organization.
    InvitationsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: status
        value: PENDING
    InvitationsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - email
                - expiresAt
                - inviterID
                - organizationID
                - role
                - status
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    PipelinesFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: organizationID
        value: 550e8400-e29b-41d4-a716-446655440000
    PipelinesSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - description
                - name
                - organizationID
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    RunsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: status
        value: COMPLETED
    RunsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - completedAt
                - error
                - organizationID
                - pipelineID
                - progress
                - startedAt
                - status
                - toolID
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    ToolsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: inputMimeType
        value: application/json
    ToolsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - description
                - inputMimeType
                - name
                - organizationID
                - outputMimeType
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    ArtifactsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: mimeType
        value: application/pdf
    ArtifactsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - credits
                - description
                - mimeType
                - name
                - organizationID
                - previewImage
                - producerID
                - text
                - url
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
    LabelsFilter:
      in: query
      name: filter
      required: false
      style: deepObject
      explode: true
      schema:
        $ref: '#/components/schemas/FilterNode'
      description: Filter by field values
      example:
        type: eq
        field: name
        value: production
    LabelsSort:
      in: query
      name: sort
      required: false
      style: form
      explode: true
      schema:
        type: array
        maxItems: 10
        items:
          type: object
          required:
            - field
            - order
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - name
                - organizationID
              example: createdAt
            order:
              type: string
              enum:
                - asc
                - desc
              example: asc
      description: The sort parameter
      example:
        - field: createdAt
          order: desc
  headers:
    SetCookie:
      description: Session cookies for authentication
      schema:
        type: string
        minLength: 1
        maxLength: 4096
        pattern: ^[\w\-=;,. ]+$
    RateLimitLimit:
      description: The maximum number of requests allowed per time window
      schema:
        type: integer
        example: 1000
        format: int32
        minimum: 1
        maximum: 1000000
      example: 1000
    RateLimitRemaining:
      description: The number of requests remaining in the current time window
      schema:
        type: integer
        example: 999
        format: int32
        minimum: 0
        maximum: 1000000
      example: 999
    RateLimitReset:
      description: The time at which the current rate limit window resets (Unix timestamp)
      schema:
        type: integer
        example: 1640995200
        format: int64
        minimum: 0
        maximum: 9223372036854776000
      example: 1640995200
    RetryAfter:
      description: Number of seconds to wait before making a new request
      schema:
        type: integer
        example: 60
        format: int32
        minimum: 1
        maximum: 3600
      example: 60
