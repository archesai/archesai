components:
  schemas:
    ArchesConfig:
      description: Arches AI configuration schema
      type: object
      properties:
        api:
          $ref: '#/components/schemas/APIConfig'
        auth:
          $ref: '#/components/schemas/AuthConfig'
        billing:
          $ref: '#/components/schemas/BillingConfig'
        database:
          $ref: '#/components/schemas/DatabaseConfig'
        infrastructure:
          $ref: '#/components/schemas/InfrastructureConfig'
        ingress:
          $ref: '#/components/schemas/IngressConfig'
        intelligence:
          $ref: '#/components/schemas/IntelligenceConfig'
        logging:
          $ref: '#/components/schemas/LoggingConfig'
        monitoring:
          $ref: '#/components/schemas/MonitoringConfig'
        platform:
          $ref: '#/components/schemas/PlatformConfig'
        redis:
          $ref: '#/components/schemas/RedisConfig'
        storage:
          $ref: '#/components/schemas/StorageConfig'
      required:
        - api
        - auth
        - billing
        - database
        - infrastructure
        - ingress
        - intelligence
        - logging
        - monitoring
        - platform
        - redis
        - storage
      additionalProperties: false

    APIConfig:
      description: Configuration schema for the API server
      type: object
      properties:
        cors:
          $ref: '#/components/schemas/CORSConfig'
        docs:
          description: Enable or disable API documentation
          type: boolean
          default: true
        email:
          $ref: '#/components/schemas/EmailConfig'
        host:
          description: The host address on which the API server will listen
          type: string
          default: '0.0.0.0'
        port:
          description: The port on which the API server will listen
          type: number
          default: 3001
        validate:
          description: Enable or disable request validation
          type: boolean
          default: true
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [cors, docs, email, host, port, validate, image, resources]
      additionalProperties: false

    CORSConfig:
      description: CORS configuration for the API server
      type: object
      properties:
        origins:
          description: A comma-separated list of allowed origins for CORS requests
          type: string
          default: 'https://platform.archesai.dev'
      required: [origins]
      additionalProperties: false

    EmailConfig:
      description: Email configuration for sending emails
      type: object
      properties:
        enabled:
          description: Enable email functionality
          type: boolean
          default: false
        service:
          description: Email service provider (e.g., "gmail", "sendgrid", etc.)
          type: string
        user:
          description: Username for the email service
          type: string
        password:
          description: Password for the email service
          type: string
      required: [enabled]
      additionalProperties: false

    AuthConfig:
      description: Authentication configuration for the API server
      type: object
      properties:
        enabled:
          description: Enable authentication
          type: boolean
          default: true
        firebase:
          $ref: '#/components/schemas/FirebaseAuth'
        local:
          $ref: '#/components/schemas/LocalAuth'
        twitter:
          $ref: '#/components/schemas/TwitterAuth'
      required: [enabled]
      additionalProperties: false

    FirebaseAuth:
      description: Firebase authentication configuration
      type: object
      properties:
        enabled:
          description: Enable Firebase authentication
          type: boolean
          default: false
        clientEmail:
          description: Firebase service account client email address
          type: string
        privateKey:
          description: Firebase service account private key (PEM format)
          type: string
        projectId:
          description: Firebase project ID for authentication
          type: string
      required: [enabled]
      additionalProperties: false

    LocalAuth:
      description: Local username/password authentication
      type: object
      properties:
        enabled:
          description: Enable local authentication
          type: boolean
          default: true
      required: [enabled]
      additionalProperties: false

    TwitterAuth:
      description: Twitter OAuth configuration
      type: object
      properties:
        enabled:
          description: Enable Twitter OAuth
          type: boolean
          default: false
        callbackURL:
          description: OAuth callback URL
          type: string
        consumerKey:
          description: Twitter API consumer key
          type: string
        consumerSecret:
          description: Twitter API consumer secret
          type: string
      required: [enabled]
      additionalProperties: false

    BillingConfig:
      description: Billing configuration for Stripe
      type: object
      properties:
        enabled:
          description: Enable billing functionality
          type: boolean
          default: false
        stripe:
          $ref: '#/components/schemas/StripeConfig'
      required: [enabled]
      additionalProperties: false

    StripeConfig:
      description: Stripe payment configuration
      type: object
      properties:
        token:
          description: Stripe secret API key
          type: string
        whsec:
          description: Stripe webhook endpoint secret
          type: string
      required: [token, whsec]
      additionalProperties: false

    DatabaseConfig:
      description: Database configuration for PostgreSQL
      type: object
      properties:
        enabled:
          description: Enable database
          type: boolean
          default: true
        url:
          description: Database connection URL/string
          type: string
          default: 'postgresql://admin:password@localhost:5432/archesai-db?schema=public'
        managed:
          description: Use managed database deployment
          type: boolean
          default: false
        auth:
          $ref: '#/components/schemas/DatabaseAuth'
        image:
          $ref: '#/components/schemas/ImageConfig'
        persistence:
          $ref: '#/components/schemas/PersistenceConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled, url]
      additionalProperties: false

    DatabaseAuth:
      description: Database authentication credentials
      type: object
      properties:
        database:
          description: Database name
          type: string
          default: 'archesai-db'
        password:
          description: Database user password
          type: string
          default: 'password'
      required: [database, password]
      additionalProperties: false

    InfrastructureConfig:
      description: Infrastructure configuration for Kubernetes deployments
      type: object
      properties:
        development:
          $ref: '#/components/schemas/DevelopmentConfig'
        images:
          $ref: '#/components/schemas/ImagesConfig'
        migrations:
          $ref: '#/components/schemas/MigrationsConfig'
        namespace:
          description: Kubernetes namespace where all resources will be deployed
          type: string
          default: 'arches-system'
        serviceAccount:
          $ref: '#/components/schemas/ServiceAccountConfig'
      required: [development, images, migrations, namespace, serviceAccount]
      additionalProperties: false

    DevelopmentConfig:
      description: Development environment configuration
      type: object
      properties:
        api:
          $ref: '#/components/schemas/DevServiceConfig'
        hostIP:
          description: Host IP address for dev port forwarding
          type: string
          default: '172.18.0.1'
        loki:
          $ref: '#/components/schemas/DevServiceConfig'
        platform:
          $ref: '#/components/schemas/DevServiceConfig'
        postgres:
          $ref: '#/components/schemas/DevServiceConfig'
        redis:
          $ref: '#/components/schemas/DevServiceConfig'
      required: [api, hostIP, loki, platform, postgres, redis]
      additionalProperties: false

    DevServiceConfig:
      description: Development service port forwarding configuration
      type: object
      properties:
        enabled:
          description: Enable dev port forwarding
          type: boolean
          default: false
        port:
          description: Local port for forwarding
          type: number
      required: [enabled, port]
      additionalProperties: false

    ImagesConfig:
      description: Container image configuration
      type: object
      properties:
        imagePullSecrets:
          description: List of Kubernetes secrets for pulling private images
          type: array
          items:
            type: string
          default: []
        imageRegistry:
          description: Custom container registry URL (leave empty for Docker Hub)
          type: string
          default: ''
      required: [imagePullSecrets, imageRegistry]
      additionalProperties: false

    MigrationsConfig:
      description: Database migration configuration
      type: object
      properties:
        enabled:
          description: Enable automatic DB migrations
          type: boolean
          default: false
      required: [enabled]
      additionalProperties: false

    ServiceAccountConfig:
      description: Kubernetes service account configuration
      type: object
      properties:
        create:
          description: Create dedicated service account
          type: boolean
          default: true
        name:
          description: Custom service account name
          type: string
          default: ''
      required: [create, name]
      additionalProperties: false

    IngressConfig:
      description: Ingress configuration
      type: object
      properties:
        enabled:
          description: Enable ingress
          type: boolean
          default: false
        domain:
          description: Primary domain name for ingress routing
          type: string
          default: 'archesai.dev'
        tls:
          $ref: '#/components/schemas/TLSConfig'
      required: [enabled]
      additionalProperties: false

    TLSConfig:
      description: TLS configuration
      type: object
      properties:
        enabled:
          description: Enable TLS/SSL
          type: boolean
          default: true
        issuer:
          description: Cert-manager ClusterIssuer
          type: string
          default: 'letsencrypt-staging'
        secretName:
          description: Kubernetes secret name for TLS certificates
          type: string
          default: 'archesai-tls'
      required: [enabled, secretName]
      additionalProperties: false

    IntelligenceConfig:
      description: Intelligence configuration (LLMs, embeddings, scraper, speech, etc.)
      type: object
      properties:
        embedding:
          $ref: '#/components/schemas/EmbeddingConfig'
        llm:
          $ref: '#/components/schemas/LLMConfig'
        runpod:
          $ref: '#/components/schemas/RunPodConfig'
        scraper:
          $ref: '#/components/schemas/ScraperConfig'
        speech:
          $ref: '#/components/schemas/SpeechConfig'
        unstructured:
          $ref: '#/components/schemas/UnstructuredConfig'
      required: [embedding, llm, runpod, scraper, speech, unstructured]
      additionalProperties: false

    EmbeddingConfig:
      description: Configuration for text embedding generation
      type: object
      properties:
        type:
          description: The embedding provider to use for vector embeddings
          type: string
          enum: [openai, ollama]
          default: 'ollama'
      required: [type]
      additionalProperties: false

    LLMConfig:
      description: Large Language Model configuration
      type: object
      properties:
        type:
          description: LLM provider type
          type: string
          enum: [ollama, openai]
          default: 'ollama'
        endpoint:
          description: LLM service endpoint URL
          type: string
        token:
          description: Authentication token for LLM service
          type: string
      required: [type]
      additionalProperties: false

    RunPodConfig:
      description: RunPod serverless GPU configuration
      type: object
      properties:
        enabled:
          description: Enable RunPod integration
          type: boolean
          default: false
        token:
          description: RunPod API token
          type: string
      required: [enabled]
      additionalProperties: false

    ScraperConfig:
      description: Web scraping service configuration
      type: object
      properties:
        enabled:
          description: Enable scraper service
          type: boolean
          default: false
        managed:
          description: Use managed scraper deployment
          type: boolean
          default: false
        endpoint:
          description: Web scraper service endpoint URL
          type: string
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled]
      additionalProperties: false

    SpeechConfig:
      description: Speech recognition and TTS services
      type: object
      properties:
        enabled:
          description: Enable speech services
          type: boolean
          default: false
        token:
          description: Speech-to-text service API token
          type: string
      required: [enabled]
      additionalProperties: false

    UnstructuredConfig:
      description: Unstructured.io service for document parsing
      type: object
      properties:
        enabled:
          description: Enable unstructured document parsing
          type: boolean
          default: false
        managed:
          description: Use managed unstructured deployment
          type: boolean
          default: false
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled]
      additionalProperties: false

    LoggingConfig:
      description: Logging configuration
      type: object
      properties:
        level:
          description: Minimum log level to output
          type: string
          enum: [fatal, error, warn, info, debug, trace, silent]
          default: 'info'
        pretty:
          description: Enable pretty-printed logs for development
          type: boolean
          default: false
      required: [level, pretty]
      additionalProperties: false

    MonitoringConfig:
      description: Monitoring configuration for Grafana and Loki
      type: object
      properties:
        grafana:
          $ref: '#/components/schemas/GrafanaConfig'
        loki:
          $ref: '#/components/schemas/LokiConfig'
      required: [grafana, loki]
      additionalProperties: false

    GrafanaConfig:
      description: Grafana monitoring dashboard configuration
      type: object
      properties:
        enabled:
          description: Enable Grafana
          type: boolean
          default: false
        managed:
          description: Use managed Grafana deployment
          type: boolean
          default: false
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled]
      additionalProperties: false

    LokiConfig:
      description: Loki log aggregation service configuration
      type: object
      properties:
        enabled:
          description: Enable Loki
          type: boolean
          default: false
        managed:
          description: Use managed Loki deployment
          type: boolean
          default: false
        host:
          description: Loki host URL
          type: string
          default: 'http://localhost:3100'
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled]
      additionalProperties: false

    PlatformConfig:
      description: Platform configuration (host, image, resources)
      type: object
      properties:
        enabled:
          description: Enable platform service
          type: boolean
          default: false
        managed:
          description: Use managed platform deployment
          type: boolean
          default: false
        host:
          description: Host address where the platform service will be accessible
          type: string
          default: 'localhost'
        image:
          $ref: '#/components/schemas/ImageConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled]
      additionalProperties: false

    RedisConfig:
      description: Redis configuration
      type: object
      properties:
        enabled:
          description: Enable Redis
          type: boolean
          default: false
        managed:
          description: Use managed Redis deployment
          type: boolean
          default: false
        auth:
          description: Redis authentication password
          type: string
          default: 'password'
        ca:
          description: Certificate Authority for TLS (optional)
          type: string
        host:
          description: Redis hostname or IP
          type: string
          default: 'localhost'
        port:
          description: Redis port number
          type: number
          default: 6379
        image:
          $ref: '#/components/schemas/ImageConfig'
        persistence:
          $ref: '#/components/schemas/PersistenceConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled, auth, host, port]
      additionalProperties: false

    StorageConfig:
      description: Object storage configuration for MinIO or S3-compatible services
      type: object
      properties:
        enabled:
          description: Enable object storage
          type: boolean
          default: false
        managed:
          description: Use managed storage deployment
          type: boolean
          default: false
        accesskey:
          description: MinIO/S3 access key ID
          type: string
          default: 'minioadmin'
        bucket:
          description: S3 bucket name
          type: string
          default: 'archesai'
        endpoint:
          description: MinIO server endpoint URL
          type: string
          default: 'http://localhost:9000'
        secretkey:
          description: MinIO/S3 secret access key
          type: string
          default: 'minioadmin'
        image:
          $ref: '#/components/schemas/ImageConfig'
        persistence:
          $ref: '#/components/schemas/PersistenceConfig'
        resources:
          $ref: '#/components/schemas/ResourceConfig'
      required: [enabled, accesskey, bucket, endpoint, secretkey]
      additionalProperties: false

    # Shared component schemas
    ImageConfig:
      description: Container image configuration
      type: object
      properties:
        pullPolicy:
          description: Kubernetes image pull policy
          type: string
          enum: [Always, IfNotPresent, Never]
          default: 'IfNotPresent'
        repository:
          description: Container image repository
          type: string
        tag:
          description: Container image tag
          type: string
          default: 'latest'
      required: [pullPolicy, repository, tag]
      additionalProperties: false

    ResourceConfig:
      description: Kubernetes resource configuration
      type: object
      properties:
        limits:
          $ref: '#/components/schemas/ResourceLimits'
        requests:
          $ref: '#/components/schemas/ResourceRequests'
      required: [limits, requests]
      additionalProperties: false

    ResourceLimits:
      description: Resource limits
      type: object
      properties:
        cpu:
          description: Maximum CPU allocation
          type: string
        memory:
          description: Maximum memory allocation
          type: string
      required: [cpu, memory]
      additionalProperties: false

    ResourceRequests:
      description: Resource requests
      type: object
      properties:
        cpu:
          description: Requested CPU allocation
          type: string
        memory:
          description: Requested memory allocation
          type: string
      required: [cpu, memory]
      additionalProperties: false

    PersistenceConfig:
      description: Persistent storage configuration
      type: object
      properties:
        enabled:
          description: Enable persistent storage
          type: boolean
          default: true
        size:
          description: Size of persistent volume
          type: string
          default: '10Gi'
      required: [enabled, size]
      additionalProperties: false
