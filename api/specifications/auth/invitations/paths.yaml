paths:
  /invitations:
    post:
      operationId: createInvitation
      summary: Create a new invitation
      tags: [Auth, Invitations]
      description: Create a new invitation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email of the invitated user
                  type: string
                role:
                  description: The role of the invitation
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
              required:
                - email
                - role
        required: true
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: './schemas.yaml#/components/schemas/InvitationEntity'
                required:
                  - data
                additionalProperties: false
    get:
      operationId: findManyInvitations
      summary: Find many invitations
      tags: [Auth, Invitations]
      description: Find many invitations
      parameters:
        - $ref: ./parameters.yaml#/components/parameters/InvitationsFilter
        - $ref: ../../common/parameters/schemas.yaml#/components/parameters/PageQuery
        - $ref: ./parameters.yaml#/components/parameters/InvitationsSort
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: './schemas.yaml#/components/schemas/InvitationEntity'
                  meta:
                    type: object
                    properties:
                      total:
                        description: Total number of items in the collection
                        type: number
                    required:
                      - total
                    additionalProperties: false
                required:
                  - data
                  - meta
                additionalProperties: false
  /invitations/{id}:
    delete:
      operationId: deleteInvitation
      summary: Delete an invitation
      tags: [Auth, Invitations]
      description: Delete an invitation
      parameters:
        - schema:
            type: string
            format: uuid
            pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          in: path
          name: id
          required: true
          description: The unique identifier of the resource.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: './schemas.yaml#/components/schemas/InvitationEntity'
                required:
                  - data
                additionalProperties: false
        '404':
          $ref: '../../common/responses/schemas.yaml#/components/responses/NotFound'
    get:
      operationId: getOneInvitation
      summary: Find an invitation
      tags: [Auth, Invitations]
      description: Find an invitation
      parameters:
        - schema:
            type: string
            format: uuid
            pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          in: path
          name: id
          required: true
          description: The unique identifier of the resource.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: './schemas.yaml#/components/schemas/InvitationEntity'
                required:
                  - data
                additionalProperties: false
        '404':
          $ref: '../../common/responses/schemas.yaml#/components/responses/NotFound'
    patch:
      operationId: updateInvitation
      summary: Update an invitation
      tags: [Auth, Invitations]
      description: Update an invitation
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email of the invitated user
                  type: string
                role:
                  description: The role of the invitation
                  type: string
                  enum:
                    - admin
                    - owner
                    - member
      parameters:
        - schema:
            type: string
            format: uuid
            pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
          in: path
          name: id
          required: true
          description: The unique identifier of the resource.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Default Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: './schemas.yaml#/components/schemas/InvitationEntity'
                required:
                  - data
                additionalProperties: false
        '404':
          $ref: '../../common/responses/schemas.yaml#/components/responses/NotFound'
