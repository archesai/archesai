paths:
  /accounts:
    get:
      operationId: accounts_findMany
      summary: Find many accounts
      tags: [Auth, Accounts]
      parameters:
        - $ref: ./parameters.yaml#/components/parameters/AccountsFilter
        - $ref: ../../common/parameters/schemas.yaml#/components/parameters/PageQuery
        - $ref: ./parameters.yaml#/components/parameters/AccountsSort
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of accounts
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [data, meta]
                properties:
                  data:
                    type: array
                    items:
                      $ref: ./schemas.yaml#/components/schemas/AccountEntity
                  meta:
                    type: object
                    additionalProperties: false
                    required: [total]
                    properties:
                      total:
                        type: number

  /accounts/{id}:
    get:
      operationId: accounts_getOne
      summary: Find an account
      tags: [Auth, Accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            pattern: '^(?:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The account
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [data]
                properties:
                  data:
                    $ref: ./schemas.yaml#/components/schemas/AccountEntity
        '404':
          $ref: ../../common/responses/schemas.yaml#/components/responses/NotFound

    delete:
      operationId: accounts_delete
      summary: Delete an account
      tags: [Auth, Accounts]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
            pattern: '^(?:[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Deleted account
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [data]
                properties:
                  data:
                    $ref: ./schemas.yaml#/components/schemas/AccountEntity
        '404':
          $ref: ../../common/responses/schemas.yaml#/components/responses/NotFound
