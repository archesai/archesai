components:
  schemas:
    UserEntity:
      description: Schema for User entity
      type: object
      properties:
        createdAt:
          description: The date this item was created
          type: string
          format: date-time
        id:
          description: The ID of the item
          type: string
          format: uuid
          pattern: ^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$
        updatedAt:
          description: The date this item was last updated
          type: string
          format: date-time
        email:
          description: The user's e-mail
          type: string
        emailVerified:
          description: Whether or not the user's e-mail has been verified
          type: boolean
        image:
          description: The user's avatar image URL
          type: string
          nullable: true
        name:
          description: The user's name
          type: string
          minLength: 1
      required:
        - createdAt
        - id
        - updatedAt
        - email
        - emailVerified
        - image
        - name
      additionalProperties: false
    usersFilterNode:
      description: A recursive filter node for users entity that can be a condition or group
      anyOf:
        - type: object
          properties:
            field:
              type: string
              enum:
                - createdAt
                - id
                - updatedAt
                - email
                - emailVerified
                - image
                - name
            operator:
              $ref: '../../../common/filters.yaml#/components/schemas/Operator'
            type:
              type: string
              const: condition
            value:
              $ref: '../../../common/filters.yaml#/components/schemas/FilterValue'
          required:
            - field
            - operator
            - type
            - value
        - type: object
          properties:
            children:
              type: array
              items:
                $ref: '#/components/schemas/usersFilterNode'
            operator:
              type: string
              enum:
                - and
                - or
            type:
              type: string
              const: group
          required:
            - children
            - operator
            - type
    usersSort:
      description: Sorting configuration for users entity with field and order
      type: object
      properties:
        field:
          type: string
          enum:
            - createdAt
            - id
            - updatedAt
            - email
            - emailVerified
            - image
            - name
        order:
          type: string
          enum:
            - asc
            - desc
      required:
        - field
        - order
