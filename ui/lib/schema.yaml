openapi: 3.0.0
paths:
  /organizations/{orgname}/pipelines:
    post:
      operationId: PipelinesController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Pipelines
    get:
      operationId: PipelinesController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Pipelines
  /organizations/{orgname}/pipelines/{id}:
    get:
      operationId: PipelinesController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Pipelines
    delete:
      operationId: PipelinesController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Pipelines
    patch:
      operationId: PipelinesController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Pipelines
  /auth/email-change/confirm:
    post:
      operationId: AuthController_emailChangeConfirm
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationTokenDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/email-change/request:
    post:
      operationId: AuthController_emailChangeRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequestDto'
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Authentication
  /auth/email-verification/confirm:
    post:
      operationId: AuthController_emailVerificationConfirm
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationTokenDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/email-verification/request:
    post:
      operationId: AuthController_emailVerificationRequest
      parameters: []
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Authentication
  /auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/logout:
    post:
      operationId: AuthController_logout
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/password-reset/confirm:
    post:
      operationId: AuthController_passwordResetConfirm
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmationTokenWithNewPasswordDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/password-reset/request:
    post:
      operationId: AuthController_passwordResetRequest
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequestDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/refresh-token:
    post:
      operationId: AuthController_refreshToken
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /auth/register:
    post:
      operationId: AuthController_register
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterDto'
      responses:
        '201':
          description: ''
      tags:
        - Authentication
  /user/deactivate:
    post:
      operationId: UsersController_deactivate
      parameters: []
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - User
  /user:
    get:
      operationId: UsersController_findOne
      parameters: []
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - User
    patch:
      operationId: UsersController_update
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - User
  /organizations:
    post:
      operationId: OrganizationsController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationDto'
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Organizations
    get:
      operationId: OrganizationsController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organizations
  /organizations/{orgname}:
    patch:
      operationId: OrganizationsController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganizationDto'
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organizations
  /organizations/{id}:
    get:
      operationId: OrganizationsController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organizations
    delete:
      operationId: OrganizationsController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organizations
  /organizations/{orgname}/billing/subscription/cancel:
    post:
      operationId: BillingController_cancelSubscriptionPlan
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/billing/subscription:
    post:
      operationId: BillingController_changeSubscriptionPlan
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: planId
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/billing/portal:
    post:
      operationId: BillingController_createBillingPortal
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/billing/checkout:
    post:
      operationId: BillingController_createCheckoutSession
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: planId
          required: true
          in: query
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /plans:
    get:
      operationId: BillingController_getPlans
      parameters: []
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/billing/payment-methods:
    get:
      operationId: BillingController_listPaymentMethods
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/billing/payment-methods/{paymentMethodId}:
    delete:
      operationId: BillingController_removePaymentMethod
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: paymentMethodId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Organization - Billing
  /organizations/{orgname}/tools:
    post:
      operationId: ToolsController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Tools
    get:
      operationId: ToolsController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Tools
  /organizations/{orgname}/tools/{id}:
    get:
      operationId: ToolsController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Tools
    delete:
      operationId: ToolsController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Tools
    patch:
      operationId: ToolsController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Tools
  /organizations/{orgname}/api-tokens:
    post:
      operationId: ApiTokensController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApiTokenDto'
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - API Tokens
    get:
      operationId: ApiTokensController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - API Tokens
  /organizations/{orgname}/api-tokens/{id}:
    get:
      operationId: ApiTokensController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - API Tokens
    delete:
      operationId: ApiTokensController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - API Tokens
    patch:
      operationId: ApiTokensController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - API Tokens
  /organizations/{orgname}/members/join:
    post:
      operationId: MembersController_join
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
  /organizations/{orgname}/members:
    post:
      operationId: MembersController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
    get:
      operationId: MembersController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
  /organizations/{orgname}/members/{id}:
    get:
      operationId: MembersController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
    delete:
      operationId: MembersController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
    patch:
      operationId: MembersController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Members
  /organizations/{orgname}/labels:
    post:
      operationId: LabelsController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Labels
    get:
      operationId: LabelsController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Labels
  /organizations/{orgname}/labels/{id}:
    get:
      operationId: LabelsController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Labels
    delete:
      operationId: LabelsController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Labels
    patch:
      operationId: LabelsController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Labels
  /organizations/{orgname}/storage/delete:
    delete:
      description: >-
        This endpoint will delete a file or directory in the organization's
        secure storage at the specified path. ADMIN ONLY.
      operationId: StorageController_delete
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: path
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Path was successfully deleted
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearer: []
      summary: Delete file or directory
      tags:
        - Storage
  /organizations/{orgname}/storage/read:
    post:
      description: >-
        This endpoint will return a url for reading a file in the organization's
        secure storage. It will be valid for 15 minutes. ADMIN ONLY.
      operationId: StorageController_getReadUrl
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathDto'
      responses:
        '201':
          description: Read  url was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadUrlDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearer: []
      summary: Read file
      tags:
        - Storage
  /organizations/{orgname}/storage/write:
    post:
      description: >-
        This endpoint will return a url for writing to a file location in the
        organization's secure storage. You must write your file to the url
        returned by this endpoint. If you use is isDir param, it will create a
        directory instead of a file and you do not need to write to the url.
        ADMIN ONLY.
      operationId: StorageController_getWriteUrl
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathDto'
      responses:
        '201':
          description: Write urls was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WriteUrlDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearer: []
      summary: Write file
      tags:
        - Storage
  /organizations/{orgname}/storage/items:
    get:
      description: >-
        This endpoint will return a list of files and directories in the
        organization's secure storage at the specified path. ADMIN ONLY.
      operationId: StorageController_listDirectory
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: path
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Path was successfully retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StorageItemDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - bearer: []
      summary: Show directory
      tags:
        - Storage
  /organizations/{orgname}/content:
    post:
      operationId: ContentController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Content
    get:
      operationId: ContentController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Content
  /organizations/{orgname}/content/{id}:
    get:
      operationId: ContentController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Content
    delete:
      operationId: ContentController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Content
    patch:
      operationId: ContentController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Content
  /organizations/{orgname}/runs:
    post:
      operationId: RunsController_create
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      security:
        - bearer: []
      tags:
        - Runs
    get:
      operationId: RunsController_findAll
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: aggregates
          required: false
          in: query
          description: Aggregates to collect for the search results
          schema:
            default: []
            type: array
            items: {}
        - name: filters
          required: false
          in: query
          description: Filter fields and values
          schema:
            default: []
            type: array
            items: {}
        - name: limit
          required: false
          in: query
          description: The limit of the number of results returned
          schema:
            default: 10
            type: number
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Runs
  /organizations/{orgname}/runs/{id}:
    get:
      operationId: RunsController_findOne
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Runs
    delete:
      operationId: RunsController_remove
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Runs
    patch:
      operationId: RunsController_update
      parameters:
        - name: orgname
          required: true
          in: path
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      security:
        - bearer: []
      tags:
        - Runs
info:
  title: Arches AI API
  description: The Arches AI API
  version: v1
  contact: {}
tags: []
servers:
  - url: https://arches-api.test
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    ConfirmationTokenDto:
      type: object
      properties:
        token:
          type: string
          description: >-
            The token used to verify your authorization event. This token is
            generated by the server and sent to the user's email.
          example: supersecre
      required:
        - token
    EmailRequestDto:
      type: object
      properties:
        email:
          type: string
          description: The e-mail to send the confirmation token to
          example: user@archesai.com
      required:
        - email
    LoginDto:
      type: object
      properties:
        email:
          type: string
          description: The user's e-mail
          example: example@archesai.com
        password:
          type: string
          description: The password to create and/or login to an account
          example: password
          minLength: 7
      required:
        - email
        - password
    ConfirmationTokenWithNewPasswordDto:
      type: object
      properties:
        token:
          type: string
          description: >-
            The token used to verify your authorization event. This token is
            generated by the server and sent to the user's email.
          example: supersecre
        newPassword:
          type: string
          description: The new password
          example: newPassword
      required:
        - token
        - newPassword
    RegisterDto:
      type: object
      properties:
        email:
          type: string
          description: The user's e-mail
          example: example@archesai.com
        password:
          type: string
          description: The password to create and/or login to an account
          example: password
          minLength: 7
      required:
        - email
        - password
    UpdateUserDto:
      type: object
      properties:
        defaultOrgname:
          type: string
          description: The user's default organization name
          example: my-organization
        firstName:
          type: string
          description: The user's first name
          example: John
        lastName:
          type: string
          description: The user's last name
          example: Smith
    CreateOrganizationDto:
      type: object
      properties:
        billingEmail:
          type: string
          description: The billing email to use for the organization
          example: example@test.com
        orgname:
          type: string
          description: The name of the organization to create
          example: organization-name
      required:
        - billingEmail
        - orgname
    UpdateOrganizationDto:
      type: object
      properties:
        billingEmail:
          type: string
          description: The billing email to use for the organization
          example: example@test.com
      required:
        - billingEmail
    CreateApiTokenDto:
      type: object
      properties: {}
    PathDto:
      type: object
      properties:
        isDir:
          type: boolean
          default: false
          description: Whether or not this path points to a directory
          example: false
        path:
          type: string
          description: The path that the file should upload to
          example: /location/in/storage
      required:
        - path
    ReadUrlDto:
      type: object
      properties:
        read:
          type: string
          description: >-
            A read-only url that you can use to download the file from secure
            storage
          example: www.example.com?token=read-token
      required:
        - read
    WriteUrlDto:
      type: object
      properties:
        write:
          type: string
          description: A write-only url that you can use to upload a file to secure storage
          example: www.example.com?token=write-token
      required:
        - write
    StorageItemDto:
      type: object
      properties:
        createdAt:
          format: date-time
          type: string
          description: Whether or not this is a directory
          example: true
        id:
          type: string
          description: The id of the storage item
          example: '14'
        isDir:
          type: boolean
          description: Whether or not this is a directory
          example: true
        name:
          type: string
          description: The path that the file is located in
          example: /location/in/storage
        size:
          type: number
          description: The size of the item in bytes
          example: 12341234
      required:
        - createdAt
        - id
        - isDir
        - name
        - size
    FieldFieldQuery:
      type: object
      properties:
        field:
          type: string
          description: Field to filter by
        operator:
          type: string
          description: Operator to use for filtering
          enum:
            - contains
            - endsWith
            - equals
            - every
            - in
            - none
            - not
            - some
            - startsWith
        value:
          description: Value to filter for
          oneOf:
            - type: string
            - items:
                type: string
              type: array
      required:
        - field
        - value
    AggregateFieldQuery:
      type: object
      properties:
        field:
          type: string
          description: Field to aggregate by
      required:
        - field
    AggregateFieldResult:
      type: object
      properties:
        field:
          type: string
          description: Field to aggregate by
        value:
          type: number
          description: The value of the aggregate
          example: 10
      required:
        - field
        - value
    Metadata:
      type: object
      properties:
        limit:
          type: number
          description: The number of results per page
          example: 10
        offset:
          type: number
          description: The current page
          example: 1
        totalResults:
          type: number
          description: The total number of results
          example: 100
      required:
        - limit
        - offset
        - totalResults
