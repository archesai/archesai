{{- if ne .Values.database.mode "disabled" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "arches.fullname" . }}-database
  namespace: {{ .Values.infrastructure.namespace }}
  labels:
    {{- include "arches.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if eq .Values.database.mode "managed" }}
  DATABASE_URL: {{ printf "postgres://postgres:%s@%s-postgres:5432/%s" .Values.database.auth.password (include "arches.fullname" .) .Values.database.auth.database | b64enc }}
  {{- else }}
  DATABASE_URL: {{ .Values.database.url | b64enc }}
  {{- end }}
{{- end }}
---
{{- if eq .Values.storage.mode "managed" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "arches.fullname" . }}-storage
  namespace: {{ .Values.infrastructure.namespace }}
  labels:
    {{- include "arches.labels" . | nindent 4 }}
type: Opaque
data:
  MINIO_ROOT_USER: {{ .Values.storage.accesskey | b64enc }}
  MINIO_ROOT_PASSWORD: {{ .Values.storage.secretkey | b64enc }}
---
{{- end }}
{{- if .Values.redis.auth }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "arches.fullname" . }}-redis
  namespace: {{ .Values.infrastructure.namespace }}
  labels:
    {{- include "arches.labels" . | nindent 4 }}
type: Opaque
data:
  REDIS_PASSWORD: {{ .Values.redis.auth | b64enc }}
{{- end }}