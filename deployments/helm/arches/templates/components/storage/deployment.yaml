{{- if eq .Values.storage.mode "managed" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "arches.fullname" . }}-minio
  namespace: {{ .Values.infrastructure.namespace }}
  labels:
    {{- include "arches.labels" . | nindent 4 }}
    app.kubernetes.io/component: storage
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "arches.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: storage
  template:
    metadata:
      labels:
        {{- include "arches.labels" . | nindent 8 }}
        app.kubernetes.io/component: storage
    spec:
      {{- with .Values.infrastructure.images.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "arches.serviceAccountName" . }}
      containers:
        - name: minio
          image: "{{ .Values.infrastructure.images.imageRegistry }}{{ .Values.storage.image.repository }}:{{ .Values.storage.image.tag }}"
          imagePullPolicy: {{ .Values.storage.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9001
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "arches.fullname" . }}-storage
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "arches.fullname" . }}-storage
                  key: MINIO_ROOT_PASSWORD
          {{- if .Values.storage.persistence.enabled }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- end }}
          resources:
            {{- toYaml .Values.storage.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 30
            periodSeconds: 10
      {{- if .Values.storage.persistence.enabled }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "arches.fullname" . }}-minio
      {{- end }}
{{- end }}