apiVersion: apps/v1
kind: Deployment
metadata:
  name: archesai-storage
  labels:
    app.kubernetes.io/name: archesai
    app.kubernetes.io/component: storage
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: archesai
      app.kubernetes.io/component: storage
  template:
    metadata:
      labels:
        app.kubernetes.io/name: archesai
        app.kubernetes.io/component: storage
    spec:
      serviceAccountName: archesai
      containers:
        - name: minio
          image: minio/minio:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9001
          ports:
            - name: api
              containerPort: 9000
              protocol: TCP
            - name: console
              containerPort: 9001
              protocol: TCP
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: archesai-storage
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: archesai-storage
                  key: MINIO_ROOT_PASSWORD
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits:
              memory: '512Mi'
              cpu: '250m'
            requests:
              memory: '256Mi'
              cpu: '100m'
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: api
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: api
            initialDelaySeconds: 30
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: archesai-storage
