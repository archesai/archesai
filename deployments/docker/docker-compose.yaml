services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: prod
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    environment:
      APP_ENV: ${APP_ENV}
      PORT: ${PORT}
      ARCHESAI_DATABASE_HOST: postgres
      ARCHESAI_DATABASE_PORT: 5432
      ARCHESAI_DATABASE_NAME: ${ARCHESAI_DATABASE_NAME:-archesai}
      ARCHESAI_DATABASE_USERNAME: ${ARCHESAI_DATABASE_USERNAME:-archesai}
      ARCHESAI_DATABASE_PASSWORD: ${ARCHESAI_DATABASE_PASSWORD:-password}
      ARCHESAI_REDIS_HOST: redis
      ARCHESAI_REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - 5173:5173
  postgres:
    image: pgvector/pgvector:pg16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${ARCHESAI_DATABASE_NAME:-archesai}
      POSTGRES_USER: ${ARCHESAI_DATABASE_USERNAME:-archesai}
      POSTGRES_PASSWORD: ${ARCHESAI_DATABASE_PASSWORD:-password}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          'CMD-SHELL',
          "sh -c 'pg_isready -U ${ARCHESAI_DATABASE_USERNAME:-archesai} -d ${ARCHESAI_DATABASE_NAME:-archesai}'",
        ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:
