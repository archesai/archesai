name: Create GCP Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true
        default: "v0.0.0"

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up YQ for YAML manipulation
        run: |
          sudo wget -O /usr/bin/yq https://github.com/mikefarah/yq/releases/download/v4.13.2/yq_linux_amd64
          sudo chmod +x /usr/bin/yq

      - name: Update image tags in Docker Compose
        run: |
          yq eval '.services.arches-api.image = "us-east4-docker.pkg.dev/archesai/images/arches-api:${{ env.API_SHA }}"' -i docker-compose.yaml
          yq eval '.services.arches-nlp.image = "us-east4-docker.pkg.dev/archesai/images/arches-nlp:${{ env.NLP_SHA }}"' -i docker-compose.yaml
          yq eval '.services.arches-ui.image = "us-east4-docker.pkg.dev/archesai/images/arches-ui:${{ env.UI_SHA }}"' -i docker-compose.yaml
        env:
          UI_SHA: ${{ needs.extract-sha.outputs.ui_sha }}
          API_SHA: ${{ needs.extract-sha.outputs.api_sha }}
          NLP_SHA: ${{ needs.extract-sha.outputs.nlp_sha }}

      - name: Download API repo
        uses: actions/checkout@v2
        with:
          repository: archesai/api
          token: ${{ secrets.PAT }}
          path: ./api

      - name: Write env file and create fake one for ui so docker compose doesn't fail
        run: |
          echo "${{ secrets.DEV_ENV_FILE }}" > ./api/.env.minimal
          mkdir ui
          echo "" > ./ui/.env.minimal

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: ${{ secrets.SA }}

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.1.1
        with:
          project_id: archesai

      - name: Log into registry
        run: |
          gcloud auth configure-docker \
            us-west2-docker.pkg.dev

      - name: Run e2e tests
        run: |
          PROFILE=minimal docker compose up -d arches-api arches-nlp arches-postgres arches-redis arches-firebase
          PROFILE=minimal docker compose -f docker-compose.yaml -f docker-compose.dev.yaml up arches-api-test-e2e --build
