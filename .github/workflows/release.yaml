name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup build environment
        uses: ./.github/actions/setup-build-env

      - name: Build project
        uses: ./.github/actions/build-project
        with:
          test-type: 'full'

      - name: Setup Docker
        uses: ./.github/actions/docker-setup
        with:
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: |
          # Extract version from tag (e.g., v1.0.0 -> 1.0.0)
          VERSION=${GITHUB_REF#refs/tags/}
          COMMIT_SHA=$(git rev-parse --short HEAD)

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "commit_sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "tag_name=$VERSION" >> $GITHUB_OUTPUT

          echo "Stable release version: $VERSION"
          echo "Commit SHA: $COMMIT_SHA"

      - name: Import GPG key
        id: import_gpg
        if: ${{ env.GPG_PRIVATE_KEY != '' }}
        uses: ./.github/actions/gpg-import
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Run GoReleaser
        id: goreleaser
        uses: ./.github/actions/goreleaser-run
        with:
          mode: 'release'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          gpg-fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}

      - name: Update Docker Repository Description
        uses: peter-evans/dockerhub-description@v5
        if: ${{ env.DOCKERHUB_USERNAME != '' }}
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: archesai/archesai
          short-description: 'AI-powered data processing platform'
          readme-filepath: ./README.md
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Notify on failure
        if: failure()
        run: |
          echo "::error::Stable release failed for ${{ steps.version.outputs.version }}. Check logs for details."
