name: Build and Tag Service

on:
  workflow_call:
    inputs:
      service:
        description: 'Name of the service to build and tag (e.g., api, ui)'
        required: true
        type: string

env:
  GCP_PROJECT_ID: archesai

jobs:
  build-and-tag:
    name: Build and Tag ${{ inputs.service }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Delete huge unnecessary tools folder
        run: rm -rf /opt/hostedtoolcache

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: access_token
          workload_identity_provider: projects/1080946766516/locations/global/workloadIdentityPools/github/providers/my-repo
          project_id: ${{ env.GCP_PROJECT_ID }}
          service_account: github-actions-artifact-regist@archesai.iam.gserviceaccount.com

      - name: Set Up GCP CLI
        uses: google-github-actions/setup-gcloud@v2

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: us-east4-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Get previous commit
        id: prev-commit
        run: |
          PREV_COMMIT=$(git rev-list -n 1 HEAD^1)
          echo "PREV_COMMIT=$PREV_COMMIT" >> $GITHUB_ENV

      - name: Check for Changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          base: ${{ env.PREV_COMMIT }}
          filters: |
            service:
              - '${{ inputs.service }}/**'

      - name: Set up Docker Buildx
        if: steps.changes.outputs.service == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        if: steps.changes.outputs.service == 'true'
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: us-east4-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/images/${{ inputs.service }}:latest
          cache-from: type=registry,ref=us-east4-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/images/${{ inputs.service }}:buildcache
          cache-to: type=registry,ref=us-east4-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/images/${{ inputs.service }}:buildcache,mode=max
          context: '{{defaultContext}}:${{ inputs.service }}'

      - name: Tag Image
        run: |
          gcloud container images add-tag \
            us-east4-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/images/${{ inputs.service }}:latest \
            us-east4-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/images/${{ inputs.service }}:${{ github.sha }}
