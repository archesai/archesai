name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - dev

env:
  SHORT_SHA: ${{ github.sha }}
  GCP_PROJECT_ID: archesai

jobs:
  lint-and-format:
    name: Typecheck, Build, Lint
    runs-on: ubuntu-latest
    # To use Remote Caching, uncomment the next lines and follow the steps below.
    # env:
    #  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
    #  TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          CI: true

      - name: Typecheck
        run: pnpm typecheck

      - name: Lint
        run: pnpm lint

      - name: Build
        run: pnpm build

  # unit-test:
  #   name: Unit Test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4

  #     - name: Setup node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #         cache: 'pnpm'
  #         cache-dependency-path: pnpm-lock.yaml

  #     - name: Install node_modules
  #       run: pnpm install --frozen-lockfile

  #     - name: Lint and Typecheck
  #       run: make test

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     id-token: write
  #   steps:
  #     - uses: actions/checkout@v4

  #     # - name: Install google-cloud-cli-gke-gcloud-auth-plugin
  #     #   run: |
  #     #     sudo apt-get update
  #     #     sudo apt-get install google-cloud-cli-gke-gcloud-auth-plugin

  #     - name: Create GKE Release
  #       run: |
  #         # gcloud components install gke-gcloud-auth-plugin
  #         # gcloud container clusters get-credentials archesai-cluster --zone us-east1-c --project archesai
  #         gcloud deploy releases create ${{ github.sha }} \
  #             --project=archesai \
  #             --region=us-east1 \
  #             --delivery-pipeline=archesai-deployment \
  #             --images=us-east4-docker.pkg.dev/archesai/images/api=us-east4-docker.pkg.dev/archesai/images/api:${{ github.sha }},us-east4-docker.pkg.dev/archesai/images/platform=us-east4-docker.pkg.dev/archesai/images/platform:${{ github.sha }} \
  #             --skaffold-file=skaffold.yaml

  #     - name: Check Deployment Status
  #       run: |
  #         deployment_status=""
  #         while [[ "$deployment_status" != "SUCCEEDED" && "$deployment_status" != "FAILED" ]]; do
  #           deployment_status=$(gcloud deploy rollouts list \
  #             --release ${{ github.sha }} \
  #             --project=archesai \
  #             --region=us-east1 \
  #             --delivery-pipeline=archesai-deployment \
  #             --format="value(state)")
  #           echo "Current deployment status: $deployment_status"
  #           sleep 10
  #         done
  #         if [ "$deployment_status" == "FAILED" ]; then
  #           echo "Deployment failed."
  #           exit 1
  #         fi
  #         echo "Deployment succeeded."
