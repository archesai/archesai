# yaml-language-server: $schema=api/components/schemas/CodegenConfig.yaml
openapi: api/openapi.bundled.yaml
output: internal

# Clean Architecture: Generated code goes in adapters/ subdirectory
# Following hexagonal architecture - these are infrastructure adapters
# Paths are relative to the domain directory (e.g., internal/auth/adapters/)
generators:
  # SQL generation - Generate SQL schemas and queries from OpenAPI
  sql:
    schema_dir: 'internal/database/schema' # SQL schema files (CREATE TABLE, etc.)
    query_dir: 'internal/database/queries' # SQLC query files
    dialect: 'postgresql' # or 'sqlite'

  # Repository pattern - Generate interfaces and implementations
  repository:
    interface: 'repository.gen.go' # Domain interfaces (ports)
    postgres: 'postgres.gen.go' # PostgreSQL implementation with SQLC
    sqlite: 'sqlite.gen.go' # SQLite implementation with SQLC

  # Cache adapters - Generate cache interfaces and implementations
  cache:
    interface: 'cache.gen.go' # Domain cache interface
    # redis: 'adapters/cache/redis.gen.go' # Redis implementation (future)
    # memory: 'adapters/cache/memory.gen.go' # In-memory implementation (future)

  # Event publishing adapters - only generate domain event types
  events:
    interface: 'events.gen.go'
    # redis: 'adapters/events/redis.gen.go' # Now using shared publisher in internal/events
    # nats: "events_nats.gen.go" # Requires NATS dependency

  # HTTP handlers (infrastructure/delivery)
  handlers: 'adapters/http/handlers.gen.go'

  # Type mappers between layers
  adapters: 'adapters/mappers/mappers.gen.go'

  # Test files generation
  tests:
    unit: 'adapters/tests/service_test.gen.go'
    integration: 'adapters/tests/integration_test.gen.go'
    mocks: 'adapters/tests/mocks.gen.go'

  # Global configuration defaults (path relative to project root)
  defaults: './internal/config/defaults.gen.go'
