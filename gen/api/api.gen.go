// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"oOvJoWyYN6jacRMWvb//fwEAAP//gUWD7zXGAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
